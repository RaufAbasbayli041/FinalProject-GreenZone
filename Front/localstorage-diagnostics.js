// –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ localStorage - —á—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç–∞–º –Ω–∞—Ö–æ–¥–∏—Ç—Å—è
console.log('üîç –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ localStorage');

function analyzeLocalStorage() {
  console.log('\nüìã –ê–Ω–∞–ª–∏–∑ localStorage:');
  console.log('localStorage.length:', localStorage.length);
  console.log('localStorage keys:', Object.keys(localStorage));
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π –∫–ª—é—á
  Object.keys(localStorage).forEach(key => {
    const value = localStorage.getItem(key);
    console.log(`\nüîë –ö–ª—é—á: "${key}"`);
    console.log('–î–ª–∏–Ω–∞ –∑–Ω–∞—á–µ–Ω–∏—è:', value ? value.length : 0);
    console.log('–¢–∏–ø –∑–Ω–∞—á–µ–Ω–∏—è:', typeof value);
    
    if (key === 'auth_token') {
      console.log('‚úÖ –ù–∞–π–¥–µ–Ω auth_token!');
      console.log('–ó–Ω–∞—á–µ–Ω–∏–µ:', value);
    } else if (key.includes('auth') || key.includes('token') || key.includes('user')) {
      console.log('üîç –í–æ–∑–º–æ–∂–Ω–æ —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π –∫–ª—é—á');
      console.log('–ó–Ω–∞—á–µ–Ω–∏–µ:', value);
    } else {
      console.log('üìÑ –û–±—ã—á–Ω—ã–π –∫–ª—é—á');
      console.log('–ó–Ω–∞—á–µ–Ω–∏–µ (–ø–µ—Ä–≤—ã–µ 100 —Å–∏–º–≤–æ–ª–æ–≤):', value ? value.substring(0, 100) + '...' : '–ø—É—Å—Ç–æ–µ');
    }
  });
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–æ–∫–µ–Ω –ø–æ–¥ –¥—Ä—É–≥–∏–º –∏–º–µ–Ω–µ–º
  const possibleTokenKeys = ['token', 'jwt', 'access_token', 'bearer_token', 'authToken'];
  possibleTokenKeys.forEach(key => {
    const value = localStorage.getItem(key);
    if (value) {
      console.log(`\nüéØ –ù–∞–π–¥–µ–Ω –≤–æ–∑–º–æ–∂–Ω—ã–π —Ç–æ–∫–µ–Ω –ø–æ–¥ –∫–ª—é—á–æ–º "${key}":`, value.substring(0, 50) + '...');
    }
  });
}

function checkAuthState() {
  console.log('\nüîê –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  const authState = localStorage.getItem('authState');
  if (authState) {
    try {
      const parsed = JSON.parse(authState);
      console.log('‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', parsed);
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ authState:', error);
    }
  } else {
    console.log('‚ùå authState –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ localStorage');
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—Ä—É–≥–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∫–ª—é—á–∏ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
  const possibleStateKeys = ['user', 'auth', 'session', 'login'];
  possibleStateKeys.forEach(key => {
    const value = localStorage.getItem(key);
    if (value) {
      console.log(`\nüîç –ù–∞–π–¥–µ–Ω –∫–ª—é—á "${key}":`, value.substring(0, 100) + '...');
    }
  });
}

function simulateLogin() {
  console.log('\nüîÑ –°–∏–º—É–ª—è—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞:');
  
  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–æ–∫–µ–Ω
  const testPayload = {
    sub: 'test-user-id',
    email: 'test@example.com',
    'http://schemas.xmlsoap.org/ws/2005/05/identity/claims/role': 'Customer',
    exp: Math.floor(Date.now() / 1000) + 3600, // 1 —á–∞—Å
    iat: Math.floor(Date.now() / 1000)
  };
  
  const header = btoa(JSON.stringify({ alg: 'HS256', typ: 'JWT' }));
  const payload = btoa(JSON.stringify(testPayload));
  const signature = btoa('test-signature');
  const testToken = `${header}.${payload}.${signature}`;
  
  console.log('–¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–∫–µ–Ω —Å–æ–∑–¥–∞–Ω:', testToken.substring(0, 50) + '...');
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω
  localStorage.setItem('auth_token', testToken);
  console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–∫–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ localStorage');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–Ω —Å–æ—Ö—Ä–∞–Ω–∏–ª—Å—è
  const savedToken = localStorage.getItem('auth_token');
  console.log('–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', savedToken ? '‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω' : '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω');
  
  if (savedToken) {
    console.log('–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω:', savedToken.substring(0, 50) + '...');
  }
}

function clearAndTest() {
  console.log('\nüßπ –û—á–∏—Å—Ç–∫–∞ –∏ —Ç–µ—Å—Ç:');
  
  // –û—á–∏—â–∞–µ–º –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
  const keysToRemove = ['auth_token', 'authState', 'user', 'auth', 'session'];
  keysToRemove.forEach(key => {
    if (localStorage.getItem(key)) {
      localStorage.removeItem(key);
      console.log(`‚úÖ –£–¥–∞–ª–µ–Ω –∫–ª—é—á: ${key}`);
    }
  });
  
  console.log('localStorage –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏:', Object.keys(localStorage));
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
window.localStorageDiagnostics = {
  analyzeLocalStorage,
  checkAuthState,
  simulateLogin,
  clearAndTest
};

console.log('\nüìù –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:');
console.log('- localStorageDiagnostics.analyzeLocalStorage() - –ê–Ω–∞–ª–∏–∑ localStorage');
console.log('- localStorageDiagnostics.checkAuthState() - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
console.log('- localStorageDiagnostics.simulateLogin() - –°–∏–º—É–ª—è—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞');
console.log('- localStorageDiagnostics.clearAndTest() - –û—á–∏—Å—Ç–∫–∞ –∏ —Ç–µ—Å—Ç');

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑
analyzeLocalStorage();
checkAuthState();
