// –¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞ –≤ localStorage
console.log('üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ç–æ–∫–µ–Ω–∞ –≤ localStorage');

function checkToken() {
  console.log('\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ localStorage:');
  console.log('localStorage keys:', Object.keys(localStorage));
  console.log('localStorage size:', localStorage.length);
  
  const token = localStorage.getItem('auth_token');
  console.log('\nüîë –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞:');
  console.log('hasToken:', !!token);
  console.log('tokenLength:', token ? token.length : 0);
  
  if (token) {
    console.log('tokenPreview:', token.substring(0, 50) + '...');
    
    try {
      const parts = token.split('.');
      console.log('tokenParts:', parts.length);
      
      if (parts.length === 3) {
        const header = JSON.parse(atob(parts[0]));
        const payload = JSON.parse(atob(parts[1]));
        
        console.log('\nüìÑ –ê–Ω–∞–ª–∏–∑ —Ç–æ–∫–µ–Ω–∞:');
        console.log('header:', header);
        console.log('payload:', payload);
        console.log('userId (sub):', payload.sub);
        console.log('email:', payload.email);
        console.log('role:', payload['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/role']);
        console.log('exp:', payload.exp);
        console.log('isExpired:', payload.exp ? payload.exp < Math.floor(Date.now() / 1000) : 'unknown');
      } else {
        console.log('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç JWT —Ç–æ–∫–µ–Ω–∞');
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ç–æ–∫–µ–Ω–∞:', error);
    }
  } else {
    console.log('‚ùå –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ localStorage');
  }
}

function testBasketAPI() {
  console.log('\nüõí –¢–µ—Å—Ç basket API:');
  
  // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ basket-api
  import('./services/basket-api.js').then(module => {
    console.log('‚úÖ basket-api –º–æ–¥—É–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω');
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
    const testCustomerId = 'test-customer-id';
    console.log('–¢–µ—Å—Ç–∏—Ä—É–µ–º getBasketByCustomerId —Å customerId:', testCustomerId);
    
    module.getBasketByCustomerId(testCustomerId)
      .then(basket => {
        console.log('‚úÖ –ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–ª—É—á–µ–Ω–∞:', basket);
      })
      .catch(error => {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã:', error);
      });
  }).catch(error => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥—É–ª—è:', error);
  });
}

function clearAndRelogin() {
  console.log('\nüîÑ –û—á–∏—Å—Ç–∫–∞ –∏ –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω:');
  
  // –û—á–∏—â–∞–µ–º localStorage
  localStorage.removeItem('auth_token');
  console.log('‚úÖ localStorage –æ—á–∏—â–µ–Ω');
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
  console.log('üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:');
  console.log('1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞');
  console.log('2. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É');
  console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω —Å–Ω–æ–≤–∞');
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
window.tokenDiagnostics = {
  checkToken,
  testBasketAPI,
  clearAndRelogin
};

console.log('\nüìù –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:');
console.log('- tokenDiagnostics.checkToken() - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–æ–∫–µ–Ω');
console.log('- tokenDiagnostics.testBasketAPI() - –¢–µ—Å—Ç basket API');
console.log('- tokenDiagnostics.clearAndRelogin() - –û—á–∏—Å—Ç–∏—Ç—å –∏ –ø–µ—Ä–µ–ª–æ–≥–∏–Ω–∏—Ç—å—Å—è');

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
checkToken();
