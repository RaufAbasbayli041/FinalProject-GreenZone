// –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞
console.log('üß™ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞');

function testOrderCreation() {
  console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞:');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
  const token = localStorage.getItem('auth_token');
  console.log('–¢–æ–∫–µ–Ω:', token ? '‚úÖ –ù–∞–π–¥–µ–Ω' : '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  const authState = localStorage.getItem('authState');
  if (authState) {
    try {
      const parsed = JSON.parse(authState);
      console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω:', parsed.isAuthenticated ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç');
      if (parsed.user) {
        console.log('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', {
          id: parsed.user.id,
          name: parsed.user.name,
          role: parsed.user.role
        });
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ authState:', error);
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä–∑–∏–Ω—É
  const cartState = localStorage.getItem('cartState');
  if (cartState) {
    try {
      const parsed = JSON.parse(cartState);
      console.log('–ö–æ—Ä–∑–∏–Ω–∞:', parsed.items ? `‚úÖ ${parsed.items.length} —Ç–æ–≤–∞—Ä–æ–≤` : '‚ùå –ü—É—Å—Ç–∞—è');
      if (parsed.items && parsed.items.length > 0) {
        console.log('–¢–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω–µ:', parsed.items.map(item => ({
          productId: item.productId,
          quantity: item.quantity
        })));
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ cartState:', error);
    }
  }
}

function createTestOrder() {
  console.log('\nüì¶ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞:');
  
  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞
  const testOrderData = {
    customerId: '89e0314f-c639-4a53-ac64-b555a702a317', // –ò–∑ –ª–æ–≥–æ–≤
    orderItems: [
      {
        productId: 'da83d42d-1208-4f6c-b8b9-6863eaf467cd', // –ò–∑ –ª–æ–≥–æ–≤
        quantity: 1,
        price: 100
      }
    ],
    totalAmount: 100,
    status: 'Pending',
    deliveryAddress: '–¢–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å',
    phoneNumber: '+1234567890'
  };
  
  console.log('–î–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞:', testOrderData);
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
  fetch('https://localhost:7100/api/Order', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Authorization': `Bearer ${localStorage.getItem('auth_token')}`
    },
    body: JSON.stringify(testOrderData)
  })
  .then(response => {
    console.log('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', {
      status: response.status,
      statusText: response.statusText,
      headers: Object.fromEntries(response.headers.entries())
    });
    
    if (response.ok) {
      return response.json();
    } else {
      return response.text().then(text => {
        throw new Error(`HTTP ${response.status}: ${text}`);
      });
    }
  })
  .then(data => {
    console.log('‚úÖ –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω:', data);
  })
  .catch(error => {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞:', error.message);
    
    if (error.message.includes('500')) {
      console.log('\nüîß –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—à–∏–±–∫–∏ 500:');
      console.log('–ü—Ä–æ–±–ª–µ–º–∞ –Ω–∞ backend - –≤–æ–∑–º–æ–∂–Ω–æ:');
      console.log('1. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç –≤ CreatedAtActionResult');
      console.log('2. –ü—Ä–æ–±–ª–µ–º–∞ —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π –¥–∞–Ω–Ω—ã—Ö');
      console.log('3. –û—à–∏–±–∫–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
      console.log('4. –ü—Ä–æ–±–ª–µ–º–∞ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π –Ω–∞ backend');
    }
  });
}

function checkBackendStatus() {
  console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ backend:');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
  fetch('https://localhost:7100/api/Product')
    .then(response => {
      console.log('API –¥–æ—Å—Ç—É–ø–µ–Ω:', response.ok ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç');
      console.log('–°—Ç–∞—Ç—É—Å:', response.status);
    })
    .catch(error => {
      console.error('‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error.message);
    });
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º Swagger
  fetch('https://localhost:7100/swagger')
    .then(response => {
      console.log('Swagger –¥–æ—Å—Ç—É–ø–µ–Ω:', response.ok ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç');
    })
    .catch(error => {
      console.error('‚ùå Swagger –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error.message);
    });
}

function simulateOrderSuccess() {
  console.log('\nüéâ –°–∏–º—É–ª—è—Ü–∏—è —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞:');
  
  // –°–æ–∑–¥–∞–µ–º —Ñ–∏–∫—Ç–∏–≤–Ω—ã–π —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
  const mockOrder = {
    id: 'test-order-123',
    customerId: '89e0314f-c639-4a53-ac64-b555a702a317',
    orderItems: [
      {
        id: 'test-item-123',
        productId: 'da83d42d-1208-4f6c-b8b9-6863eaf467cd',
        quantity: 1,
        price: 100
      }
    ],
    totalAmount: 100,
    status: 'Pending',
    createdAt: new Date().toISOString()
  };
  
  console.log('–§–∏–∫—Ç–∏–≤–Ω—ã–π –∑–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω:', mockOrder);
  console.log('‚úÖ –≠—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ frontend –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ —Å –∑–∞–∫–∞–∑–∞–º–∏');
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
window.orderTest = {
  testOrderCreation,
  createTestOrder,
  checkBackendStatus,
  simulateOrderSuccess
};

console.log('\nüìù –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:');
console.log('- orderTest.testOrderCreation() - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–∫–∞–∑–∞');
console.log('- orderTest.createTestOrder() - –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑');
console.log('- orderTest.checkBackendStatus() - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å backend');
console.log('- orderTest.simulateOrderSuccess() - –°–∏–º—É–ª—è—Ü–∏—è —É—Å–ø–µ—Ö–∞');

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
testOrderCreation();
checkBackendStatus();
