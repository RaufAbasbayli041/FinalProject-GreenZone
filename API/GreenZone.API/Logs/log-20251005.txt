2025-10-05 17:21:40.709 +04:00 [WRN] No store type was specified for the decimal property 'Quantity' on entity type 'OrderItem'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-10-05 17:21:41.155 +04:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-05 17:21:41.179 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-05 17:21:41.182 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-05 17:21:41.183 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-05 17:21:41.212 +04:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-10-05 17:21:41.222 +04:00 [INF] No migrations were applied. The database is already up to date.
2025-10-05 17:21:41.224 +04:00 [INF] Migrations applied
2025-10-05 17:21:41.462 +04:00 [INF] Executed DbCommand (53ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-05 17:21:41.487 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-05 17:21:41.488 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-05 17:21:41.501 +04:00 [INF] User profile is available. Using 'C:\Users\ASUS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-05 17:21:41.518 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-10-05 17:21:41.542 +04:00 [INF] Admin user already exists: admin@greenzone.com
2025-10-05 17:21:41.757 +04:00 [INF] Now listening on: https://localhost:7100
2025-10-05 17:21:41.790 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-05 17:21:41.790 +04:00 [INF] Hosting environment: Development
2025-10-05 17:21:41.790 +04:00 [INF] Content root path: C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API
2025-10-05 17:21:43.087 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger - null null
2025-10-05 17:21:43.233 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger - 301 0 null 147.247ms
2025-10-05 17:21:43.239 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/index.html - null null
2025-10-05 17:21:43.300 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/index.html - 200 null text/html;charset=utf-8 60.8715ms
2025-10-05 17:21:43.310 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/swagger-ui.css - null null
2025-10-05 17:21:43.310 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/swagger-ui-standalone-preset.js - null null
2025-10-05 17:21:43.310 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/swagger-ui-bundle.js - null null
2025-10-05 17:21:43.310 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_vs/browserLink - null null
2025-10-05 17:21:43.310 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - null null
2025-10-05 17:21:43.314 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - 200 16511 application/javascript; charset=utf-8 3.5221ms
2025-10-05 17:21:43.328 +04:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2025-10-05 17:21:43.328 +04:00 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2025-10-05 17:21:43.328 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/swagger-ui.css - 200 152034 text/css 18.3063ms
2025-10-05 17:21:43.328 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/swagger-ui-standalone-preset.js - 200 230280 text/javascript 18.2022ms
2025-10-05 17:21:43.350 +04:00 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2025-10-05 17:21:43.351 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/swagger-ui-bundle.js - 200 1456926 text/javascript 40.8469ms
2025-10-05 17:21:43.363 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_vs/browserLink - 200 null text/javascript; charset=UTF-8 53.4884ms
2025-10-05 17:21:43.540 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - null null
2025-10-05 17:21:43.573 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 32.9872ms
2025-10-05 17:22:19.313 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 17:22:19.313 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 17:22:19.317 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:22:19.317 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:22:19.319 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 5.3721ms
2025-10-05 17:22:19.319 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 5.3638ms
2025-10-05 17:22:19.326 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 17:22:19.326 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 17:22:19.329 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:22:19.329 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:22:19.363 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-05 17:22:19.363 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:22:19.364 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.528ms
2025-10-05 17:22:19.365 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 17:22:19.366 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:22:19.376 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:22:19.393 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 17:22:19.403 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:22:19'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:22:19.403 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:22:19'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:22:19.426 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:22:19'.
2025-10-05 17:22:19.426 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:22:19'.
2025-10-05 17:22:19.426 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:22:19.426 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:22:19.431 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 17:22:19.432 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 17:22:19.659 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-10-05 17:22:19.673 +04:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 17:22:19.675 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 17:22:19.685 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 17:22:19.694 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:22:19.713 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:22:19.728 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 331.6108ms
2025-10-05 17:22:19.728 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 293.7419ms
2025-10-05 17:22:19.729 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:22:19.729 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:22:19.731 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:22:19.732 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 366.6839ms
2025-10-05 17:22:19.732 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 406.0755ms
2025-10-05 17:22:19.734 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 302.4498ms
2025-10-05 17:22:19.734 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:22:19.734 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 408.7081ms
2025-10-05 17:22:19.743 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 17:22:19.743 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:22:19.743 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.5006ms
2025-10-05 17:22:19.745 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 17:22:19.745 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:22:19.745 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:22:19'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:22:19.746 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:22:19'.
2025-10-05 17:22:19.746 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:22:19.755 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 17:22:19.830 +04:00 [INF] Executed DbCommand (20ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 17:22:19.850 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 17:22:19.853 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 97.227ms
2025-10-05 17:22:19.853 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:22:19.854 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 108.9651ms
2025-10-05 17:22:38.037 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 17:22:38.037 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 17:22:38.037 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:22:38.037 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:22:38.037 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.5955ms
2025-10-05 17:22:38.037 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.5975ms
2025-10-05 17:22:38.043 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 17:22:38.043 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 17:22:38.043 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:22:38.043 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:22:38.044 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:22:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:22:38.044 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:22:38'.
2025-10-05 17:22:38.044 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:22:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:22:38.045 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:22:38.045 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:22:38'.
2025-10-05 17:22:38.045 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 17:22:38.045 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:22:38.045 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 17:22:38.053 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 17:22:38.053 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 17:22:38.055 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:22:38.055 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:22:38.055 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.928ms
2025-10-05 17:22:38.055 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:22:38.055 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.7518ms
2025-10-05 17:22:38.055 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:22:38.055 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 12.3596ms
2025-10-05 17:22:38.055 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 12.3716ms
2025-10-05 17:22:38.099 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-05 17:22:38.100 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:22:38.100 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.4335ms
2025-10-05 17:22:38.102 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 17:22:38.103 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:22:38.103 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:22:38.103 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 17:22:38.117 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 17:22:38.120 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:22:38.120 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 16.786ms
2025-10-05 17:22:38.120 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:22:38.121 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 18.4577ms
2025-10-05 17:22:38.137 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 17:22:38.137 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:22:38.137 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.4189ms
2025-10-05 17:22:38.140 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 17:22:38.140 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:22:38.141 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:22:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:22:38.141 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:22:38'.
2025-10-05 17:22:38.141 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:22:38.142 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 17:22:38.154 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 17:22:38.155 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 17:22:38.155 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 13.4861ms
2025-10-05 17:22:38.155 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:22:38.155 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 15.5758ms
2025-10-05 17:22:45.212 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 17:22:45.212 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 17:22:45.212 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:22:45.212 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:22:45.213 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.4534ms
2025-10-05 17:22:45.213 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.4407ms
2025-10-05 17:22:45.217 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 17:22:45.217 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:22:45.217 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 17:22:45.217 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:22:45.217 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:22:45'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:22:45.217 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:22:45'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:22:45.217 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:22:45'.
2025-10-05 17:22:45.218 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:22:45'.
2025-10-05 17:22:45.218 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:22:45.218 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:22:45.218 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 17:22:45.218 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 17:22:45.227 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 17:22:45.227 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 17:22:45.228 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:22:45.228 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.0809ms
2025-10-05 17:22:45.228 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:22:45.228 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:22:45.228 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 11.5562ms
2025-10-05 17:22:45.228 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 10.3708ms
2025-10-05 17:22:45.228 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:22:45.228 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 11.4194ms
2025-10-05 17:22:45.282 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-05 17:22:45.282 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:22:45.283 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.2446ms
2025-10-05 17:22:45.284 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 17:22:45.284 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:22:45.285 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:22:45.285 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 17:22:45.303 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 17:22:45.305 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:22:45.305 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 20.0452ms
2025-10-05 17:22:45.305 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:22:45.305 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 20.7157ms
2025-10-05 17:22:45.316 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 17:22:45.316 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:22:45.316 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.2602ms
2025-10-05 17:22:45.319 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 17:22:45.319 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:22:45.320 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:22:45'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:22:45.320 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:22:45'.
2025-10-05 17:22:45.320 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:22:45.320 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 17:22:45.333 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 17:22:45.334 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 17:22:45.334 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 13.4805ms
2025-10-05 17:22:45.334 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:22:45.334 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 14.8483ms
2025-10-05 17:25:33.217 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 17:25:33.217 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 17:25:33.217 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 17:25:33.217 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 17:25:33.217 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:33.217 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:33.217 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:33.217 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:33.218 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.6581ms
2025-10-05 17:25:33.218 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.6221ms
2025-10-05 17:25:33.218 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.6289ms
2025-10-05 17:25:33.218 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.2813ms
2025-10-05 17:25:33.226 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-05 17:25:33.226 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-05 17:25:33.226 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:33.226 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:33.226 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.3182ms
2025-10-05 17:25:33.226 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.2726ms
2025-10-05 17:25:33.230 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 17:25:33.230 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 17:25:33.230 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:33.230 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:33.230 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:33'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:25:33.230 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:33'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:25:33.231 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:33'.
2025-10-05 17:25:33.231 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:33'.
2025-10-05 17:25:33.231 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:25:33.231 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:25:33.231 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 17:25:33.231 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 17:25:33.231 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 17:25:33.232 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:33.232 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:25:33.232 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 17:25:33.239 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 17:25:33.239 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 17:25:33.239 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:25:33.239 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:25:33.239 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.0073ms
2025-10-05 17:25:33.239 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.0427ms
2025-10-05 17:25:33.240 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:25:33.240 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:25:33.240 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 10.1353ms
2025-10-05 17:25:33.240 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 10.136ms
2025-10-05 17:25:33.241 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 17:25:33.241 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 17:25:33.241 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:33.241 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:33.242 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:33'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:25:33.242 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:33'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:25:33.242 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:33'.
2025-10-05 17:25:33.242 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:33'.
2025-10-05 17:25:33.242 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 17:25:33.243 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:25:33.243 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:25:33.243 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 17:25:33.243 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 17:25:33.244 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:25:33.245 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 12.4217ms
2025-10-05 17:25:33.245 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:25:33.245 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 13.365ms
2025-10-05 17:25:33.245 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 17:25:33.245 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 17:25:33.245 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:25:33.245 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:25:33.245 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 2.3859ms
2025-10-05 17:25:33.245 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 2.3604ms
2025-10-05 17:25:33.245 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:25:33.245 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:25:33.245 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 4.7307ms
2025-10-05 17:25:33.245 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 4.7303ms
2025-10-05 17:25:33.246 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 17:25:33.247 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:33.247 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:25:33.247 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 17:25:33.250 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 17:25:33.250 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 17:25:33.250 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:33.251 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.2417ms
2025-10-05 17:25:33.252 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:25:33.252 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 5.0112ms
2025-10-05 17:25:33.252 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:25:33.252 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 5.902ms
2025-10-05 17:25:33.253 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 17:25:33.253 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:33.254 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:33'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:25:33.254 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:33'.
2025-10-05 17:25:33.254 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:25:33.254 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 17:25:33.266 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 17:25:33.267 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 17:25:33.267 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 12.3791ms
2025-10-05 17:25:33.267 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:25:33.267 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 13.7651ms
2025-10-05 17:25:33.271 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 17:25:33.271 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:33.272 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:33'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:25:33.272 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:33'.
2025-10-05 17:25:33.272 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:25:33.272 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 17:25:33.275 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 17:25:33.275 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 17:25:33.275 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 2.8121ms
2025-10-05 17:25:33.275 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:25:33.275 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 4.4717ms
2025-10-05 17:25:38.418 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 17:25:38.418 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 17:25:38.418 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:38.418 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:38.418 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.4801ms
2025-10-05 17:25:38.418 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.4779ms
2025-10-05 17:25:38.420 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 17:25:38.420 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:38.420 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.3466ms
2025-10-05 17:25:38.424 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 17:25:38.424 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:38.424 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.5085ms
2025-10-05 17:25:38.426 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 17:25:38.426 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 17:25:38.426 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:38.426 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:38.427 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:25:38.427 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:25:38.427 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:38'.
2025-10-05 17:25:38.428 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:38'.
2025-10-05 17:25:38.428 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:25:38.428 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:25:38.428 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 17:25:38.428 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 17:25:38.429 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-05 17:25:38.429 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:38.429 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.4121ms
2025-10-05 17:25:38.430 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-05 17:25:38.430 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:38.430 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.294ms
2025-10-05 17:25:38.431 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 17:25:38.431 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 17:25:38.432 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:25:38.432 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:25:38.432 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 4.1701ms
2025-10-05 17:25:38.432 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 4.1528ms
2025-10-05 17:25:38.432 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:25:38.432 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:25:38.432 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 6.4434ms
2025-10-05 17:25:38.432 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 6.4418ms
2025-10-05 17:25:38.433 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 17:25:38.433 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:38.434 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 17:25:38.434 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 17:25:38.434 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:25:38.434 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:38.434 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:38.434 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 17:25:38.434 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:25:38.434 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:25:38.435 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:38'.
2025-10-05 17:25:38.435 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:38'.
2025-10-05 17:25:38.435 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:25:38.435 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:25:38.435 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 17:25:38.435 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 17:25:38.438 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 17:25:38.438 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 17:25:38.438 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 17:25:38.438 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:25:38.438 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:25:38.438 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 3.1196ms
2025-10-05 17:25:38.438 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 3.1174ms
2025-10-05 17:25:38.438 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:25:38.438 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:25:38.438 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:25:38.438 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 4.6962ms
2025-10-05 17:25:38.438 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 4.7037ms
2025-10-05 17:25:38.439 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 4.4267ms
2025-10-05 17:25:38.439 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:25:38.439 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 5.4985ms
2025-10-05 17:25:38.440 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 17:25:38.440 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:38.440 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:25:38.441 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 17:25:38.443 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 17:25:38.445 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:25:38.445 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 4.1881ms
2025-10-05 17:25:38.445 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:25:38.445 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 5.1978ms
2025-10-05 17:25:38.457 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 17:25:38.457 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 17:25:38.458 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:38.458 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:38.458 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.8516ms
2025-10-05 17:25:38.458 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.8621ms
2025-10-05 17:25:38.461 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 17:25:38.462 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:38.462 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:25:38.462 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:38'.
2025-10-05 17:25:38.462 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:25:38.462 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 17:25:38.466 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 17:25:38.466 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 17:25:38.466 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 3.5406ms
2025-10-05 17:25:38.466 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:25:38.466 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 4.804ms
2025-10-05 17:25:38.468 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 17:25:38.468 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:38.468 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:25:38.468 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:38'.
2025-10-05 17:25:38.468 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:25:38.469 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 17:25:38.471 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 17:25:38.472 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 17:25:38.472 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 3.205ms
2025-10-05 17:25:38.472 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:25:38.472 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 4.5627ms
2025-10-05 17:25:50.561 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 17:25:50.562 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:50.562 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 17:25:50.562 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.3232ms
2025-10-05 17:25:50.562 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:50.562 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.1389ms
2025-10-05 17:25:50.565 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 17:25:50.565 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 17:25:50.566 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:50.566 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:50.566 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 17:25:50.566 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.2771ms
2025-10-05 17:25:50.566 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:50.566 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:25:50.566 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:25:50.566 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:50'.
2025-10-05 17:25:50.566 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:50'.
2025-10-05 17:25:50.566 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:25:50.566 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:25:50.566 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 17:25:50.566 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 17:25:50.569 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 17:25:50.569 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 17:25:50.570 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:25:50.570 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 3.4567ms
2025-10-05 17:25:50.570 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:25:50.570 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:25:50.570 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 3.6281ms
2025-10-05 17:25:50.570 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 4.7343ms
2025-10-05 17:25:50.570 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:25:50.570 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 4.5991ms
2025-10-05 17:25:50.572 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 17:25:50.572 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 17:25:50.572 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:50.572 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:50.573 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:25:50.573 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:25:50.573 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-05 17:25:50.573 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:50'.
2025-10-05 17:25:50.573 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:50.573 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.6069ms
2025-10-05 17:25:50.573 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:50'.
2025-10-05 17:25:50.574 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:25:50.574 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:25:50.574 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 17:25:50.574 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 17:25:50.575 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-05 17:25:50.576 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:50.576 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.9356ms
2025-10-05 17:25:50.577 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 17:25:50.577 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 17:25:50.578 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:25:50.578 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:25:50.578 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 4.3352ms
2025-10-05 17:25:50.578 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 4.3136ms
2025-10-05 17:25:50.578 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:25:50.578 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:25:50.578 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 6.283ms
2025-10-05 17:25:50.578 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 6.2566ms
2025-10-05 17:25:50.581 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 17:25:50.581 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:50.581 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:25:50.581 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 17:25:50.585 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 17:25:50.586 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:25:50.586 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 4.9886ms
2025-10-05 17:25:50.586 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:25:50.587 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 5.9452ms
2025-10-05 17:25:50.588 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 17:25:50.588 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:50.588 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:25:50.589 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 17:25:50.592 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 17:25:50.593 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:25:50.593 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 4.2098ms
2025-10-05 17:25:50.593 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:25:50.593 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 5.3429ms
2025-10-05 17:25:50.605 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 17:25:50.605 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:50.605 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 17:25:50.605 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.2782ms
2025-10-05 17:25:50.605 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:50.605 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.1693ms
2025-10-05 17:25:50.608 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 17:25:50.608 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:50.609 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:25:50.609 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:50'.
2025-10-05 17:25:50.609 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:25:50.609 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 17:25:50.613 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 17:25:50.614 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 17:25:50.614 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 4.8206ms
2025-10-05 17:25:50.614 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:25:50.614 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 6.4177ms
2025-10-05 17:25:50.616 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 17:25:50.616 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:50.617 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:25:50.617 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:50'.
2025-10-05 17:25:50.618 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:25:50.618 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 17:25:50.620 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 17:25:50.621 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 17:25:50.621 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 3.0173ms
2025-10-05 17:25:50.621 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:25:50.621 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 5.3789ms
2025-10-05 17:25:55.697 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 17:25:55.697 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 17:25:55.697 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:55.697 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:55.698 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.4051ms
2025-10-05 17:25:55.698 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.4318ms
2025-10-05 17:25:55.699 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 17:25:55.699 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:55.699 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.1504ms
2025-10-05 17:25:55.701 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 17:25:55.701 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:55.701 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.3929ms
2025-10-05 17:25:55.704 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 17:25:55.704 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 17:25:55.705 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:55.705 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:55.705 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:55'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:25:55.705 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:55'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:25:55.706 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:55'.
2025-10-05 17:25:55.705 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:55'.
2025-10-05 17:25:55.706 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:25:55.706 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:25:55.706 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 17:25:55.706 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 17:25:55.707 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-05 17:25:55.708 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:55.708 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.3456ms
2025-10-05 17:25:55.708 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-05 17:25:55.708 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:55.708 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.1707ms
2025-10-05 17:25:55.710 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 17:25:55.710 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 17:25:55.710 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:25:55.710 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:25:55.710 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 4.2224ms
2025-10-05 17:25:55.710 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 4.2052ms
2025-10-05 17:25:55.710 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:25:55.711 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:25:55.711 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 6.3665ms
2025-10-05 17:25:55.711 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 6.3646ms
2025-10-05 17:25:55.712 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 17:25:55.712 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:55.712 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:25:55.712 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 17:25:55.712 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 17:25:55.712 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 17:25:55.712 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:55.712 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:55.713 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:55'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:25:55.713 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:55'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:25:55.713 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:55'.
2025-10-05 17:25:55.713 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:55'.
2025-10-05 17:25:55.713 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:25:55.713 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:25:55.713 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 17:25:55.713 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 17:25:55.716 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 17:25:55.716 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 17:25:55.716 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 17:25:55.716 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:25:55.716 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:25:55.716 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 3.0015ms
2025-10-05 17:25:55.716 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 2.9691ms
2025-10-05 17:25:55.716 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:25:55.716 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:25:55.716 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:25:55.716 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 4.314ms
2025-10-05 17:25:55.716 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 4.3574ms
2025-10-05 17:25:55.717 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 4.5758ms
2025-10-05 17:25:55.717 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:25:55.717 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 5.1604ms
2025-10-05 17:25:55.718 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 17:25:55.718 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:55.718 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:25:55.718 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 17:25:55.721 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 17:25:55.722 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:25:55.722 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 3.5999ms
2025-10-05 17:25:55.722 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:25:55.722 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 4.3343ms
2025-10-05 17:25:55.741 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 17:25:55.741 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 17:25:55.741 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:55.741 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:55.741 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.1986ms
2025-10-05 17:25:55.741 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.2886ms
2025-10-05 17:25:55.745 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 17:25:55.745 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:55.746 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:55'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:25:55.746 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:55'.
2025-10-05 17:25:55.746 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:25:55.746 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 17:25:55.749 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 17:25:55.750 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 17:25:55.751 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 4.3179ms
2025-10-05 17:25:55.751 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:25:55.751 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 5.8203ms
2025-10-05 17:25:55.752 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 17:25:55.753 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:25:55.753 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:55'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:25:55.754 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:25:55'.
2025-10-05 17:25:55.754 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:25:55.754 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 17:25:55.758 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 17:25:55.758 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 17:25:55.758 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 4.2153ms
2025-10-05 17:25:55.758 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:25:55.758 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 6.002ms
2025-10-05 17:26:00.958 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 17:26:00.958 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 17:26:00.959 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:26:00.959 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:26:00.959 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.7115ms
2025-10-05 17:26:00.959 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.5387ms
2025-10-05 17:26:00.962 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 17:26:00.962 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:26:00.962 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 17:26:00.963 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:26:00.963 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.2453ms
2025-10-05 17:26:00.963 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.1361ms
2025-10-05 17:26:00.963 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 17:26:00.963 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 17:26:00.964 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:26:00.964 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:26:00.964 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:26:00'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:26:00.964 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:26:00'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:26:00.965 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:26:00'.
2025-10-05 17:26:00.965 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:26:00'.
2025-10-05 17:26:00.965 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:26:00.965 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:26:00.965 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 17:26:00.965 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 17:26:00.968 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 17:26:00.968 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 17:26:00.969 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:26:00.969 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:26:00.969 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 3.56ms
2025-10-05 17:26:00.969 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 3.586ms
2025-10-05 17:26:00.969 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:26:00.969 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:26:00.969 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 5.6673ms
2025-10-05 17:26:00.969 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 5.6476ms
2025-10-05 17:26:00.971 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 17:26:00.971 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 17:26:00.971 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:26:00.971 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:26:00.971 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-05 17:26:00.971 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:26:00.971 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.1687ms
2025-10-05 17:26:00.972 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:26:00'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:26:00.972 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:26:00'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:26:00.972 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:26:00'.
2025-10-05 17:26:00.972 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:26:00'.
2025-10-05 17:26:00.972 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:26:00.972 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:26:00.972 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 17:26:00.972 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 17:26:00.974 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-05 17:26:00.974 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:26:00.974 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.3788ms
2025-10-05 17:26:00.976 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 17:26:00.976 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 17:26:00.976 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:26:00.976 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:26:00.976 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 3.7215ms
2025-10-05 17:26:00.976 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 3.7934ms
2025-10-05 17:26:00.976 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:26:00.976 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:26:00.976 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 5.4246ms
2025-10-05 17:26:00.976 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 5.4158ms
2025-10-05 17:26:00.977 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 17:26:00.977 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:26:00.977 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:26:00.978 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 17:26:00.981 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 17:26:00.983 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:26:00.983 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 5.728ms
2025-10-05 17:26:00.983 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:26:00.984 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 6.2782ms
2025-10-05 17:26:00.985 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 17:26:00.985 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:26:00.985 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:26:00.985 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 17:26:00.988 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 17:26:00.989 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:26:00.989 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 3.9087ms
2025-10-05 17:26:00.989 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:26:00.989 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 4.5082ms
2025-10-05 17:26:01.001 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 17:26:01.001 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:26:01.001 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.2235ms
2025-10-05 17:26:01.001 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 17:26:01.001 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:26:01.001 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.1372ms
2025-10-05 17:26:01.004 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 17:26:01.004 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:26:01.004 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:26:01'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:26:01.005 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:26:01'.
2025-10-05 17:26:01.005 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:26:01.005 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 17:26:01.008 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 17:26:01.008 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 17:26:01.008 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 3.2374ms
2025-10-05 17:26:01.008 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:26:01.008 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 4.3841ms
2025-10-05 17:26:01.010 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 17:26:01.010 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:26:01.010 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:26:01'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:26:01.010 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:26:01'.
2025-10-05 17:26:01.010 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:26:01.011 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 17:26:01.014 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 17:26:01.014 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 17:26:01.015 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 4.0306ms
2025-10-05 17:26:01.015 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:26:01.015 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 5.2089ms
2025-10-05 17:26:36.060 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 17:26:36.060 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:26:36.061 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 17:26:36.061 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.2489ms
2025-10-05 17:26:36.061 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:26:36.061 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.1178ms
2025-10-05 17:26:36.064 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 17:26:36.064 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 17:26:36.064 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:26:36.064 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:26:36.064 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:26:36'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:26:36.064 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:26:36'.
2025-10-05 17:26:36.064 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:26:36'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:26:36.064 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:26:36'.
2025-10-05 17:26:36.064 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:26:36.065 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:26:36.065 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 17:26:36.065 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 17:26:36.076 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 17:26:36.076 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 17:26:36.076 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:26:36.076 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 11.6318ms
2025-10-05 17:26:36.076 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:26:36.076 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 12.7185ms
2025-10-05 17:26:36.076 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:26:36.077 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 11.9581ms
2025-10-05 17:26:36.077 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:26:36.077 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 13.016ms
2025-10-05 17:26:36.108 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-05 17:26:36.109 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:26:36.109 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.1612ms
2025-10-05 17:26:36.110 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 17:26:36.110 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:26:36.110 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:26:36.110 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 17:26:36.120 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 17:26:36.121 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:26:36.121 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 10.638ms
2025-10-05 17:26:36.121 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:26:36.121 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 11.0761ms
2025-10-05 17:26:36.126 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 17:26:36.126 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:26:36.126 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.1408ms
2025-10-05 17:26:36.128 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 17:26:36.128 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:26:36.128 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:26:36'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:26:36.128 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:26:36'.
2025-10-05 17:26:36.128 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:26:36.129 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 17:26:36.142 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 17:26:36.142 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 17:26:36.142 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 13.6842ms
2025-10-05 17:26:36.142 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:26:36.142 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 14.4566ms
2025-10-05 17:34:11.607 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 17:34:11.607 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 17:34:11.607 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:34:11.607 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:34:11.607 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.1968ms
2025-10-05 17:34:11.607 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.2007ms
2025-10-05 17:34:11.614 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 17:34:11.614 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 17:34:11.614 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:34:11.614 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:34:11.615 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:34:11'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:34:11.615 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:34:11'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:34:11.615 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:34:11'.
2025-10-05 17:34:11.615 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:34:11'.
2025-10-05 17:34:11.615 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:34:11.615 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:34:11.615 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 17:34:11.615 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 17:34:11.657 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-05 17:34:11.657 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:34:11.658 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.2505ms
2025-10-05 17:34:11.659 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 17:34:11.659 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:34:11.660 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:34:11.660 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 17:34:11.692 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 17:34:11.692 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:34:11.692 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 17:34:11.693 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 77.0851ms
2025-10-05 17:34:11.693 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:34:11.693 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:34:11.693 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 78.7057ms
2025-10-05 17:34:11.693 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 77.2935ms
2025-10-05 17:34:11.693 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:34:11.693 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 78.8907ms
2025-10-05 17:34:11.697 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 17:34:11.698 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:34:11.698 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 38.3321ms
2025-10-05 17:34:11.698 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:34:11.698 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 38.7807ms
2025-10-05 17:34:11.709 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 17:34:11.709 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:34:11.710 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.1801ms
2025-10-05 17:34:11.711 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 17:34:11.712 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:34:11.712 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:34:11'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:34:11.712 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:34:11'.
2025-10-05 17:34:11.712 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:34:11.713 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 17:34:11.725 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 17:34:11.725 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 17:34:11.725 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 12.5853ms
2025-10-05 17:34:11.725 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:34:11.725 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 13.9231ms
2025-10-05 17:42:00.932 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 17:42:00.932 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 17:42:00.932 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:42:00.932 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:42:00.932 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.2744ms
2025-10-05 17:42:00.932 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.2442ms
2025-10-05 17:42:00.937 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 17:42:00.937 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 17:42:00.937 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:42:00.937 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:42:00.937 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:42:00'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:42:00.937 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:42:00'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:42:00.938 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:42:00'.
2025-10-05 17:42:00.938 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:42:00'.
2025-10-05 17:42:00.938 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:42:00.938 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:42:00.938 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 17:42:00.938 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 17:42:01.009 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 17:42:01.009 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:42:01.009 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 71.4543ms
2025-10-05 17:42:01.010 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:42:01.010 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 72.8045ms
2025-10-05 17:42:01.010 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 17:42:01.010 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:42:01.010 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 72.0072ms
2025-10-05 17:42:01.010 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:42:01.010 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 73.3341ms
2025-10-05 17:42:01.160 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-05 17:42:01.160 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:42:01.160 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.135ms
2025-10-05 17:42:01.162 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 17:42:01.162 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:42:01.162 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:42:01.162 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 17:42:01.173 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 17:42:01.174 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:42:01.174 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 11.9248ms
2025-10-05 17:42:01.174 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:42:01.174 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 12.3257ms
2025-10-05 17:42:01.206 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 17:42:01.206 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:42:01.206 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.4353ms
2025-10-05 17:42:01.208 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 17:42:01.208 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:42:01.209 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:42:01'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:42:01.209 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:42:01'.
2025-10-05 17:42:01.209 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:42:01.209 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 17:42:01.221 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 17:42:01.221 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 17:42:01.221 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 12.4654ms
2025-10-05 17:42:01.221 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:42:01.222 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 13.3805ms
2025-10-05 17:45:02.853 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 17:45:02.853 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 17:45:02.853 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:45:02.853 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:45:02.853 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.4414ms
2025-10-05 17:45:02.853 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.4489ms
2025-10-05 17:45:02.858 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 17:45:02.858 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 17:45:02.858 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:45:02.858 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:45:02.858 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:45:02'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:45:02.858 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:45:02'.
2025-10-05 17:45:02.858 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:45:02'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:45:02.859 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:45:02'.
2025-10-05 17:45:02.859 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:45:02.859 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:45:02.859 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 17:45:02.859 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 17:45:02.869 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 17:45:02.869 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 17:45:02.869 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:45:02.869 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:45:02.869 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.3983ms
2025-10-05 17:45:02.869 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:45:02.869 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 10.3901ms
2025-10-05 17:45:02.869 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:45:02.869 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 11.5375ms
2025-10-05 17:45:02.869 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 11.4963ms
2025-10-05 17:45:02.896 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-05 17:45:02.896 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:45:02.896 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.2158ms
2025-10-05 17:45:02.898 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 17:45:02.898 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:45:02.898 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:45:02.898 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 17:45:02.911 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 17:45:02.912 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:45:02.912 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 13.6741ms
2025-10-05 17:45:02.912 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:45:02.912 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 14.2557ms
2025-10-05 17:45:02.920 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 17:45:02.920 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:45:02.920 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.2675ms
2025-10-05 17:45:02.922 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 17:45:02.922 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:45:02.922 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:45:02'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:45:02.922 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:45:02'.
2025-10-05 17:45:02.923 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:45:02.923 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 17:45:02.934 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 17:45:02.935 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 17:45:02.935 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 12.1319ms
2025-10-05 17:45:02.935 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:45:02.935 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 13.2247ms
2025-10-05 17:53:25.541 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-05 17:53:25.542 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:53:25.542 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.2587ms
2025-10-05 17:53:25.545 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 17:53:25.545 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:53:25.545 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:53:25.546 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 17:53:25.621 +04:00 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 17:53:25.622 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:53:25.622 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 76.3802ms
2025-10-05 17:53:25.622 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:53:25.622 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 77.0647ms
2025-10-05 17:53:25.627 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 17:53:25.627 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:53:25.627 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.1567ms
2025-10-05 17:53:25.628 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 17:53:25.628 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:53:25.628 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:53:25'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:53:25.629 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:53:25'.
2025-10-05 17:53:25.629 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:53:25.629 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 17:53:25.641 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 17:53:25.641 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 17:53:25.641 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 12.1676ms
2025-10-05 17:53:25.641 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:53:25.641 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 12.949ms
2025-10-05 17:53:27.568 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 17:53:27.568 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:53:27.568 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:53:27.568 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 17:53:27.570 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 17:53:27.571 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:53:27.571 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 2.2523ms
2025-10-05 17:53:27.571 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 17:53:27.571 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 2.772ms
2025-10-05 17:53:27.591 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 17:53:27.591 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:53:27.591 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:53:27'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:53:27.592 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:53:27'.
2025-10-05 17:53:27.592 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:53:27.592 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 17:53:27.593 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 17:53:27.593 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 17:53:27.593 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 1.6536ms
2025-10-05 17:53:27.593 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 17:53:27.593 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 2.4615ms
2025-10-05 17:53:33.207 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 17:53:33.207 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:53:33.207 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.1988ms
2025-10-05 17:53:33.208 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 17:53:33.208 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:53:33.208 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.0934ms
2025-10-05 17:53:33.208 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 17:53:33.208 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:53:33.208 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.0814ms
2025-10-05 17:53:33.209 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 17:53:33.209 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:53:33.210 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:53:33'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:53:33.210 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:53:33'.
2025-10-05 17:53:33.210 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:53:33.210 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 17:53:33.210 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 17:53:33.210 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:53:33.210 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:53:33'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:53:33.210 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:53:33'.
2025-10-05 17:53:33.211 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:53:33.211 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 17:53:33.215 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 17:53:33.215 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:53:33.215 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 5.1322ms
2025-10-05 17:53:33.215 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:53:33.215 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 5.6527ms
2025-10-05 17:53:33.216 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 17:53:33.216 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:53:33.216 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:53:33'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:53:33.217 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:53:33'.
2025-10-05 17:53:33.217 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:53:33.217 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 17:53:33.217 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 17:53:33.218 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:53:33.218 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 1.055ms
2025-10-05 17:53:33.218 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:53:33.218 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 1.6503ms
2025-10-05 17:53:33.218 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 17:53:33.218 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:53:33.218 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.4143ms
2025-10-05 17:53:33.218 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:53:33.218 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 8.0906ms
2025-10-05 17:53:33.219 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 17:53:33.219 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:53:33.219 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:53:33'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:53:33.219 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:53:33'.
2025-10-05 17:53:33.219 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:53:33.219 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 17:53:33.220 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 17:53:33.220 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:53:33.220 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 0.9792ms
2025-10-05 17:53:33.220 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:53:33.220 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 1.4914ms
2025-10-05 17:53:33.221 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 17:53:33.221 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:53:33.221 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:53:33'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:53:33.222 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:53:33'.
2025-10-05 17:53:33.222 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:53:33.222 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 17:53:33.222 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 17:53:33.223 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:53:33.223 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.1528ms
2025-10-05 17:53:33.223 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:53:33.223 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 1.5988ms
2025-10-05 17:53:33.224 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 17:53:33.224 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:53:33.224 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:53:33'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:53:33.224 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:53:33'.
2025-10-05 17:53:33.224 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:53:33.224 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 17:53:33.225 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 17:53:33.225 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:53:33.225 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.0337ms
2025-10-05 17:53:33.225 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:53:33.225 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 1.4891ms
2025-10-05 17:54:57.597 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 17:54:57.597 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:54:57.597 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.2411ms
2025-10-05 17:54:57.597 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 17:54:57.597 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 17:54:57.597 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:54:57.597 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:54:57.597 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.1025ms
2025-10-05 17:54:57.597 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.1111ms
2025-10-05 17:54:57.597 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 17:54:57.598 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:54:57.598 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.101ms
2025-10-05 17:54:57.601 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 17:54:57.601 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 17:54:57.601 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:54:57.601 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:54:57.602 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:54:57'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:54:57.602 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:54:57'.
2025-10-05 17:54:57.602 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:54:57'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:54:57.602 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:54:57'.
2025-10-05 17:54:57.602 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:54:57.602 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:54:57.602 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 17:54:57.602 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 17:54:57.614 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 17:54:57.614 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 17:54:57.614 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:54:57.614 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:54:57.614 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.073ms
2025-10-05 17:54:57.614 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.0739ms
2025-10-05 17:54:57.615 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:54:57.615 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:54:57.615 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 13.4642ms
2025-10-05 17:54:57.615 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 13.5005ms
2025-10-05 17:54:57.617 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 17:54:57.617 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 17:54:57.617 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:54:57.617 +04:00 [INF] CORS policy execution successful.
2025-10-05 17:54:57.617 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:54:57'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:54:57.617 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:54:57'.
2025-10-05 17:54:57.617 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:54:57.617 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 17:54:57.617 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:54:57'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 17:54:57.617 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 13:54:57'.
2025-10-05 17:54:57.617 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:54:57.617 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 17:54:57.619 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 17:54:57.619 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 17:54:57.619 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:54:57.619 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 1.5934ms
2025-10-05 17:54:57.619 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 17:54:57.619 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 17:54:57.619 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 2.402ms
2025-10-05 17:54:57.619 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.9575ms
2025-10-05 17:54:57.619 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 17:54:57.619 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 2.5475ms
2025-10-05 18:00:50.649 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 18:00:50.649 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 18:00:50.649 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 18:00:50.649 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:00:50.649 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:00:50.649 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 18:00:50.649 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:00:50.649 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:00:50.649 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.2677ms
2025-10-05 18:00:50.649 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.2602ms
2025-10-05 18:00:50.649 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.2835ms
2025-10-05 18:00:50.649 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.1024ms
2025-10-05 18:00:50.657 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:00:50.657 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:00:50.657 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:00:50.657 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:00:50.658 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:00:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:00:50.658 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:00:50'.
2025-10-05 18:00:50.658 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:00:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:00:50.658 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:00:50'.
2025-10-05 18:00:50.658 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:00:50.658 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:00:50.658 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:00:50.658 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:00:50.724 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:00:50.724 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:00:50.725 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 66.0752ms
2025-10-05 18:00:50.725 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:00:50.725 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 67.376ms
2025-10-05 18:00:50.725 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:00:50.725 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:00:50.725 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 66.5678ms
2025-10-05 18:00:50.725 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:00:50.725 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 67.8324ms
2025-10-05 18:00:50.727 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:00:50.727 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:00:50.727 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:00:50.727 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:00:50.728 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:00:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:00:50.728 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:00:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:00:50.728 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:00:50'.
2025-10-05 18:00:50.728 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:00:50'.
2025-10-05 18:00:50.729 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:00:50.729 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:00:50.729 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:00:50.729 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:00:50.730 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:00:50.730 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:00:50.731 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:00:50.731 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:00:50.731 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 1.9684ms
2025-10-05 18:00:50.731 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.9572ms
2025-10-05 18:00:50.731 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:00:50.731 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:00:50.731 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 4.1984ms
2025-10-05 18:00:50.731 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 4.2373ms
2025-10-05 18:02:43.306 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 18:02:43.306 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:02:43.306 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.357ms
2025-10-05 18:02:43.306 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 18:02:43.307 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:02:43.307 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.2304ms
2025-10-05 18:02:43.310 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:02:43.310 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:02:43.311 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:02:43'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:02:43.311 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:02:43'.
2025-10-05 18:02:43.311 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:02:43.311 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:02:43.311 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:02:43.311 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:02:43.312 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:02:43'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:02:43.312 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:02:43'.
2025-10-05 18:02:43.312 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:02:43.312 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:02:43.331 +04:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:02:43.331 +04:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:02:43.331 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:02:43.331 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:02:43.331 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 18.6786ms
2025-10-05 18:02:43.331 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 19.3988ms
2025-10-05 18:02:43.331 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:02:43.331 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:02:43.331 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 20.7792ms
2025-10-05 18:02:43.331 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 20.0159ms
2025-10-05 18:02:43.334 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:02:43.334 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:02:43.334 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:02:43.334 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:02:43.334 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:02:43'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:02:43.334 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:02:43'.
2025-10-05 18:02:43.334 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:02:43'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:02:43.335 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:02:43.335 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:02:43'.
2025-10-05 18:02:43.335 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:02:43.335 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:02:43.335 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:02:43.337 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:02:43.337 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:02:43.337 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:02:43.337 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:02:43.337 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 2.4649ms
2025-10-05 18:02:43.337 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 2.4338ms
2025-10-05 18:02:43.337 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:02:43.337 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:02:43.337 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 3.6254ms
2025-10-05 18:02:43.337 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 3.6255ms
2025-10-05 18:27:10.424 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 18:27:10.424 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 18:27:10.425 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:27:10.425 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:27:10.425 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.4235ms
2025-10-05 18:27:10.425 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.4293ms
2025-10-05 18:27:10.430 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:27:10.430 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:27:10.430 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:27:10.430 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:27:10.431 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:27:10'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:27:10.431 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:27:10'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:27:10.431 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:27:10'.
2025-10-05 18:27:10.431 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:27:10'.
2025-10-05 18:27:10.431 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:27:10.431 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:27:10.431 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:27:10.431 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:27:10.501 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:27:10.501 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:27:10.501 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:27:10.502 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 70.4417ms
2025-10-05 18:27:10.502 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:27:10.502 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:27:10.502 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 71.3825ms
2025-10-05 18:27:10.502 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 70.581ms
2025-10-05 18:27:10.502 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:27:10.502 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 71.5474ms
2025-10-05 18:27:10.529 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-05 18:27:10.529 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:27:10.529 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.1715ms
2025-10-05 18:27:10.531 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 18:27:10.531 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:27:10.531 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:27:10.531 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 18:27:10.544 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 18:27:10.545 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:27:10.545 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 14.298ms
2025-10-05 18:27:10.545 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:27:10.545 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 14.8099ms
2025-10-05 18:27:10.561 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 18:27:10.562 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:27:10.562 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.154ms
2025-10-05 18:27:10.563 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 18:27:10.564 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:27:10.564 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:27:10'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:27:10.564 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:27:10'.
2025-10-05 18:27:10.564 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:27:10.564 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:27:10.577 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:27:10.577 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:27:10.577 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 13.0583ms
2025-10-05 18:27:10.577 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:27:10.577 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 13.9421ms
2025-10-05 18:29:13.107 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-05 18:29:13.107 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-05 18:29:13.107 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:13.107 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:13.107 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.1754ms
2025-10-05 18:29:13.107 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.1727ms
2025-10-05 18:29:13.109 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 18:29:13.109 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:13.109 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:29:13.109 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 18:29:13.128 +04:00 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 18:29:13.129 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:29:13.129 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 20.115ms
2025-10-05 18:29:13.129 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:29:13.129 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 20.5676ms
2025-10-05 18:29:13.131 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 18:29:13.131 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:13.131 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:29:13.131 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 18:29:13.135 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 18:29:13.135 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 18:29:13.135 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:13.135 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:13.135 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.1352ms
2025-10-05 18:29:13.135 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.1646ms
2025-10-05 18:29:13.137 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 18:29:13.137 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:13.137 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:29:13.138 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:13'.
2025-10-05 18:29:13.138 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:29:13.138 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:29:13.140 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 18:29:13.141 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:29:13.141 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 10.3108ms
2025-10-05 18:29:13.141 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:29:13.142 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 10.7216ms
2025-10-05 18:29:13.152 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:29:13.152 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:29:13.152 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 14.2216ms
2025-10-05 18:29:13.152 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:29:13.152 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 15.4218ms
2025-10-05 18:29:13.154 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 18:29:13.154 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:13.154 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:29:13.154 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:13'.
2025-10-05 18:29:13.154 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:29:13.154 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:29:13.155 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 18:29:13.155 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:13.155 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 18:29:13.155 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.1128ms
2025-10-05 18:29:13.155 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:13.155 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.1362ms
2025-10-05 18:29:13.156 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:29:13.156 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:29:13.156 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 1.8295ms
2025-10-05 18:29:13.156 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:29:13.156 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 2.7331ms
2025-10-05 18:29:13.157 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:29:13.157 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:13.157 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:29:13.157 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:29:13.157 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:13'.
2025-10-05 18:29:13.157 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:13.158 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:29:13.158 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:29:13.158 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:29:13.158 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:13'.
2025-10-05 18:29:13.158 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:29:13.158 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:29:13.163 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:29:13.163 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:29:13.163 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:29:13.163 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:29:13.163 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 5.7778ms
2025-10-05 18:29:13.164 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:29:13.164 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 5.8251ms
2025-10-05 18:29:13.164 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 6.9376ms
2025-10-05 18:29:13.164 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:29:13.164 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 6.6835ms
2025-10-05 18:29:13.165 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:29:13.165 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:29:13.165 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:13.165 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:13.165 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:29:13.165 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:29:13.166 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:13'.
2025-10-05 18:29:13.166 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:13'.
2025-10-05 18:29:13.166 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:29:13.166 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:29:13.166 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:29:13.166 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:29:13.167 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:29:13.167 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:29:13.168 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:29:13.168 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:29:13.168 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.6922ms
2025-10-05 18:29:13.168 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:29:13.168 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 1.7198ms
2025-10-05 18:29:13.168 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:29:13.168 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 2.6531ms
2025-10-05 18:29:13.168 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 2.8295ms
2025-10-05 18:29:18.142 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:29:18.142 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:29:18.142 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:18.142 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:29:18.142 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:18.143 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:18'.
2025-10-05 18:29:18.143 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:29:18.143 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:18'.
2025-10-05 18:29:18.143 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:29:18.143 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:29:18.143 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:29:18.143 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:29:18.149 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:29:18.149 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:29:18.150 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:29:18.150 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:29:18.150 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 6.9902ms
2025-10-05 18:29:18.150 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.0648ms
2025-10-05 18:29:18.150 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:29:18.150 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:29:18.150 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 8.1975ms
2025-10-05 18:29:18.150 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 8.2141ms
2025-10-05 18:29:18.152 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:29:18.152 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:18.152 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:29:18.152 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:18.153 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:29:18.153 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:18'.
2025-10-05 18:29:18.153 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:29:18.153 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:18'.
2025-10-05 18:29:18.153 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:29:18.153 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:29:18.153 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:29:18.153 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:29:18.155 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:29:18.155 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:29:18.155 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:29:18.155 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:29:18.155 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.5907ms
2025-10-05 18:29:18.155 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 1.5978ms
2025-10-05 18:29:18.155 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:29:18.155 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:29:18.155 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 2.477ms
2025-10-05 18:29:18.155 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 2.6421ms
2025-10-05 18:29:20.880 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-05 18:29:20.880 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:20.880 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.1603ms
2025-10-05 18:29:20.882 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 18:29:20.882 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:20.882 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:29:20.882 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 18:29:20.890 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 18:29:20.892 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:29:20.892 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 10.1722ms
2025-10-05 18:29:20.892 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:29:20.892 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 10.6342ms
2025-10-05 18:29:20.895 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - null null
2025-10-05 18:29:20.895 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:20.895 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - 204 null null 0.1535ms
2025-10-05 18:29:20.897 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - application/json 115
2025-10-05 18:29:20.897 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:20.898 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:29:20.898 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:20'.
2025-10-05 18:29:20.898 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.AddItemsToBasket (GreenZone.API)'
2025-10-05 18:29:20.908 +04:00 [INF] Route matched with {action = "AddItemsToBasket", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddItemsToBasket(System.Guid, GreenZone.Contracts.Dtos.BasketItemsDtos.BasketItemsCreateDto) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:29:20.945 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:29:21.023 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Boolean), @p4='?' (DbType = Guid), @p5='?' (DbType = Int32), @p6='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [BasketItems] ([Id], [BasketId], [CreatedAt], [IsDeleted], [ProductId], [Quantity], [UpdatedAt])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-10-05 18:29:21.038 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:29:21.040 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:29:21.041 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.AddItemsToBasket (GreenZone.API) in 132.6618ms
2025-10-05 18:29:21.041 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.AddItemsToBasket (GreenZone.API)'
2025-10-05 18:29:21.041 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - 200 null application/json; charset=utf-8 144.0267ms
2025-10-05 18:29:21.044 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 18:29:21.044 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:21.044 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.128ms
2025-10-05 18:29:21.046 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 18:29:21.046 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:21.046 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:21'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:29:21.046 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:21'.
2025-10-05 18:29:21.046 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:29:21.046 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:29:21.048 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:29:21.048 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:29:21.048 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 1.8512ms
2025-10-05 18:29:21.048 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:29:21.048 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 2.3692ms
2025-10-05 18:29:23.527 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 18:29:23.527 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:23.528 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:29:23.528 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 18:29:23.529 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 18:29:23.530 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:29:23.530 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 1.9385ms
2025-10-05 18:29:23.530 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:29:23.530 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 2.4451ms
2025-10-05 18:29:23.530 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 18:29:23.530 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:23.530 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:29:23.531 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 18:29:23.532 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 18:29:23.533 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:29:23.533 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 2.572ms
2025-10-05 18:29:23.533 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:29:23.533 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 2.8816ms
2025-10-05 18:29:23.535 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 18:29:23.535 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:23.535 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:29:23.535 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:23'.
2025-10-05 18:29:23.535 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:29:23.535 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:29:23.536 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:29:23.537 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:29:23.537 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 1.5734ms
2025-10-05 18:29:23.537 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:29:23.537 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 2.1293ms
2025-10-05 18:29:23.538 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 18:29:23.538 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:23.538 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:29:23.538 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:23'.
2025-10-05 18:29:23.538 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:29:23.538 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:29:23.540 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 18:29:23.540 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:23.540 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.1071ms
2025-10-05 18:29:23.540 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 18:29:23.540 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:23.540 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.1767ms
2025-10-05 18:29:23.540 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:29:23.540 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:29:23.540 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 2.0185ms
2025-10-05 18:29:23.540 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:29:23.540 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 2.763ms
2025-10-05 18:29:23.542 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:29:23.542 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:29:23.542 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:23.542 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:23.542 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:29:23.542 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:29:23.542 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:23'.
2025-10-05 18:29:23.543 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:23'.
2025-10-05 18:29:23.543 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:29:23.543 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:29:23.543 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:29:23.543 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:29:23.544 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:29:23.544 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:29:23.544 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:29:23.544 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.5072ms
2025-10-05 18:29:23.544 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:29:23.544 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:29:23.544 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 2.388ms
2025-10-05 18:29:23.544 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 1.6162ms
2025-10-05 18:29:23.544 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:29:23.544 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 2.5278ms
2025-10-05 18:29:23.545 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:29:23.545 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:29:23.545 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:23.545 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:23.545 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:29:23.545 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:29:23.546 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:23'.
2025-10-05 18:29:23.546 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:23'.
2025-10-05 18:29:23.546 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:29:23.546 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:29:23.546 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:29:23.546 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:29:23.547 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:29:23.547 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:29:23.547 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:29:23.547 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:29:23.547 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.5092ms
2025-10-05 18:29:23.547 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 1.5082ms
2025-10-05 18:29:23.547 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:29:23.547 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:29:23.547 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 2.3109ms
2025-10-05 18:29:23.547 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 2.3606ms
2025-10-05 18:29:27.567 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - null null
2025-10-05 18:29:27.567 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:27.567 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - 204 null null 0.2131ms
2025-10-05 18:29:27.570 +04:00 [INF] Request starting HTTP/2 PUT https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - application/json 65
2025-10-05 18:29:27.571 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:27.571 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:27'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:29:27.571 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:27'.
2025-10-05 18:29:27.571 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API)'
2025-10-05 18:29:27.574 +04:00 [INF] Route matched with {action = "UpdateItemsInBasket", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateItemsInBasket(System.Guid, GreenZone.Contracts.Dtos.BasketItemsDtos.BasketItemsUpdateDto) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:29:27.581 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:29:27.596 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__productId_0='?' (DbType = Guid), @__basketId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BasketId], [b].[CreatedAt], [b].[IsDeleted], [b].[ProductId], [b].[Quantity], [b].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [BasketItems] AS [b]
INNER JOIN [Products] AS [p] ON [b].[ProductId] = [p].[Id]
WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[ProductId] = @__productId_0 AND [b].[BasketId] = @__basketId_1
2025-10-05 18:29:27.620 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@p6='?' (DbType = Guid), @p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [BasketItems] SET [BasketId] = @p0, [CreatedAt] = @p1, [IsDeleted] = @p2, [ProductId] = @p3, [Quantity] = @p4, [UpdatedAt] = @p5
OUTPUT 1
WHERE [Id] = @p6;
2025-10-05 18:29:27.622 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:29:27.623 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:29:27.623 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API) in 48.0961ms
2025-10-05 18:29:27.623 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API)'
2025-10-05 18:29:27.623 +04:00 [INF] Request finished HTTP/2 PUT https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - 200 null application/json; charset=utf-8 52.2465ms
2025-10-05 18:29:27.629 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 18:29:27.629 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:27.629 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.1262ms
2025-10-05 18:29:27.631 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 18:29:27.631 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:27.631 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:27'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:29:27.631 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:27'.
2025-10-05 18:29:27.631 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:29:27.631 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:29:27.632 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:29:27.633 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:29:27.633 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 1.5789ms
2025-10-05 18:29:27.633 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:29:27.633 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 2.0765ms
2025-10-05 18:29:27.636 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:29:27.636 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:29:27.636 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:27.636 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:27.636 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:27'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:29:27.636 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:27'.
2025-10-05 18:29:27.636 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:27'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:29:27.637 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:27'.
2025-10-05 18:29:27.637 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:29:27.637 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:29:27.637 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:29:27.637 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:29:27.638 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:29:27.638 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:29:27.638 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.4072ms
2025-10-05 18:29:27.638 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:29:27.638 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 2.1204ms
2025-10-05 18:29:27.638 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:29:27.639 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:29:27.639 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 1.8995ms
2025-10-05 18:29:27.639 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:29:27.639 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 2.6132ms
2025-10-05 18:29:30.892 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-05 18:29:30.892 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:30.893 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.1588ms
2025-10-05 18:29:30.894 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 18:29:30.894 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:30.894 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:29:30.894 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 18:29:30.896 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 18:29:30.897 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:29:30.897 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 2.3535ms
2025-10-05 18:29:30.897 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:29:30.897 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 2.6935ms
2025-10-05 18:29:30.904 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 18:29:30.904 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:30.904 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:29:30.904 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 18:29:30.906 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 18:29:30.906 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:29:30.906 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 2.1872ms
2025-10-05 18:29:30.906 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:29:30.906 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 2.5687ms
2025-10-05 18:29:30.916 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 18:29:30.916 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:30.916 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:29:30.916 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:30'.
2025-10-05 18:29:30.916 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:29:30.916 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:29:30.918 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:29:30.918 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:29:30.918 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 1.9916ms
2025-10-05 18:29:30.918 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:29:30.918 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 2.5435ms
2025-10-05 18:29:30.919 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 18:29:30.920 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:30.920 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:29:30.920 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:30'.
2025-10-05 18:29:30.920 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:29:30.920 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:29:30.920 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 18:29:30.921 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 18:29:30.920 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:30.921 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:30.921 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.2118ms
2025-10-05 18:29:30.921 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.1205ms
2025-10-05 18:29:30.922 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:29:30.922 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:29:30.922 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 2.1565ms
2025-10-05 18:29:30.922 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:29:30.922 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 2.766ms
2025-10-05 18:29:30.922 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:29:30.922 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:29:30.922 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:30.922 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:30.923 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:29:30.923 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:30'.
2025-10-05 18:29:30.923 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:29:30.923 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:29:30.923 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:30'.
2025-10-05 18:29:30.923 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 18:29:30.923 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:29:30.923 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:29:30.923 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:29:30.923 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:30.923 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:29:30.923 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:30'.
2025-10-05 18:29:30.923 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:29:30.923 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:29:30.924 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:29:30.924 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:29:30.924 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:29:30.925 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 1.4911ms
2025-10-05 18:29:30.925 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:29:30.925 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 2.2352ms
2025-10-05 18:29:30.925 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:29:30.925 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.6352ms
2025-10-05 18:29:30.925 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:29:30.925 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 2.4219ms
2025-10-05 18:29:30.931 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:29:30.932 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:29:30.932 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 8.2754ms
2025-10-05 18:29:30.932 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:29:30.932 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 8.82ms
2025-10-05 18:29:30.943 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:29:30.944 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:29:30.944 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:30.944 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:30.944 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:29:30.944 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:30'.
2025-10-05 18:29:30.944 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:29:30.944 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:30'.
2025-10-05 18:29:30.944 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:29:30.944 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:29:30.944 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:29:30.944 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:29:30.946 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:29:30.946 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:29:30.946 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:29:30.946 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:29:30.946 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 1.506ms
2025-10-05 18:29:30.946 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:29:30.946 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.5656ms
2025-10-05 18:29:30.946 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:29:30.946 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 2.4304ms
2025-10-05 18:29:30.946 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 2.3921ms
2025-10-05 18:29:42.231 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - null null
2025-10-05 18:29:42.231 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:42.231 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - 204 null null 0.1533ms
2025-10-05 18:29:42.234 +04:00 [INF] Request starting HTTP/2 PUT https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - application/json 67
2025-10-05 18:29:42.234 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:42.234 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:29:42.234 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:42'.
2025-10-05 18:29:42.234 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API)'
2025-10-05 18:29:42.234 +04:00 [INF] Route matched with {action = "UpdateItemsInBasket", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateItemsInBasket(System.Guid, GreenZone.Contracts.Dtos.BasketItemsDtos.BasketItemsUpdateDto) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:29:42.244 +04:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-10-05 18:29:42.256 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API) in 21.3239ms
2025-10-05 18:29:42.256 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API)'
2025-10-05 18:29:42.256 +04:00 [INF] Request finished HTTP/2 PUT https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - 400 null application/problem+json; charset=utf-8 22.0589ms
2025-10-05 18:29:42.258 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 18:29:42.258 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:42.258 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.1026ms
2025-10-05 18:29:42.259 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 18:29:42.259 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:42.259 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:29:42.259 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:42'.
2025-10-05 18:29:42.259 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:29:42.259 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:29:42.260 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:29:42.261 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:29:42.261 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 1.6047ms
2025-10-05 18:29:42.261 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:29:42.261 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 2.0657ms
2025-10-05 18:29:42.263 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 18:29:42.263 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 18:29:42.263 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:42.263 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:42.263 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.0926ms
2025-10-05 18:29:42.263 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.0764ms
2025-10-05 18:29:42.264 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:29:42.264 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:29:42.264 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:42.264 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:42.264 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:29:42.264 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:29:42.265 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:42'.
2025-10-05 18:29:42.265 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:42'.
2025-10-05 18:29:42.265 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:29:42.265 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:29:42.265 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:29:42.265 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:29:42.266 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:29:42.266 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:29:42.266 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:29:42.266 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 1.0201ms
2025-10-05 18:29:42.266 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:29:42.266 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:29:42.266 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.0876ms
2025-10-05 18:29:42.266 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 1.5823ms
2025-10-05 18:29:42.266 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:29:42.266 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 1.6081ms
2025-10-05 18:29:44.890 +04:00 [INF] Request starting HTTP/2 PUT https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - application/json 65
2025-10-05 18:29:44.890 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:44.890 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:29:44.891 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:44'.
2025-10-05 18:29:44.891 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API)'
2025-10-05 18:29:44.891 +04:00 [INF] Route matched with {action = "UpdateItemsInBasket", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateItemsInBasket(System.Guid, GreenZone.Contracts.Dtos.BasketItemsDtos.BasketItemsUpdateDto) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:29:44.893 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:29:44.893 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__productId_0='?' (DbType = Guid), @__basketId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BasketId], [b].[CreatedAt], [b].[IsDeleted], [b].[ProductId], [b].[Quantity], [b].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [BasketItems] AS [b]
INNER JOIN [Products] AS [p] ON [b].[ProductId] = [p].[Id]
WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[ProductId] = @__productId_0 AND [b].[BasketId] = @__basketId_1
2025-10-05 18:29:44.898 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@p6='?' (DbType = Guid), @p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [BasketItems] SET [BasketId] = @p0, [CreatedAt] = @p1, [IsDeleted] = @p2, [ProductId] = @p3, [Quantity] = @p4, [UpdatedAt] = @p5
OUTPUT 1
WHERE [Id] = @p6;
2025-10-05 18:29:44.898 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:29:44.899 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:29:44.899 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API) in 7.8825ms
2025-10-05 18:29:44.899 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API)'
2025-10-05 18:29:44.899 +04:00 [INF] Request finished HTTP/2 PUT https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - 200 null application/json; charset=utf-8 8.8236ms
2025-10-05 18:29:44.902 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 18:29:44.902 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:44.902 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:29:44.902 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:44'.
2025-10-05 18:29:44.902 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:29:44.902 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:29:44.903 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:29:44.904 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:29:44.904 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 1.3516ms
2025-10-05 18:29:44.904 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:29:44.904 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 1.8451ms
2025-10-05 18:29:44.905 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:29:44.905 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:29:44.905 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:44.905 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:29:44.905 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:29:44.905 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:29:44.906 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:44'.
2025-10-05 18:29:44.906 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:29:44'.
2025-10-05 18:29:44.906 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:29:44.906 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:29:44.906 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:29:44.906 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:29:44.907 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:29:44.907 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:29:44.907 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:29:44.907 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 0.9817ms
2025-10-05 18:29:44.907 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:29:44.907 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 1.4639ms
2025-10-05 18:29:44.907 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:29:44.907 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.1364ms
2025-10-05 18:29:44.907 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:29:44.907 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 1.6709ms
2025-10-05 18:30:27.141 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 18:30:27.141 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 18:30:27.141 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:30:27.141 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:30:27.141 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.212ms
2025-10-05 18:30:27.141 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.1817ms
2025-10-05 18:30:27.141 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 18:30:27.141 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:30:27.142 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.0977ms
2025-10-05 18:30:27.142 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 18:30:27.142 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:30:27.143 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.1665ms
2025-10-05 18:30:27.145 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:30:27.145 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:30:27.146 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:30:27'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:30:27.146 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:30:27.146 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:30:27'.
2025-10-05 18:30:27.146 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:30:27.146 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:30:27.146 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:30:27.146 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:30:27'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:30:27.146 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:30:27'.
2025-10-05 18:30:27.146 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:30:27.146 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:30:27.152 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:30:27.152 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:30:27.152 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 6.2734ms
2025-10-05 18:30:27.152 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:30:27.153 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 7.3756ms
2025-10-05 18:30:27.154 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:30:27.154 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:30:27.154 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:30:27'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:30:27.154 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:30:27'.
2025-10-05 18:30:27.154 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:30:27.155 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:30:27.155 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:30:27.155 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:30:27.155 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.0654ms
2025-10-05 18:30:27.155 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:30:27.156 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 9.854ms
2025-10-05 18:30:27.156 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:30:27.156 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:30:27.156 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 1.6718ms
2025-10-05 18:30:27.156 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:30:27.156 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 2.7579ms
2025-10-05 18:30:27.157 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:30:27.157 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:30:27.157 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:30:27'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:30:27.157 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:30:27'.
2025-10-05 18:30:27.157 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:30:27.157 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:30:27.159 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:30:27.159 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:30:27.159 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.9096ms
2025-10-05 18:30:27.159 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:30:27.159 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 2.7176ms
2025-10-05 18:30:43.783 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-05 18:30:43.784 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:30:43.784 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.3551ms
2025-10-05 18:30:43.784 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-05 18:30:43.784 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:30:43.784 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.09ms
2025-10-05 18:30:43.786 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 18:30:43.786 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:30:43.786 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:30:43.786 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 18:30:43.796 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 18:30:43.797 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:30:43.797 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 11.1438ms
2025-10-05 18:30:43.797 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:30:43.797 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 11.6532ms
2025-10-05 18:30:43.800 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 18:30:43.801 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:30:43.801 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:30:43.801 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 18:30:43.805 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 18:30:43.807 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:30:43.807 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 5.6061ms
2025-10-05 18:30:43.807 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:30:43.807 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 7.0527ms
2025-10-05 18:30:43.811 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 18:30:43.811 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:30:43.811 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.2812ms
2025-10-05 18:30:43.812 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 18:30:43.812 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:30:43.812 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.1147ms
2025-10-05 18:30:43.815 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 18:30:43.815 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:30:43.816 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:30:43'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:30:43.816 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:30:43'.
2025-10-05 18:30:43.816 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:30:43.816 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:30:43.827 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:30:43.827 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:30:43.827 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 10.5928ms
2025-10-05 18:30:43.827 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:30:43.827 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 12.2231ms
2025-10-05 18:30:43.829 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 18:30:43.830 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:30:43.830 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:30:43'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:30:43.830 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:30:43'.
2025-10-05 18:30:43.830 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:30:43.830 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:30:43.832 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:30:43.832 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:30:43.832 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 2.0789ms
2025-10-05 18:30:43.832 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:30:43.832 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 2.9704ms
2025-10-05 18:30:43.836 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 18:30:43.836 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 18:30:43.836 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:30:43.836 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:30:43.836 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.3942ms
2025-10-05 18:30:43.836 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.5544ms
2025-10-05 18:30:43.839 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:30:43.839 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 18:30:43.839 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:30:43.839 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:30:43.839 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.2923ms
2025-10-05 18:30:43.839 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:30:43.839 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:30:43.839 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:30:43'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:30:43.840 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:30:43'.
2025-10-05 18:30:43.840 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:30:43'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:30:43.840 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:30:43'.
2025-10-05 18:30:43.840 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:30:43.840 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:30:43.840 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:30:43.840 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:30:43.842 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:30:43.842 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:30:43.842 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:30:43.843 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:30:43.843 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 2.5043ms
2025-10-05 18:30:43.843 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 2.5971ms
2025-10-05 18:30:43.843 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:30:43.843 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:30:43.843 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 3.9912ms
2025-10-05 18:30:43.843 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 3.5778ms
2025-10-05 18:30:43.844 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:30:43.844 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:30:43.845 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:30:43.845 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:30:43.845 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:30:43'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:30:43.845 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:30:43'.
2025-10-05 18:30:43.845 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:30:43'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:30:43.845 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:30:43'.
2025-10-05 18:30:43.845 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:30:43.845 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:30:43.845 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:30:43.845 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:30:43.846 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:30:43.847 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:30:43.847 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:30:43.847 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:30:43.847 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.2615ms
2025-10-05 18:30:43.847 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 1.2614ms
2025-10-05 18:30:43.847 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:30:43.847 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:30:43.847 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 2.5681ms
2025-10-05 18:30:43.847 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 2.5693ms
2025-10-05 18:39:57.038 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-05 18:39:57.038 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:39:57.038 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.1875ms
2025-10-05 18:39:57.042 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 18:39:57.042 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:39:57.043 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:39:57.043 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 18:39:57.118 +04:00 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 18:39:57.119 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:39:57.119 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 76.0334ms
2025-10-05 18:39:57.119 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:39:57.119 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 76.7222ms
2025-10-05 18:39:57.120 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 18:39:57.120 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:39:57.120 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:39:57.120 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 18:39:57.122 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 18:39:57.122 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:39:57.122 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 1.9793ms
2025-10-05 18:39:57.122 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:39:57.123 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 2.2838ms
2025-10-05 18:39:57.127 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 18:39:57.127 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:39:57.127 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.1704ms
2025-10-05 18:39:57.127 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 18:39:57.127 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:39:57.128 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.1048ms
2025-10-05 18:39:57.129 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 18:39:57.129 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:39:57.129 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:39:57'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:39:57.129 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:39:57'.
2025-10-05 18:39:57.129 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:39:57.129 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:39:57.140 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:39:57.141 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:39:57.141 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 11.4917ms
2025-10-05 18:39:57.141 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:39:57.141 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 12.3744ms
2025-10-05 18:39:57.142 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 18:39:57.142 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:39:57.143 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:39:57'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:39:57.143 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:39:57'.
2025-10-05 18:39:57.143 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:39:57.143 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:39:57.144 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:39:57.144 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:39:57.144 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 1.5564ms
2025-10-05 18:39:57.145 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:39:57.145 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 2.2425ms
2025-10-05 18:39:57.146 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 18:39:57.147 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:39:57.147 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:39:57'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:39:57.148 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:39:57'.
2025-10-05 18:39:57.148 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:39:57.148 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:39:57.150 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 18:39:57.150 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:39:57.150 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:39:57.150 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.1274ms
2025-10-05 18:39:57.150 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 18:39:57.150 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:39:57.150 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:39:57.150 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.0908ms
2025-10-05 18:39:57.150 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 1.8933ms
2025-10-05 18:39:57.150 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:39:57.150 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 3.9922ms
2025-10-05 18:39:57.152 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:39:57.152 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:39:57.152 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:39:57'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:39:57.152 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:39:57.152 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:39:57'.
2025-10-05 18:39:57.152 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:39:57.152 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:39:57.153 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:39:57.153 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:39:57'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:39:57.153 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:39:57'.
2025-10-05 18:39:57.153 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:39:57.153 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:39:57.158 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:39:57.158 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:39:57.159 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 5.9937ms
2025-10-05 18:39:57.159 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:39:57.159 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 6.8482ms
2025-10-05 18:39:57.160 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:39:57.160 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:39:57.160 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:39:57'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:39:57.161 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:39:57'.
2025-10-05 18:39:57.161 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:39:57.161 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:39:57.163 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:39:57.163 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:39:57.163 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:39:57.163 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:39:57.163 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.9332ms
2025-10-05 18:39:57.163 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 1.8966ms
2025-10-05 18:39:57.163 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:39:57.163 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:39:57.163 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 10.6391ms
2025-10-05 18:39:57.163 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 3.3892ms
2025-10-05 18:39:57.164 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:39:57.164 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:39:57.164 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:39:57'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:39:57.164 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:39:57'.
2025-10-05 18:39:57.164 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:39:57.164 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:39:57.166 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:39:57.166 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:39:57.166 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.5837ms
2025-10-05 18:39:57.166 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:39:57.166 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 2.2935ms
2025-10-05 18:40:17.455 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - null null
2025-10-05 18:40:17.455 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:40:17.455 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - 204 null null 0.1904ms
2025-10-05 18:40:17.465 +04:00 [INF] Request starting HTTP/2 PUT https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - application/json 67
2025-10-05 18:40:17.465 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:40:17.466 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:40:17'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:40:17.466 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:40:17'.
2025-10-05 18:40:17.466 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API)'
2025-10-05 18:40:17.466 +04:00 [INF] Route matched with {action = "UpdateItemsInBasket", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateItemsInBasket(System.Guid, GreenZone.Contracts.Dtos.BasketItemsDtos.BasketItemsUpdateDto) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:40:17.485 +04:00 [INF] Executed DbCommand (17ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:40:17.490 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__productId_0='?' (DbType = Guid), @__basketId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BasketId], [b].[CreatedAt], [b].[IsDeleted], [b].[ProductId], [b].[Quantity], [b].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [BasketItems] AS [b]
INNER JOIN [Products] AS [p] ON [b].[ProductId] = [p].[Id]
WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[ProductId] = @__productId_0 AND [b].[BasketId] = @__basketId_1
2025-10-05 18:40:17.496 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@p6='?' (DbType = Guid), @p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [BasketItems] SET [BasketId] = @p0, [CreatedAt] = @p1, [IsDeleted] = @p2, [ProductId] = @p3, [Quantity] = @p4, [UpdatedAt] = @p5
OUTPUT 1
WHERE [Id] = @p6;
2025-10-05 18:40:17.497 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:40:17.497 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:40:17.497 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API) in 31.5204ms
2025-10-05 18:40:17.497 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API)'
2025-10-05 18:40:17.498 +04:00 [INF] Request finished HTTP/2 PUT https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - 200 null application/json; charset=utf-8 32.3807ms
2025-10-05 18:40:17.502 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 18:40:17.503 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:40:17.503 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.1387ms
2025-10-05 18:40:17.504 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 18:40:17.504 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:40:17.505 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:40:17'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:40:17.505 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:40:17'.
2025-10-05 18:40:17.505 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:40:17.505 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:40:17.506 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:40:17.507 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:40:17.507 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 1.5822ms
2025-10-05 18:40:17.507 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:40:17.507 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 2.2975ms
2025-10-05 18:40:17.512 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 18:40:17.512 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:40:17.512 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.1876ms
2025-10-05 18:40:17.512 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 18:40:17.512 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:40:17.513 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.0821ms
2025-10-05 18:40:17.515 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:40:17.515 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:40:17.515 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:40:17.515 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:40:17.515 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:40:17'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:40:17.515 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:40:17'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:40:17.515 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:40:17'.
2025-10-05 18:40:17.515 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:40:17'.
2025-10-05 18:40:17.515 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:40:17.515 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:40:17.516 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:40:17.516 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:40:17.520 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:40:17.520 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:40:17.520 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:40:17.521 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 4.9884ms
2025-10-05 18:40:17.521 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:40:17.521 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 5.9501ms
2025-10-05 18:40:17.521 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:40:17.521 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 5.1296ms
2025-10-05 18:40:17.521 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:40:17.521 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 6.1255ms
2025-10-05 18:41:19.793 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - null null
2025-10-05 18:41:19.793 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:41:19.793 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - 204 null null 0.2994ms
2025-10-05 18:41:19.796 +04:00 [INF] Request starting HTTP/2 PUT https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - application/json 66
2025-10-05 18:41:19.796 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:41:19.796 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:41:19'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:41:19.797 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:41:19'.
2025-10-05 18:41:19.797 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API)'
2025-10-05 18:41:19.797 +04:00 [INF] Route matched with {action = "UpdateItemsInBasket", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateItemsInBasket(System.Guid, GreenZone.Contracts.Dtos.BasketItemsDtos.BasketItemsUpdateDto) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:41:19.818 +04:00 [INF] Executed DbCommand (20ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:41:19.823 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__productId_0='?' (DbType = Guid), @__basketId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BasketId], [b].[CreatedAt], [b].[IsDeleted], [b].[ProductId], [b].[Quantity], [b].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [BasketItems] AS [b]
INNER JOIN [Products] AS [p] ON [b].[ProductId] = [p].[Id]
WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[ProductId] = @__productId_0 AND [b].[BasketId] = @__basketId_1
2025-10-05 18:41:19.828 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@p6='?' (DbType = Guid), @p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [BasketItems] SET [BasketId] = @p0, [CreatedAt] = @p1, [IsDeleted] = @p2, [ProductId] = @p3, [Quantity] = @p4, [UpdatedAt] = @p5
OUTPUT 1
WHERE [Id] = @p6;
2025-10-05 18:41:19.830 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:41:19.830 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:41:19.830 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API) in 32.866ms
2025-10-05 18:41:19.830 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API)'
2025-10-05 18:41:19.830 +04:00 [INF] Request finished HTTP/2 PUT https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - 200 null application/json; charset=utf-8 34.4539ms
2025-10-05 18:41:19.833 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 18:41:19.833 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:41:19.833 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.1757ms
2025-10-05 18:41:19.835 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 18:41:19.835 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:41:19.835 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:41:19'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:41:19.836 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:41:19'.
2025-10-05 18:41:19.836 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:41:19.836 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:41:19.837 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:41:19.837 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:41:19.837 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 1.4608ms
2025-10-05 18:41:19.837 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:41:19.837 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 2.2112ms
2025-10-05 18:41:19.840 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 18:41:19.840 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:41:19.840 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 18:41:19.840 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.1926ms
2025-10-05 18:41:19.840 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:41:19.840 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.2843ms
2025-10-05 18:41:19.843 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:41:19.843 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:41:19.843 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:41:19.843 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:41:19.843 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:41:19'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:41:19.844 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:41:19'.
2025-10-05 18:41:19.843 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:41:19'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:41:19.844 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:41:19'.
2025-10-05 18:41:19.844 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:41:19.844 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:41:19.844 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:41:19.844 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:41:19.849 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:41:19.849 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:41:19.849 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:41:19.849 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:41:19.849 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 5.414ms
2025-10-05 18:41:19.849 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:41:19.849 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 5.426ms
2025-10-05 18:41:19.849 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:41:19.850 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 6.8009ms
2025-10-05 18:41:19.850 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 6.8023ms
2025-10-05 18:41:29.124 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - null null
2025-10-05 18:41:29.124 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:41:29.124 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - 204 null null 0.2757ms
2025-10-05 18:41:29.127 +04:00 [INF] Request starting HTTP/2 PUT https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - application/json 66
2025-10-05 18:41:29.127 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:41:29.128 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:41:29'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:41:29.128 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:41:29'.
2025-10-05 18:41:29.128 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API)'
2025-10-05 18:41:29.128 +04:00 [INF] Route matched with {action = "UpdateItemsInBasket", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateItemsInBasket(System.Guid, GreenZone.Contracts.Dtos.BasketItemsDtos.BasketItemsUpdateDto) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:41:29.130 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:41:29.131 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__productId_0='?' (DbType = Guid), @__basketId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BasketId], [b].[CreatedAt], [b].[IsDeleted], [b].[ProductId], [b].[Quantity], [b].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [BasketItems] AS [b]
INNER JOIN [Products] AS [p] ON [b].[ProductId] = [p].[Id]
WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[ProductId] = @__productId_0 AND [b].[BasketId] = @__basketId_1
2025-10-05 18:41:29.135 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@p6='?' (DbType = Guid), @p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [BasketItems] SET [BasketId] = @p0, [CreatedAt] = @p1, [IsDeleted] = @p2, [ProductId] = @p3, [Quantity] = @p4, [UpdatedAt] = @p5
OUTPUT 1
WHERE [Id] = @p6;
2025-10-05 18:41:29.136 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:41:29.137 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:41:29.137 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API) in 8.6167ms
2025-10-05 18:41:29.137 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API)'
2025-10-05 18:41:29.137 +04:00 [INF] Request finished HTTP/2 PUT https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - 200 null application/json; charset=utf-8 9.2941ms
2025-10-05 18:41:29.141 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 18:41:29.141 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:41:29.141 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.2045ms
2025-10-05 18:41:29.143 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 18:41:29.143 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:41:29.143 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:41:29'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:41:29.143 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:41:29'.
2025-10-05 18:41:29.143 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:41:29.143 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:41:29.145 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:41:29.145 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:41:29.145 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 1.584ms
2025-10-05 18:41:29.145 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:41:29.145 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 2.3541ms
2025-10-05 18:41:29.149 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 18:41:29.149 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 18:41:29.149 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:41:29.150 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:41:29.150 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.13ms
2025-10-05 18:41:29.150 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.2103ms
2025-10-05 18:41:29.151 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:41:29.151 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:41:29.151 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:41:29.151 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:41:29.151 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:41:29'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:41:29.151 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:41:29'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:41:29.152 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:41:29'.
2025-10-05 18:41:29.152 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:41:29'.
2025-10-05 18:41:29.152 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:41:29.152 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:41:29.152 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:41:29.152 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:41:29.153 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:41:29.153 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:41:29.153 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:41:29.154 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 1.4887ms
2025-10-05 18:41:29.154 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:41:29.154 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:41:29.154 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.618ms
2025-10-05 18:41:29.154 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 2.4626ms
2025-10-05 18:41:29.154 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:41:29.154 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 2.5701ms
2025-10-05 18:42:45.751 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 18:42:45.752 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:42:45.752 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.4701ms
2025-10-05 18:42:45.755 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 18:42:45.755 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:42:45.756 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:42:45'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:42:45.756 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:42:45'.
2025-10-05 18:42:45.756 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:42:45.756 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:42:45.782 +04:00 [INF] Executed DbCommand (24ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:42:45.782 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:42:45.782 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 26.2283ms
2025-10-05 18:42:45.783 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:42:45.783 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 27.4114ms
2025-10-05 18:42:45.805 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 18:42:45.805 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 18:42:45.805 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:42:45.805 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:42:45.805 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.1436ms
2025-10-05 18:42:45.805 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.1243ms
2025-10-05 18:42:45.810 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:42:45.810 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:42:45.810 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:42:45.810 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:42:45.810 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:42:45'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:42:45.810 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:42:45'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:42:45.810 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:42:45'.
2025-10-05 18:42:45.810 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:42:45'.
2025-10-05 18:42:45.810 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:42:45.810 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:42:45.810 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:42:45.810 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:42:45.815 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:42:45.815 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:42:45.816 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:42:45.816 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:42:45.816 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 5.1627ms
2025-10-05 18:42:45.816 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 5.1798ms
2025-10-05 18:42:45.816 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:42:45.816 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:42:45.816 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 6.2507ms
2025-10-05 18:42:45.816 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 6.3202ms
2025-10-05 18:43:07.627 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-05 18:43:07.627 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:43:07.627 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.1656ms
2025-10-05 18:43:07.629 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 18:43:07.629 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:43:07.629 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:43:07.629 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 18:43:07.646 +04:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 18:43:07.647 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:43:07.647 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 18.403ms
2025-10-05 18:43:07.647 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:43:07.647 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 18.7577ms
2025-10-05 18:43:07.649 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 18:43:07.649 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:43:07.649 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:43:07.649 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 18:43:07.651 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 18:43:07.652 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:43:07.652 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 2.9822ms
2025-10-05 18:43:07.652 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:43:07.652 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 3.5684ms
2025-10-05 18:43:07.660 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 18:43:07.660 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:43:07.660 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.2237ms
2025-10-05 18:43:07.661 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 18:43:07.661 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:43:07.661 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.1051ms
2025-10-05 18:43:07.663 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 18:43:07.663 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:43:07.663 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.2137ms
2025-10-05 18:43:07.663 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 18:43:07.663 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:43:07.664 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:43:07'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:43:07.664 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:43:07'.
2025-10-05 18:43:07.664 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:43:07.664 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:43:07.666 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:43:07.666 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:43:07.666 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 2.4228ms
2025-10-05 18:43:07.666 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:43:07.666 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 3.0605ms
2025-10-05 18:43:07.667 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 18:43:07.667 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:43:07.668 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:43:07'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:43:07.668 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:43:07'.
2025-10-05 18:43:07.668 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:43:07.668 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:43:07.671 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:43:07.671 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:43:07.671 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 2.357ms
2025-10-05 18:43:07.671 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:43:07.671 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 3.6308ms
2025-10-05 18:43:07.672 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 18:43:07.672 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:43:07.673 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:43:07'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:43:07.673 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:43:07'.
2025-10-05 18:43:07.673 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:43:07.673 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:43:07.675 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:43:07.675 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:43:07.675 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 1.9575ms
2025-10-05 18:43:07.675 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:43:07.675 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 3.0279ms
2025-10-05 18:43:07.686 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 18:43:07.687 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:43:07.686 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 18:43:07.687 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:43:07.687 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.1691ms
2025-10-05 18:43:07.687 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.2088ms
2025-10-05 18:43:07.687 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 18:43:07.687 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:43:07.687 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.1142ms
2025-10-05 18:43:07.687 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 18:43:07.687 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:43:07.687 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.0929ms
2025-10-05 18:43:07.690 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:43:07.690 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:43:07.690 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:43:07.690 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:43:07.690 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:43:07'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:43:07.690 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:43:07'.
2025-10-05 18:43:07.690 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:43:07'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:43:07.690 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:43:07'.
2025-10-05 18:43:07.690 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:43:07.691 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:43:07.691 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:43:07.691 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:43:07.692 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:43:07.692 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:43:07.692 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:43:07.692 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:43:07.693 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 1.9559ms
2025-10-05 18:43:07.693 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.9479ms
2025-10-05 18:43:07.693 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:43:07.693 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:43:07.693 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 2.9069ms
2025-10-05 18:43:07.693 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 2.8832ms
2025-10-05 18:43:07.694 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:43:07.694 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:43:07.694 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:43:07.694 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:43:07.694 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:43:07'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:43:07.694 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:43:07'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:43:07.694 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:43:07'.
2025-10-05 18:43:07.694 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:43:07'.
2025-10-05 18:43:07.694 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:43:07.695 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:43:07.695 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:43:07.695 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:43:07.696 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:43:07.696 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:43:07.697 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:43:07.697 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:43:07.697 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 2.036ms
2025-10-05 18:43:07.697 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 2.1175ms
2025-10-05 18:43:07.697 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:43:07.697 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:43:07.697 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 2.7613ms
2025-10-05 18:43:07.697 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 2.7709ms
2025-10-05 18:43:13.496 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - null null
2025-10-05 18:43:13.496 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:43:13.497 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - 204 null null 0.2283ms
2025-10-05 18:43:13.498 +04:00 [INF] Request starting HTTP/2 PUT https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - application/json 67
2025-10-05 18:43:13.498 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:43:13.498 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:43:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:43:13.498 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:43:13'.
2025-10-05 18:43:13.498 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API)'
2025-10-05 18:43:13.498 +04:00 [INF] Route matched with {action = "UpdateItemsInBasket", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateItemsInBasket(System.Guid, GreenZone.Contracts.Dtos.BasketItemsDtos.BasketItemsUpdateDto) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:43:13.500 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:43:13.505 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__productId_0='?' (DbType = Guid), @__basketId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BasketId], [b].[CreatedAt], [b].[IsDeleted], [b].[ProductId], [b].[Quantity], [b].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [BasketItems] AS [b]
INNER JOIN [Products] AS [p] ON [b].[ProductId] = [p].[Id]
WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[ProductId] = @__productId_0 AND [b].[BasketId] = @__basketId_1
2025-10-05 18:43:13.512 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[@p6='?' (DbType = Guid), @p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [BasketItems] SET [BasketId] = @p0, [CreatedAt] = @p1, [IsDeleted] = @p2, [ProductId] = @p3, [Quantity] = @p4, [UpdatedAt] = @p5
OUTPUT 1
WHERE [Id] = @p6;
2025-10-05 18:43:13.513 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:43:13.513 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:43:13.513 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API) in 14.6824ms
2025-10-05 18:43:13.513 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API)'
2025-10-05 18:43:13.513 +04:00 [INF] Request finished HTTP/2 PUT https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - 200 null application/json; charset=utf-8 15.1844ms
2025-10-05 18:43:13.517 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 18:43:13.518 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:43:13.518 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.122ms
2025-10-05 18:43:13.519 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 18:43:13.519 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:43:13.520 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:43:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:43:13.520 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:43:13'.
2025-10-05 18:43:13.520 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:43:13.520 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:43:13.521 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:43:13.521 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:43:13.521 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 1.4426ms
2025-10-05 18:43:13.521 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:43:13.521 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 2.0355ms
2025-10-05 18:43:13.524 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 18:43:13.524 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 18:43:13.524 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:43:13.524 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:43:13.524 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.1349ms
2025-10-05 18:43:13.524 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.1422ms
2025-10-05 18:43:13.526 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:43:13.526 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:43:13.526 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:43:13.526 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:43:13.526 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:43:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:43:13.526 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:43:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:43:13.526 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:43:13'.
2025-10-05 18:43:13.526 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:43:13'.
2025-10-05 18:43:13.526 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:43:13.526 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:43:13.526 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:43:13.526 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:43:13.527 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:43:13.527 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:43:13.527 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:43:13.527 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 0.9373ms
2025-10-05 18:43:13.527 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:43:13.527 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:43:13.527 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.039ms
2025-10-05 18:43:13.527 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 1.5953ms
2025-10-05 18:43:13.527 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:43:13.527 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 1.6222ms
2025-10-05 18:45:23.345 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-05 18:45:23.345 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:23.345 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.167ms
2025-10-05 18:45:23.345 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-05 18:45:23.346 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:23.346 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.1329ms
2025-10-05 18:45:23.347 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 18:45:23.347 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:23.347 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:45:23.347 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 18:45:23.359 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 18:45:23.359 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:45:23.360 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 12.7725ms
2025-10-05 18:45:23.360 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:45:23.360 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 13.0815ms
2025-10-05 18:45:23.361 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 18:45:23.361 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:23.362 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:45:23.362 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 18:45:23.363 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 18:45:23.364 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:45:23.364 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 2.2ms
2025-10-05 18:45:23.364 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:45:23.364 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 2.557ms
2025-10-05 18:45:23.365 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 18:45:23.365 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:23.365 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.1447ms
2025-10-05 18:45:23.366 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 18:45:23.366 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:23.366 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.1121ms
2025-10-05 18:45:23.368 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 18:45:23.368 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:23.368 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:45:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:45:23.369 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:45:23'.
2025-10-05 18:45:23.369 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:45:23.369 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:45:23.379 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:45:23.380 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:45:23.380 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 11.5067ms
2025-10-05 18:45:23.380 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:45:23.381 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 12.4143ms
2025-10-05 18:45:23.382 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 18:45:23.382 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:23.383 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:45:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:45:23.383 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:45:23'.
2025-10-05 18:45:23.383 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:45:23.383 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:45:23.385 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:45:23.385 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:45:23.385 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 1.9124ms
2025-10-05 18:45:23.385 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:45:23.385 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 3.0072ms
2025-10-05 18:45:23.385 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 18:45:23.386 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 18:45:23.386 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:23.386 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:23.386 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.095ms
2025-10-05 18:45:23.386 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.146ms
2025-10-05 18:45:23.389 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:45:23.389 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:45:23.389 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:23.389 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:23.389 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:45:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:45:23.389 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:45:23'.
2025-10-05 18:45:23.389 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:45:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:45:23.390 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:45:23'.
2025-10-05 18:45:23.390 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:45:23.390 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:45:23.390 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:45:23.390 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:45:23.395 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:45:23.395 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:45:23.395 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:45:23.396 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:45:23.396 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 5.7583ms
2025-10-05 18:45:23.396 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:45:23.396 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 5.7896ms
2025-10-05 18:45:23.396 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:45:23.396 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 6.8771ms
2025-10-05 18:45:23.396 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 6.9257ms
2025-10-05 18:45:23.397 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:45:23.397 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:45:23.397 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:23.397 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:23.397 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:45:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:45:23.397 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:45:23'.
2025-10-05 18:45:23.397 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:45:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:45:23.397 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:45:23'.
2025-10-05 18:45:23.397 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:45:23.397 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:45:23.397 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:45:23.397 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:45:23.398 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:45:23.399 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:45:23.399 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:45:23.399 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.3078ms
2025-10-05 18:45:23.399 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:45:23.399 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 2.1563ms
2025-10-05 18:45:23.399 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:45:23.399 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 1.5001ms
2025-10-05 18:45:23.399 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:45:23.399 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 2.4087ms
2025-10-05 18:45:44.312 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-05 18:45:44.312 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:44.312 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.1868ms
2025-10-05 18:45:44.314 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-05 18:45:44.314 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:44.314 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.1148ms
2025-10-05 18:45:44.316 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 18:45:44.316 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:44.316 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:45:44.316 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 18:45:44.325 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 18:45:44.325 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:45:44.325 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 9.5865ms
2025-10-05 18:45:44.325 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:45:44.326 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 9.8807ms
2025-10-05 18:45:44.326 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 18:45:44.326 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:44.327 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:45:44.327 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 18:45:44.328 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 18:45:44.329 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:45:44.329 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 1.993ms
2025-10-05 18:45:44.329 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:45:44.329 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 2.4145ms
2025-10-05 18:45:44.331 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 18:45:44.331 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 18:45:44.331 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:44.331 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:44.331 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.1141ms
2025-10-05 18:45:44.331 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.1375ms
2025-10-05 18:45:44.333 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 18:45:44.333 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:44.333 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:45:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:45:44.333 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:45:44'.
2025-10-05 18:45:44.333 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:45:44.333 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:45:44.343 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:45:44.343 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:45:44.343 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 9.8741ms
2025-10-05 18:45:44.343 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:45:44.343 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 10.4533ms
2025-10-05 18:45:44.345 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 18:45:44.345 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:44.346 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:45:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:45:44.346 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:45:44'.
2025-10-05 18:45:44.346 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:45:44.346 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:45:44.347 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 18:45:44.347 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:44.347 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 18:45:44.347 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.1037ms
2025-10-05 18:45:44.347 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:44.347 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.1967ms
2025-10-05 18:45:44.348 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:45:44.348 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:45:44.348 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 2.1176ms
2025-10-05 18:45:44.348 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:45:44.349 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 3.4258ms
2025-10-05 18:45:44.350 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:45:44.350 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:44.350 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:45:44.350 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:44.350 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:45:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:45:44.350 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:45:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:45:44.351 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:45:44'.
2025-10-05 18:45:44.351 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:45:44'.
2025-10-05 18:45:44.351 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:45:44.351 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:45:44.351 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:45:44.351 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:45:44.355 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:45:44.355 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:45:44.355 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:45:44.355 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:45:44.355 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 4.4798ms
2025-10-05 18:45:44.355 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:45:44.355 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 4.4973ms
2025-10-05 18:45:44.356 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:45:44.356 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 5.379ms
2025-10-05 18:45:44.356 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 5.2973ms
2025-10-05 18:45:44.357 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:45:44.357 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:44.357 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:45:44.357 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:44.357 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:45:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:45:44.357 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:45:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:45:44.358 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:45:44'.
2025-10-05 18:45:44.358 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:45:44'.
2025-10-05 18:45:44.358 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:45:44.358 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:45:44.358 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:45:44.358 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:45:44.359 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:45:44.359 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:45:44.360 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:45:44.360 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:45:44.360 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 2.1157ms
2025-10-05 18:45:44.360 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:45:44.360 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 2.192ms
2025-10-05 18:45:44.360 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:45:44.360 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 2.8359ms
2025-10-05 18:45:44.360 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 2.8875ms
2025-10-05 18:45:49.764 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 18:45:49.764 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 18:45:49.764 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:49.764 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:49.764 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.242ms
2025-10-05 18:45:49.764 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.2406ms
2025-10-05 18:45:49.764 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 18:45:49.764 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 18:45:49.765 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:49.765 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:49.765 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.1087ms
2025-10-05 18:45:49.765 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.1727ms
2025-10-05 18:45:49.765 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 18:45:49.765 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 18:45:49.765 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:49.765 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:49.765 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.1459ms
2025-10-05 18:45:49.765 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.1642ms
2025-10-05 18:45:49.767 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:45:49.767 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:45:49.768 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:49.768 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:49.768 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:45:49'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:45:49.768 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:45:49'.
2025-10-05 18:45:49.768 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:45:49'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:45:49.768 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:45:49.768 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:45:49'.
2025-10-05 18:45:49.769 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:45:49.769 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:45:49.769 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:45:49.770 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:45:49.770 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:45:49.770 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:45:49.770 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.8574ms
2025-10-05 18:45:49.771 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:45:49.771 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:45:49.771 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 3.2165ms
2025-10-05 18:45:49.771 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 2.1452ms
2025-10-05 18:45:49.771 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:45:49.771 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 3.3712ms
2025-10-05 18:45:49.773 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:45:49.773 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:45:49.773 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:49.773 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:49.773 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:45:49'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:45:49.773 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:45:49'.
2025-10-05 18:45:49.773 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:45:49'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:45:49.773 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:45:49'.
2025-10-05 18:45:49.773 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:45:49.773 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:45:49.773 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:45:49.774 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:45:49.775 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:45:49.775 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:45:49.775 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:45:49.775 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 1.7363ms
2025-10-05 18:45:49.775 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:45:49.775 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 2.5646ms
2025-10-05 18:45:49.775 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:45:49.775 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.9191ms
2025-10-05 18:45:49.775 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:45:49.776 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 2.7896ms
2025-10-05 18:45:49.777 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:45:49.777 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:49.777 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:45:49'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:45:49.778 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:45:49'.
2025-10-05 18:45:49.778 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:45:49.778 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:45:49.781 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:45:49.781 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:45:49.781 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 2.871ms
2025-10-05 18:45:49.781 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:45:49.781 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 4.8154ms
2025-10-05 18:45:49.783 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:45:49.783 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:45:49.783 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:45:49'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:45:49.783 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:45:49'.
2025-10-05 18:45:49.784 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:45:49.784 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:45:49.787 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:45:49.787 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:45:49.787 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 3.0056ms
2025-10-05 18:45:49.787 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:45:49.787 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 4.6265ms
2025-10-05 18:46:00.482 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-05 18:46:00.483 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-05 18:46:00.483 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:46:00.483 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:46:00.483 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.2624ms
2025-10-05 18:46:00.483 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.1779ms
2025-10-05 18:46:00.485 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 18:46:00.485 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:46:00.485 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:46:00.485 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 18:46:00.487 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 18:46:00.487 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:46:00.488 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 2.5197ms
2025-10-05 18:46:00.488 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:46:00.488 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 3.0697ms
2025-10-05 18:46:00.489 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 18:46:00.490 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:46:00.490 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:46:00.490 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 18:46:00.493 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 18:46:00.493 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 18:46:00.493 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:46:00.493 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 18:46:00.493 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.1155ms
2025-10-05 18:46:00.493 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:46:00.493 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.1179ms
2025-10-05 18:46:00.494 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:46:00.494 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 3.7557ms
2025-10-05 18:46:00.494 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:46:00.494 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 4.5286ms
2025-10-05 18:46:00.496 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 18:46:00.497 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:46:00.497 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:46:00'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:46:00.497 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:46:00'.
2025-10-05 18:46:00.498 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:46:00.498 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:46:00.500 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:46:00.501 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:46:00.501 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 2.98ms
2025-10-05 18:46:00.501 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:46:00.501 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 4.2851ms
2025-10-05 18:46:00.502 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 18:46:00.502 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:46:00.503 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:46:00'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:46:00.503 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:46:00'.
2025-10-05 18:46:00.503 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:46:00.503 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:46:00.504 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 18:46:00.504 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 18:46:00.504 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:46:00.504 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:46:00.504 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.0858ms
2025-10-05 18:46:00.504 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.1529ms
2025-10-05 18:46:00.505 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:46:00.505 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:46:00.505 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 1.8827ms
2025-10-05 18:46:00.505 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:46:00.505 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 3.4196ms
2025-10-05 18:46:00.508 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:46:00.508 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:46:00.509 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:46:00'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:46:00.509 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:46:00'.
2025-10-05 18:46:00.509 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:46:00.509 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:46:00.511 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:46:00.511 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:46:00.511 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:46:00'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:46:00.511 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:46:00.511 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:46:00'.
2025-10-05 18:46:00.511 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:46:00.511 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:46:00.511 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:46:00.511 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 2.2331ms
2025-10-05 18:46:00.511 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:46:00.511 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 3.5303ms
2025-10-05 18:46:00.512 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:46:00.512 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:46:00.512 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:46:00.513 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:46:00'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:46:00.513 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:46:00'.
2025-10-05 18:46:00.513 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:46:00.513 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:46:00.513 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:46:00.513 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.649ms
2025-10-05 18:46:00.513 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:46:00.513 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 2.4358ms
2025-10-05 18:46:00.515 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:46:00.515 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:46:00.515 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:46:00'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:46:00.515 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:46:00'.
2025-10-05 18:46:00.515 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:46:00.515 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:46:00.515 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:46:00.516 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:46:00.516 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 2.8251ms
2025-10-05 18:46:00.516 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:46:00.516 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 3.6645ms
2025-10-05 18:46:00.516 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:46:00.517 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:46:00.517 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.3114ms
2025-10-05 18:46:00.517 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:46:00.517 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 2.1175ms
2025-10-05 18:47:09.661 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-05 18:47:09.661 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:47:09.661 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.1572ms
2025-10-05 18:47:09.663 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-05 18:47:09.663 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:47:09.663 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.1733ms
2025-10-05 18:47:09.664 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 18:47:09.664 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:47:09.664 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:47:09.664 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 18:47:09.672 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 18:47:09.673 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:47:09.673 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 8.6311ms
2025-10-05 18:47:09.673 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:47:09.673 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 9.0126ms
2025-10-05 18:47:09.674 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 18:47:09.674 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:47:09.675 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:47:09.675 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 18:47:09.677 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 18:47:09.677 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:47:09.678 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 2.9157ms
2025-10-05 18:47:09.678 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:47:09.678 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 3.2764ms
2025-10-05 18:47:09.678 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 18:47:09.678 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:47:09.678 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.0809ms
2025-10-05 18:47:09.678 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 18:47:09.678 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:47:09.678 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.0836ms
2025-10-05 18:47:09.680 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 18:47:09.680 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:47:09.680 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:47:09'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:47:09.680 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:47:09'.
2025-10-05 18:47:09.680 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:47:09.680 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:47:09.689 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:47:09.690 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:47:09.690 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 10.0515ms
2025-10-05 18:47:09.690 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:47:09.690 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 10.5841ms
2025-10-05 18:47:09.691 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 18:47:09.692 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:47:09.692 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:47:09'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:47:09.693 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:47:09'.
2025-10-05 18:47:09.693 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:47:09.693 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:47:09.694 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 18:47:09.694 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:47:09.694 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.0979ms
2025-10-05 18:47:09.694 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 18:47:09.694 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:47:09.694 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.117ms
2025-10-05 18:47:09.694 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:47:09.694 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:47:09.694 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 1.5503ms
2025-10-05 18:47:09.694 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:47:09.694 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 3.0159ms
2025-10-05 18:47:09.696 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:47:09.696 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:47:09.696 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:47:09.696 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:47:09.697 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:47:09'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:47:09.697 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:47:09'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:47:09.697 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:47:09'.
2025-10-05 18:47:09.697 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:47:09'.
2025-10-05 18:47:09.697 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:47:09.697 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:47:09.697 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:47:09.697 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:47:09.703 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:47:09.703 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:47:09.703 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:47:09.703 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:47:09.703 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 5.583ms
2025-10-05 18:47:09.703 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 5.612ms
2025-10-05 18:47:09.703 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:47:09.703 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:47:09.703 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 7.0086ms
2025-10-05 18:47:09.703 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 7.0085ms
2025-10-05 18:47:09.704 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:47:09.704 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:47:09.704 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:47:09.704 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:47:09.704 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:47:09'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:47:09.705 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:47:09'.
2025-10-05 18:47:09.705 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:47:09'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:47:09.705 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:47:09'.
2025-10-05 18:47:09.705 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:47:09.705 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:47:09.705 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:47:09.705 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:47:09.707 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:47:09.707 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:47:09.707 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:47:09.707 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:47:09.707 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 2.3028ms
2025-10-05 18:47:09.707 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:47:09.707 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 2.3281ms
2025-10-05 18:47:09.707 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:47:09.708 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 3.2997ms
2025-10-05 18:47:09.708 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 3.2539ms
2025-10-05 18:47:30.005 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-05 18:47:30.005 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:47:30.005 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.1416ms
2025-10-05 18:47:30.006 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 18:47:30.006 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:47:30.006 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:47:30.006 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 18:47:30.008 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 18:47:30.009 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:47:30.009 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 2.2421ms
2025-10-05 18:47:30.009 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:47:30.009 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 2.5501ms
2025-10-05 18:47:30.012 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-05 18:47:30.012 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:47:30.012 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:47:30.012 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-05 18:47:30.014 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-05 18:47:30.014 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:47:30.014 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 1.9041ms
2025-10-05 18:47:30.014 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-05 18:47:30.014 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 2.2068ms
2025-10-05 18:47:30.022 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 18:47:30.022 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:47:30.022 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 18:47:30.022 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-05 18:47:30.022 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:47:30.022 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.244ms
2025-10-05 18:47:30.022 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.1009ms
2025-10-05 18:47:30.022 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:47:30.022 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.1559ms
2025-10-05 18:47:30.024 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 18:47:30.024 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:47:30.024 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:47:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:47:30.024 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:47:30'.
2025-10-05 18:47:30.025 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:47:30.025 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:47:30.026 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:47:30.026 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:47:30.026 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 1.8192ms
2025-10-05 18:47:30.026 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:47:30.026 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 2.5378ms
2025-10-05 18:47:30.027 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 18:47:30.027 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:47:30.028 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:47:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:47:30.028 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:47:30'.
2025-10-05 18:47:30.028 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:47:30.028 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:47:30.029 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-05 18:47:30.030 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:47:30.030 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-05 18:47:30.030 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.137ms
2025-10-05 18:47:30.030 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:47:30.030 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:47:30.030 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.1239ms
2025-10-05 18:47:30.030 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:47:30.030 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 1.5938ms
2025-10-05 18:47:30.030 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:47:30.030 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 2.591ms
2025-10-05 18:47:30.030 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-05 18:47:30.030 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:47:30.031 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:47:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:47:30.031 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:47:30'.
2025-10-05 18:47:30.031 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:47:30.031 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-05 18:47:30.033 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:47:30.033 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:47:30.033 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:47:30.033 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:47:30.033 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:47:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:47:30.033 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:47:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:47:30.034 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:47:30'.
2025-10-05 18:47:30.033 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-05 18:47:30.033 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:47:30'.
2025-10-05 18:47:30.034 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:47:30.034 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:47:30.034 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:47:30.034 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:47:30.034 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-05 18:47:30.034 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 3.1885ms
2025-10-05 18:47:30.034 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-05 18:47:30.034 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 3.7649ms
2025-10-05 18:47:30.035 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:47:30.035 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:47:30.035 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 1.1333ms
2025-10-05 18:47:30.035 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:47:30.035 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:47:30.035 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 2.634ms
2025-10-05 18:47:30.036 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:47:30.036 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.8186ms
2025-10-05 18:47:30.036 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:47:30.036 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 3.235ms
2025-10-05 18:47:30.036 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-05 18:47:30.036 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:47:30.037 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:47:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:47:30.037 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-05 18:47:30.037 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:47:30'.
2025-10-05 18:47:30.037 +04:00 [INF] CORS policy execution successful.
2025-10-05 18:47:30.037 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:47:30.037 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-05 18:47:30.037 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:47:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-05 18:47:30.037 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '05.10.2025 14:47:30'.
2025-10-05 18:47:30.037 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:47:30.037 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-05 18:47:30.039 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-05 18:47:30.039 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-05 18:47:30.039 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:47:30.039 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-05 18:47:30.039 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 1.999ms
2025-10-05 18:47:30.039 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-05 18:47:30.039 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.5855ms
2025-10-05 18:47:30.039 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 2.915ms
2025-10-05 18:47:30.039 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-05 18:47:30.039 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 2.6733ms
2025-10-05 19:06:19.361 +04:00 [WRN] No store type was specified for the decimal property 'Quantity' on entity type 'OrderItem'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-10-05 19:06:19.586 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-05 19:06:19.606 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-05 19:06:19.608 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-05 19:06:19.609 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-05 19:06:19.621 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-10-05 19:06:19.630 +04:00 [INF] No migrations were applied. The database is already up to date.
2025-10-05 19:06:19.631 +04:00 [INF] Migrations applied
2025-10-05 19:06:19.762 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-05 19:06:19.784 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-05 19:06:19.785 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-05 19:06:19.793 +04:00 [INF] User profile is available. Using 'C:\Users\ASUS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-05 19:06:19.802 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-10-05 19:06:19.823 +04:00 [INF] Admin user already exists: admin@greenzone.com
2025-10-05 19:06:19.945 +04:00 [INF] Now listening on: https://localhost:7100
2025-10-05 19:06:19.975 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-05 19:06:19.976 +04:00 [INF] Hosting environment: Development
2025-10-05 19:06:19.976 +04:00 [INF] Content root path: C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API
2025-10-05 19:19:51.522 +04:00 [WRN] No store type was specified for the decimal property 'Quantity' on entity type 'OrderItem'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-10-05 19:19:51.760 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-05 19:19:51.784 +04:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-05 19:19:51.787 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-05 19:19:51.788 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-05 19:19:51.799 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-10-05 19:19:51.808 +04:00 [INF] No migrations were applied. The database is already up to date.
2025-10-05 19:19:51.809 +04:00 [INF] Migrations applied
2025-10-05 19:19:51.940 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-05 19:19:51.966 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-05 19:19:51.967 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-05 19:19:51.974 +04:00 [INF] User profile is available. Using 'C:\Users\ASUS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-05 19:19:51.985 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-10-05 19:19:52.007 +04:00 [INF] Admin user already exists: admin@greenzone.com
2025-10-05 19:19:52.098 +04:00 [INF] Now listening on: https://localhost:7100
2025-10-05 19:19:52.121 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-05 19:19:52.121 +04:00 [INF] Hosting environment: Development
2025-10-05 19:19:52.121 +04:00 [INF] Content root path: C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API
