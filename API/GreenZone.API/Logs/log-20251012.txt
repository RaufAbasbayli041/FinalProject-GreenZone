2025-10-12 12:08:58.887 +04:00 [WRN] No store type was specified for the decimal property 'Quantity' on entity type 'OrderItem'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-10-12 12:08:59.922 +04:00 [INF] Executed DbCommand (30ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-12 12:08:59.971 +04:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-12 12:08:59.983 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-12 12:08:59.992 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-12 12:09:00.061 +04:00 [INF] Executed DbCommand (37ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-10-12 12:09:00.099 +04:00 [INF] No migrations were applied. The database is already up to date.
2025-10-12 12:09:00.103 +04:00 [INF] Migrations applied
2025-10-12 12:09:00.433 +04:00 [INF] Executed DbCommand (54ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-12 12:09:00.488 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-12 12:09:00.501 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-12 12:09:00.525 +04:00 [INF] User profile is available. Using 'C:\Users\ASUS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-12 12:09:00.567 +04:00 [INF] Executed DbCommand (22ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-10-12 12:09:00.697 +04:00 [INF] Admin user already exists: admin@greenzone.com
2025-10-12 12:09:01.092 +04:00 [INF] Now listening on: https://localhost:7100
2025-10-12 12:09:01.160 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-12 12:09:01.164 +04:00 [INF] Hosting environment: Development
2025-10-12 12:09:01.167 +04:00 [INF] Content root path: C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API
2025-10-12 12:09:02.713 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/index.html - null null
2025-10-12 12:09:03.198 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/index.html - 200 null text/html;charset=utf-8 488.8282ms
2025-10-12 12:09:03.205 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - null null
2025-10-12 12:09:03.205 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_vs/browserLink - null null
2025-10-12 12:09:03.241 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - 200 16511 application/javascript; charset=utf-8 35.5439ms
2025-10-12 12:09:03.357 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_vs/browserLink - 200 null text/javascript; charset=UTF-8 152.5453ms
2025-10-12 12:09:03.578 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - null null
2025-10-12 12:09:03.722 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 143.9359ms
2025-10-12 12:37:30.330 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 12:37:30.330 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 12:37:30.342 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:37:30.342 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:37:30.345 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 14.2308ms
2025-10-12 12:37:30.345 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 14.5687ms
2025-10-12 12:37:30.354 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 12:37:30.354 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 12:37:30.361 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:37:30.362 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:37:30.390 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 12:37:30.395 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:37:30.396 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 6.3606ms
2025-10-12 12:37:30.401 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 12:37:30.405 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:37:30.455 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:37:30.481 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 12:37:30.502 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:37:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:37:30.502 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:37:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:37:30.525 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:37:30'.
2025-10-12 12:37:30.527 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:37:30'.
2025-10-12 12:37:30.529 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:37:30.529 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:37:30.535 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 12:37:30.535 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 12:37:30.775 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-10-12 12:37:30.854 +04:00 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 12:37:30.854 +04:00 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 12:37:30.858 +04:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 12:37:30.884 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:37:30.901 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:37:30.913 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:37:30.931 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 444.2701ms
2025-10-12 12:37:30.931 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 390.5859ms
2025-10-12 12:37:30.931 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 389.8275ms
2025-10-12 12:37:30.934 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:37:30.935 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:37:30.937 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:37:30.945 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 590.7222ms
2025-10-12 12:37:30.945 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 590.7101ms
2025-10-12 12:37:30.945 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 544.0371ms
2025-10-12 12:37:30.946 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 12:37:30.963 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:37:30.965 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 18.3194ms
2025-10-12 12:37:30.971 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 12:37:30.976 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:37:30.979 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:37:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:37:30.983 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:37:30'.
2025-10-12 12:37:30.985 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:37:30.999 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 12:37:31.134 +04:00 [INF] Executed DbCommand (26ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 12:37:31.181 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 12:37:31.187 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 184.8364ms
2025-10-12 12:37:31.190 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:37:31.193 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 221.8944ms
2025-10-12 12:43:54.970 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 12:43:54.970 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 12:43:54.974 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:43:54.976 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:43:54.977 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 6.9881ms
2025-10-12 12:43:54.978 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 7.8899ms
2025-10-12 12:43:54.982 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 12:43:54.982 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 12:43:54.990 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:43:54.992 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:43:54.994 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:43:54'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:43:54.995 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:43:54'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:43:54.996 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:43:54'.
2025-10-12 12:43:54.998 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:43:54'.
2025-10-12 12:43:54.999 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:43:55.000 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:43:55.002 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 12:43:55.003 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 12:43:55.013 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 12:43:55.014 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 12:43:55.014 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 12:43:55.016 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:43:55.020 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:43:55.021 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:43:55.022 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 9.139ms
2025-10-12 12:43:55.024 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 16.3723ms
2025-10-12 12:43:55.025 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 12:43:55.025 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 19.6561ms
2025-10-12 12:43:55.030 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:43:55.033 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:43:55.035 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:43:55.037 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 54.9804ms
2025-10-12 12:43:55.038 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:43:55.039 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 57.3811ms
2025-10-12 12:43:55.044 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 12:43:55.062 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 12:43:55.069 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:43:55.071 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 21.288ms
2025-10-12 12:43:55.073 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:43:55.074 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 49.2048ms
2025-10-12 12:43:55.081 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 12:43:55.084 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:43:55.085 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 4.2732ms
2025-10-12 12:43:55.087 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 12:43:55.093 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:43:55.095 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:43:55'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:43:55.097 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:43:55'.
2025-10-12 12:43:55.099 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:43:55.100 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 12:43:55.117 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 12:43:55.120 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 12:43:55.122 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 19.0085ms
2025-10-12 12:43:55.124 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:43:55.125 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 38.2108ms
2025-10-12 12:45:11.733 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 12:45:11.734 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 12:45:11.736 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 12:45:11.737 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 12:45:11.738 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:45:11.742 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:45:11.744 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:45:11.747 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:45:11.748 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 15.1245ms
2025-10-12 12:45:11.749 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 15.4483ms
2025-10-12 12:45:11.750 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 13.5182ms
2025-10-12 12:45:11.751 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 14.1999ms
2025-10-12 12:45:11.751 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 12:45:11.752 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 12:45:11.769 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:45:11.773 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:45:11.774 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:11'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:45:11.775 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:11'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:45:11.777 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:11'.
2025-10-12 12:45:11.779 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:11'.
2025-10-12 12:45:11.781 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:45:11.782 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:45:11.784 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 12:45:11.785 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 12:45:11.787 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 12:45:11.787 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 12:45:11.791 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:45:11.796 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:45:11.797 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 9.4916ms
2025-10-12 12:45:11.798 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 10.4755ms
2025-10-12 12:45:11.798 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 12:45:11.799 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 12:45:11.800 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 12:45:11.808 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:45:11.810 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:45:11.812 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:45:11.814 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 26.6196ms
2025-10-12 12:45:11.815 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 22.6527ms
2025-10-12 12:45:11.815 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 12:45:11.816 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 12:45:11.816 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:45:11.817 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:45:11.819 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:45:11.821 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:45:11.824 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:45:11.825 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 12:45:11.827 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 75.6323ms
2025-10-12 12:45:11.828 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 75.6171ms
2025-10-12 12:45:11.829 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:11'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:45:11.829 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:11'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:45:11.840 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:11'.
2025-10-12 12:45:11.841 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:11'.
2025-10-12 12:45:11.843 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:45:11.845 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:45:11.845 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 12:45:11.847 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 12:45:11.851 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 12:45:11.852 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 12:45:11.857 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:45:11.859 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:45:11.859 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 12:45:11.861 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 29.3566ms
2025-10-12 12:45:11.862 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 12:45:11.862 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.3856ms
2025-10-12 12:45:11.865 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:45:11.866 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:45:11.869 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:45:11.870 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:45:11.872 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 19.1784ms
2025-10-12 12:45:11.873 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 73.2007ms
2025-10-12 12:45:11.874 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:45:11.875 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 59.6167ms
2025-10-12 12:45:11.876 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:45:11.882 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 12:45:11.887 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 70.7496ms
2025-10-12 12:45:11.890 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 12:45:11.891 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 12:45:11.895 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:45:11.899 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:45:11.899 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 8.2861ms
2025-10-12 12:45:11.901 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 11.8779ms
2025-10-12 12:45:11.901 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 12:45:11.906 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:45:11.909 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:45:11.910 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 48.3886ms
2025-10-12 12:45:11.911 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:11'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:45:11.916 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:11'.
2025-10-12 12:45:11.918 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:45:11.919 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 12:45:11.933 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 12:45:11.937 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 12:45:11.939 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 17.8979ms
2025-10-12 12:45:11.940 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 12:45:11.941 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:45:11.944 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:45:11.945 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 43.8959ms
2025-10-12 12:45:11.947 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:11'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:45:11.953 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:11'.
2025-10-12 12:45:11.954 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:45:11.955 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 12:45:11.959 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 12:45:11.962 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 12:45:11.964 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 6.9627ms
2025-10-12 12:45:11.966 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:45:11.967 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 27.4205ms
2025-10-12 12:45:14.407 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - null null
2025-10-12 12:45:14.412 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:45:14.413 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 204 null null 6.3623ms
2025-10-12 12:45:14.415 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-12 12:45:14.421 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:45:14.422 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:14'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:45:14.424 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:14'.
2025-10-12 12:45:14.426 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:45:14.427 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 12:45:14.440 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 12:45:14.446 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 16.052ms
2025-10-12 12:45:14.448 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:45:14.450 +04:00 [ERR] An unhandled exception has occurred while executing the request.
GreenZone.Application.Exceptions.NotFoundException: Basket not found for the customer.
   at GreenZone.Application.Service.BasketService.GetBasketByCustomerAsync(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\BasketService.cs:line 75
   at GreenZone.API.Controllers.BasketController.GetBasketByCustomerId(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\BasketController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-12 12:45:14.470 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 500 null text/plain; charset=utf-8 55.5796ms
2025-10-12 12:45:15.612 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 12:45:15.617 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:45:15.618 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:45:15.619 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 12:45:15.631 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 12:45:15.634 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:45:15.637 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 15.2258ms
2025-10-12 12:45:15.638 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 12:45:15.639 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:45:15.642 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:45:15.644 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 31.7278ms
2025-10-12 12:45:15.645 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:45:15.650 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 12:45:15.650 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 12:45:15.653 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 12:45:15.655 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:45:15.658 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:45:15.658 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:15'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:45:15.660 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 8.1889ms
2025-10-12 12:45:15.662 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:15'.
2025-10-12 12:45:15.663 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:45:15.665 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:45:15.666 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 28.0077ms
2025-10-12 12:45:15.667 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 12:45:15.675 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 12:45:15.678 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 12:45:15.680 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 8.0341ms
2025-10-12 12:45:15.682 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 12:45:15.682 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:45:15.685 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:45:15.686 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 35.6582ms
2025-10-12 12:45:15.687 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:15'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:45:15.689 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 12:45:15.689 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 12:45:15.691 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:15'.
2025-10-12 12:45:15.693 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:45:15.696 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:45:15.697 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:45:15.698 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:15'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:45:15.699 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:15'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:45:15.700 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 12:45:15.701 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:15'.
2025-10-12 12:45:15.703 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:15'.
2025-10-12 12:45:15.706 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:45:15.707 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 12:45:15.707 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:45:15.709 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 12:45:15.710 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 12:45:15.711 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 12:45:15.713 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 8.0309ms
2025-10-12 12:45:15.716 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:45:15.717 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 35.2411ms
2025-10-12 12:45:15.721 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 12:45:15.721 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 12:45:15.723 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:45:15.725 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:45:15.726 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 11.7033ms
2025-10-12 12:45:15.727 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.161ms
2025-10-12 12:45:15.727 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 12:45:15.728 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 12:45:15.729 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:45:15.731 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:45:15.733 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:45:15.736 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:45:15.738 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 48.7915ms
2025-10-12 12:45:15.739 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 49.9214ms
2025-10-12 12:45:15.740 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:15'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:45:15.741 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:15'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:45:15.750 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:15'.
2025-10-12 12:45:15.752 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:15'.
2025-10-12 12:45:15.753 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:45:15.754 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:45:15.755 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 12:45:15.757 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 12:45:15.760 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 12:45:15.762 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 12:45:15.763 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:45:15.766 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:45:15.767 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.12ms
2025-10-12 12:45:15.769 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.7912ms
2025-10-12 12:45:15.770 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:45:15.772 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:45:15.773 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 45.7463ms
2025-10-12 12:45:15.774 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 46.2532ms
2025-10-12 12:45:20.167 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - null null
2025-10-12 12:45:20.170 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:45:20.171 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - 204 null null 3.7292ms
2025-10-12 12:45:20.173 +04:00 [INF] Request starting HTTP/2 PUT https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - application/json 66
2025-10-12 12:45:20.175 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:45:20.176 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:45:20.178 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:20'.
2025-10-12 12:45:20.179 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API)'
2025-10-12 12:45:20.187 +04:00 [INF] Route matched with {action = "UpdateItemsInBasket", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateItemsInBasket(System.Guid, GreenZone.Contracts.Dtos.BasketItemsDtos.BasketItemsUpdateDto) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 12:45:20.221 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 12:45:20.241 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[@__productId_0='?' (DbType = Guid), @__basketId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BasketId], [b].[CreatedAt], [b].[IsDeleted], [b].[ProductId], [b].[Quantity], [b].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [BasketItems] AS [b]
INNER JOIN [Products] AS [p] ON [b].[ProductId] = [p].[Id]
WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[ProductId] = @__productId_0 AND [b].[BasketId] = @__basketId_1
2025-10-12 12:45:20.334 +04:00 [INF] Executed DbCommand (18ms) [Parameters=[@p6='?' (DbType = Guid), @p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [BasketItems] SET [BasketId] = @p0, [CreatedAt] = @p1, [IsDeleted] = @p2, [ProductId] = @p3, [Quantity] = @p4, [UpdatedAt] = @p5
OUTPUT 1
WHERE [Id] = @p6;
2025-10-12 12:45:20.347 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 12:45:20.350 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 12:45:20.351 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API) in 159.9042ms
2025-10-12 12:45:20.352 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API)'
2025-10-12 12:45:20.353 +04:00 [INF] Request finished HTTP/2 PUT https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - 200 null application/json; charset=utf-8 179.9602ms
2025-10-12 12:45:20.355 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 12:45:20.357 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:45:20.358 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 2.9465ms
2025-10-12 12:45:20.359 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 12:45:20.362 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:45:20.363 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:45:20.366 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:20'.
2025-10-12 12:45:20.367 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:45:20.369 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 12:45:20.373 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 12:45:20.376 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 12:45:20.378 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 6.4943ms
2025-10-12 12:45:20.379 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:45:20.381 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 21.4537ms
2025-10-12 12:45:36.120 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 12:45:36.122 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:45:36.122 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 12:45:36.123 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 12:45:36.123 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 12:45:36.123 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 3.8352ms
2025-10-12 12:45:36.126 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 12:45:36.128 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:45:36.132 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:45:36.134 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:45:36.141 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:45:36.142 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 19.9166ms
2025-10-12 12:45:36.143 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 20.6678ms
2025-10-12 12:45:36.145 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 21.7324ms
2025-10-12 12:45:36.146 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:36'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:45:36.146 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 12:45:36.160 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:36'.
2025-10-12 12:45:36.163 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:45:36.165 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:45:36.166 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:36'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:45:36.167 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 12:45:36.169 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:36'.
2025-10-12 12:45:36.173 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:45:36.174 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 12:45:36.174 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 12:45:36.177 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:45:36.181 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.6351ms
2025-10-12 12:45:36.181 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 12:45:36.182 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 12:45:36.182 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:45:36.185 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:45:36.188 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:45:36.189 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 63.0606ms
2025-10-12 12:45:36.191 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 11.9578ms
2025-10-12 12:45:36.192 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:36'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:45:36.192 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 12:45:36.197 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:45:36.200 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:36'.
2025-10-12 12:45:36.203 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:45:36.204 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 58.322ms
2025-10-12 12:45:36.207 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:45:36.208 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:36'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:45:36.213 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 12:45:36.215 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:45:36'.
2025-10-12 12:45:36.219 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:45:36.221 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 12:45:36.221 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 12:45:36.224 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:45:36.229 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 11.0828ms
2025-10-12 12:45:36.229 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 12:45:36.231 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:45:36.234 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:45:36.235 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 52.7671ms
2025-10-12 12:45:36.237 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 10.5662ms
2025-10-12 12:45:36.242 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:45:36.243 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 51.0247ms
2025-10-12 12:46:47.825 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - null null
2025-10-12 12:46:47.829 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:47.832 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 204 null null 6.8715ms
2025-10-12 12:46:47.834 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-12 12:46:47.842 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:47.843 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:47'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:46:47.845 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:47'.
2025-10-12 12:46:47.846 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:46:47.848 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 12:46:47.862 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 12:46:47.866 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 14.9368ms
2025-10-12 12:46:47.867 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:46:47.869 +04:00 [ERR] An unhandled exception has occurred while executing the request.
GreenZone.Application.Exceptions.NotFoundException: Basket not found for the customer.
   at GreenZone.Application.Service.BasketService.GetBasketByCustomerAsync(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\BasketService.cs:line 75
   at GreenZone.API.Controllers.BasketController.GetBasketByCustomerId(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\BasketController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-12 12:46:47.876 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 500 null text/plain; charset=utf-8 42.8613ms
2025-10-12 12:46:47.949 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 12:46:47.949 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 12:46:47.952 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:47.955 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:47.957 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 7.8182ms
2025-10-12 12:46:47.957 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 8.5989ms
2025-10-12 12:46:47.958 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 12:46:47.966 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:47.968 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:46:47.970 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 12:46:47.981 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 12:46:47.984 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:46:47.986 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 14.5133ms
2025-10-12 12:46:47.988 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 12:46:47.988 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:46:47.991 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:47.992 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 33.8336ms
2025-10-12 12:46:47.994 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:46:47.996 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 12:46:47.996 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 12:46:47.999 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 12:46:48.001 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:48.004 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:48.006 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 9.8144ms
2025-10-12 12:46:48.008 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 12:46:48.008 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 11.6436ms
2025-10-12 12:46:48.009 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 12:46:48.016 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:46:48.022 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:48.025 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 18.9158ms
2025-10-12 12:46:48.026 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:48'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:46:48.027 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:46:48.029 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:48'.
2025-10-12 12:46:48.030 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 42.193ms
2025-10-12 12:46:48.031 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:46:48.037 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 12:46:48.042 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 12:46:48.046 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 12:46:48.048 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 8.3288ms
2025-10-12 12:46:48.049 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 12:46:48.049 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:46:48.053 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:48.054 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 45.5878ms
2025-10-12 12:46:48.056 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:48'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:46:48.057 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 12:46:48.057 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 12:46:48.062 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:48'.
2025-10-12 12:46:48.065 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:48.069 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:48.071 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:46:48.071 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 14.4448ms
2025-10-12 12:46:48.072 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 15.2829ms
2025-10-12 12:46:48.073 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 12:46:48.074 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 12:46:48.075 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 12:46:48.084 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:48.088 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 12:46:48.089 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:48.091 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:48'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:46:48.093 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 12:46:48.094 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:48'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:46:48.096 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:48'.
2025-10-12 12:46:48.097 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 11.3288ms
2025-10-12 12:46:48.099 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:48'.
2025-10-12 12:46:48.101 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:46:48.102 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:46:48.104 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:46:48.105 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 12:46:48.106 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 57.3545ms
2025-10-12 12:46:48.107 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 12:46:48.113 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 12:46:48.118 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:46:48.119 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 12:46:48.119 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.9266ms
2025-10-12 12:46:48.120 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 12:46:48.122 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:46:48.123 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:46:48.126 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:48.128 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 13.505ms
2025-10-12 12:46:48.130 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 12:46:48.130 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 56.6078ms
2025-10-12 12:46:48.131 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:48'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:46:48.133 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:46:48.134 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 58.849ms
2025-10-12 12:46:48.139 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:48'.
2025-10-12 12:46:48.142 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:48.147 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:46:48.148 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:48'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:46:48.149 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 12:46:48.151 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:48'.
2025-10-12 12:46:48.154 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:46:48.154 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 12:46:48.155 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 12:46:48.158 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:46:48.162 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 12:46:48.162 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.3599ms
2025-10-12 12:46:48.165 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:46:48.166 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:46:48.168 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.3138ms
2025-10-12 12:46:48.169 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 48.2962ms
2025-10-12 12:46:48.170 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:46:48.174 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 44.5695ms
2025-10-12 12:46:50.394 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 12:46:50.396 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 12:46:50.398 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:50.403 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:50.404 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:46:50.405 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:46:50.407 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:50'.
2025-10-12 12:46:50.410 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:50'.
2025-10-12 12:46:50.413 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:46:50.414 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:46:50.416 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 12:46:50.417 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 12:46:50.422 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 12:46:50.424 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 12:46:50.425 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:46:50.428 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:46:50.430 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.8469ms
2025-10-12 12:46:50.431 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 12:46:50.431 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.8252ms
2025-10-12 12:46:50.433 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 12:46:50.433 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:46:50.436 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:50.438 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:46:50.440 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:50.442 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 47.8639ms
2025-10-12 12:46:50.444 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:46:50.445 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 48.3753ms
2025-10-12 12:46:50.446 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:46:50.451 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:50'.
2025-10-12 12:46:50.458 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:50'.
2025-10-12 12:46:50.460 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:46:50.461 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:46:50.463 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 12:46:50.464 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 12:46:50.471 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 12:46:50.472 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 12:46:50.474 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:46:50.477 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:46:50.479 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.8067ms
2025-10-12 12:46:50.480 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.618ms
2025-10-12 12:46:50.482 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:46:50.484 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:46:50.485 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 54.3945ms
2025-10-12 12:46:50.487 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 53.9206ms
2025-10-12 12:46:52.493 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-12 12:46:52.498 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:52.499 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:52'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:46:52.501 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:52'.
2025-10-12 12:46:52.503 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:46:52.505 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 12:46:52.511 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 12:46:52.514 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 5.9528ms
2025-10-12 12:46:52.515 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:46:52.517 +04:00 [ERR] An unhandled exception has occurred while executing the request.
GreenZone.Application.Exceptions.NotFoundException: Basket not found for the customer.
   at GreenZone.Application.Service.BasketService.GetBasketByCustomerAsync(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\BasketService.cs:line 75
   at GreenZone.API.Controllers.BasketController.GetBasketByCustomerId(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\BasketController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-12 12:46:52.524 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 500 null text/plain; charset=utf-8 30.6724ms
2025-10-12 12:46:52.567 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 12:46:52.570 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:52.572 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:46:52.574 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 12:46:52.578 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 12:46:52.582 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:46:52.584 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 7.8324ms
2025-10-12 12:46:52.585 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 12:46:52.585 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:46:52.589 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:52.590 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 23.5633ms
2025-10-12 12:46:52.591 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:46:52.594 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 12:46:52.596 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 12:46:52.599 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:52.602 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:52'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:46:52.603 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 12:46:52.604 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:52'.
2025-10-12 12:46:52.607 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:46:52.608 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:46:52.610 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 8.7306ms
2025-10-12 12:46:52.611 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 12:46:52.612 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:46:52.616 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 31.074ms
2025-10-12 12:46:52.617 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 12:46:52.623 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 12:46:52.625 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 10.6737ms
2025-10-12 12:46:52.626 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 12:46:52.626 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:46:52.631 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:52.632 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 38.7675ms
2025-10-12 12:46:52.634 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:52'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:46:52.634 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 12:46:52.634 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 12:46:52.639 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:52'.
2025-10-12 12:46:52.643 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:52.646 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:52.647 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:46:52.648 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:52'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:46:52.649 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:52'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:46:52.651 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 12:46:52.653 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:52'.
2025-10-12 12:46:52.655 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:52'.
2025-10-12 12:46:52.659 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:46:52.660 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 12:46:52.660 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:46:52.661 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 12:46:52.665 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 12:46:52.665 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 12:46:52.671 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 13.5617ms
2025-10-12 12:46:52.672 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 12:46:52.675 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 12:46:52.675 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:46:52.678 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:46:52.680 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:46:52.681 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 55.4636ms
2025-10-12 12:46:52.683 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.8145ms
2025-10-12 12:46:52.685 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 12:46:52.686 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 17.34ms
2025-10-12 12:46:52.687 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 12:46:52.692 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:46:52.696 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:52.698 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:46:52.701 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:52.702 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 67.8284ms
2025-10-12 12:46:52.703 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:52'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:46:52.704 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 69.8641ms
2025-10-12 12:46:52.706 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:52'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:46:52.712 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:52'.
2025-10-12 12:46:52.718 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:52'.
2025-10-12 12:46:52.719 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:46:52.721 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:46:52.723 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 12:46:52.724 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 12:46:52.728 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 12:46:52.730 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 12:46:52.732 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:46:52.734 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:46:52.736 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.145ms
2025-10-12 12:46:52.737 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.309ms
2025-10-12 12:46:52.738 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:46:52.739 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:46:52.741 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 55.6977ms
2025-10-12 12:46:52.741 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 54.1422ms
2025-10-12 12:46:55.137 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 12:46:55.140 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 12:46:55.140 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 12:46:55.140 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 12:46:55.141 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:55.143 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:55.144 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 4.4822ms
2025-10-12 12:46:55.147 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 12:46:55.149 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:55.150 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 12.9047ms
2025-10-12 12:46:55.152 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 12:46:55.153 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:55.161 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:55.162 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 21.7791ms
2025-10-12 12:46:55.168 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:55.169 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 29.4854ms
2025-10-12 12:46:55.171 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:55'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:46:55.175 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:55'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:46:55.181 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:55'.
2025-10-12 12:46:55.183 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:55'.
2025-10-12 12:46:55.185 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:46:55.186 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:46:55.187 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 12:46:55.188 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 12:46:55.193 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 12:46:55.196 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 12:46:55.196 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:46:55.200 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:46:55.201 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 10.3603ms
2025-10-12 12:46:55.203 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.9202ms
2025-10-12 12:46:55.203 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 12:46:55.203 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 12:46:55.204 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:46:55.206 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:46:55.209 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:55.212 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:55.214 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 66.6743ms
2025-10-12 12:46:55.215 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 63.0095ms
2025-10-12 12:46:55.216 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:55'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:46:55.216 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:55'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:46:55.227 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:55'.
2025-10-12 12:46:55.229 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:55'.
2025-10-12 12:46:55.231 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:46:55.232 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:46:55.233 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 12:46:55.235 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 12:46:55.241 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 12:46:55.244 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 12:46:55.245 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:46:55.248 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:46:55.249 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 11.4271ms
2025-10-12 12:46:55.251 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.0767ms
2025-10-12 12:46:55.252 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:46:55.254 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:46:55.255 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 52.4063ms
2025-10-12 12:46:55.257 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 53.3678ms
2025-10-12 12:46:59.546 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 12:46:59.546 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 12:46:59.549 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:59.552 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:59.553 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:59'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:46:59.553 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:59'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:46:59.555 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:59'.
2025-10-12 12:46:59.556 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:59'.
2025-10-12 12:46:59.557 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:46:59.559 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:46:59.560 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 12:46:59.561 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 12:46:59.565 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 12:46:59.567 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 12:46:59.568 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:46:59.570 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:46:59.571 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 7.9125ms
2025-10-12 12:46:59.572 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 12:46:59.574 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.7637ms
2025-10-12 12:46:59.575 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 12:46:59.576 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:46:59.579 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:59.580 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:46:59.583 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:59.585 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 38.4837ms
2025-10-12 12:46:59.586 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:59'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:46:59.587 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 40.2639ms
2025-10-12 12:46:59.588 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:59'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:46:59.593 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:59'.
2025-10-12 12:46:59.599 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:59'.
2025-10-12 12:46:59.600 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:46:59.602 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:46:59.603 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 12:46:59.604 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 12:46:59.607 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 12:46:59.610 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 12:46:59.611 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:46:59.613 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:46:59.615 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.7707ms
2025-10-12 12:46:59.616 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.6362ms
2025-10-12 12:46:59.617 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 12:46:59.618 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:46:59.619 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:46:59.622 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:59.624 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 51.3473ms
2025-10-12 12:46:59.625 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 49.8006ms
2025-10-12 12:46:59.626 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:59'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:46:59.636 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:59'.
2025-10-12 12:46:59.637 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:46:59.638 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 12:46:59.642 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 12:46:59.645 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:46:59.647 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 6.0742ms
2025-10-12 12:46:59.648 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 12:46:59.648 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:46:59.651 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:46:59.653 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 35.2836ms
2025-10-12 12:46:59.654 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:59'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:46:59.659 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:46:59'.
2025-10-12 12:46:59.661 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:46:59.662 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 12:46:59.666 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 12:46:59.668 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:46:59.670 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 5.5544ms
2025-10-12 12:46:59.671 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:46:59.672 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 24.5007ms
2025-10-12 12:47:04.730 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 12:47:04.730 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 12:47:04.730 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 12:47:04.730 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 12:47:04.735 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:47:04.737 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:47:04.740 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:47:04.743 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:47:04.744 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 13.2371ms
2025-10-12 12:47:04.745 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 14.2706ms
2025-10-12 12:47:04.746 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 15.3417ms
2025-10-12 12:47:04.747 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 12:47:04.747 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 16.2534ms
2025-10-12 12:47:04.749 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 12:47:04.760 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:47:04.768 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:47:04.770 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:47:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:47:04.771 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:47:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:47:04.773 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:47:04'.
2025-10-12 12:47:04.776 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:47:04'.
2025-10-12 12:47:04.778 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:47:04.779 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:47:04.780 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 12:47:04.782 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 12:47:04.786 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 12:47:04.788 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 12:47:04.790 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:47:04.793 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:47:04.794 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.696ms
2025-10-12 12:47:04.795 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 12:47:04.796 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.7724ms
2025-10-12 12:47:04.797 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 12:47:04.797 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:47:04.800 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:47:04.802 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:47:04.805 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:47:04.807 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 60.1383ms
2025-10-12 12:47:04.808 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:47:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:47:04.809 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 59.9813ms
2025-10-12 12:47:04.810 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:47:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:47:04.816 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:47:04'.
2025-10-12 12:47:04.822 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:47:04'.
2025-10-12 12:47:04.823 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:47:04.825 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:47:04.826 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 12:47:04.828 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 12:47:04.831 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 12:47:04.833 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 12:47:04.834 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:47:04.837 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:47:04.839 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.7184ms
2025-10-12 12:47:04.841 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.595ms
2025-10-12 12:47:04.843 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:47:04.844 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:47:04.846 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 51.1727ms
2025-10-12 12:47:04.847 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 50.6722ms
2025-10-12 12:49:32.282 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 12:49:32.282 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 12:49:32.289 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:49:32.293 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:49:32.294 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 12.1175ms
2025-10-12 12:49:32.295 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 13.0585ms
2025-10-12 12:49:32.299 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 12:49:32.299 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 12:49:32.306 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:49:32.309 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:49:32.310 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:49:32'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:49:32.311 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:49:32'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:49:32.313 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:49:32'.
2025-10-12 12:49:32.315 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:49:32'.
2025-10-12 12:49:32.316 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:49:32.318 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:49:32.319 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 12:49:32.320 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 12:49:32.329 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 12:49:32.330 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 12:49:32.332 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:49:32.335 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:49:32.336 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 13.9242ms
2025-10-12 12:49:32.338 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 13.2759ms
2025-10-12 12:49:32.340 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:49:32.341 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:49:32.343 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 43.7529ms
2025-10-12 12:49:32.344 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 44.7843ms
2025-10-12 12:51:50.858 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 12:51:50.858 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 12:51:50.862 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:51:50.865 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:51:50.866 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 8.2144ms
2025-10-12 12:51:50.867 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 9.4367ms
2025-10-12 12:51:50.872 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 12:51:50.872 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 12:51:50.878 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:51:50.881 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:51:50.883 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:51:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:51:50.883 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:51:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:51:50.885 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:51:50'.
2025-10-12 12:51:50.887 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:51:50'.
2025-10-12 12:51:50.889 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:51:50.890 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:51:50.892 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 12:51:50.893 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 12:51:50.902 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 12:51:50.903 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 12:51:50.905 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:51:50.908 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:51:50.909 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 13.3652ms
2025-10-12 12:51:50.910 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.6175ms
2025-10-12 12:51:50.912 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:51:50.913 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:51:50.914 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 42.0537ms
2025-10-12 12:51:50.916 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 43.1927ms
2025-10-12 12:51:50.959 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 12:51:50.964 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:51:50.965 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 5.7236ms
2025-10-12 12:51:50.967 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 12:51:50.972 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:51:50.973 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:51:50.974 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 12:51:50.985 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 12:51:50.989 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:51:50.991 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 15.2798ms
2025-10-12 12:51:50.993 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:51:50.995 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 27.7865ms
2025-10-12 12:51:51.008 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 12:51:51.010 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:51:51.012 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 4.2654ms
2025-10-12 12:51:51.013 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 12:51:51.019 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:51:51.020 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:51:51'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:51:51.023 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:51:51'.
2025-10-12 12:51:51.024 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:51:51.025 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 12:51:51.038 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 12:51:51.042 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 12:51:51.044 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 16.4041ms
2025-10-12 12:51:51.045 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:51:51.047 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 33.6115ms
2025-10-12 12:52:04.189 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 12:52:04.189 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 12:52:04.193 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:52:04.196 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:52:04.197 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 7.4884ms
2025-10-12 12:52:04.198 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 8.4355ms
2025-10-12 12:52:04.199 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 12:52:04.200 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 12:52:04.208 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:52:04.211 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:52:04.212 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:52:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:52:04.213 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:52:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:52:04.215 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:52:04'.
2025-10-12 12:52:04.217 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:52:04'.
2025-10-12 12:52:04.218 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:52:04.219 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:52:04.220 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 12:52:04.222 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 12:52:04.228 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 12:52:04.229 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 12:52:04.229 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 12:52:04.231 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:52:04.233 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:52:04.236 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:52:04.238 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 14.2335ms
2025-10-12 12:52:04.239 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 13.6149ms
2025-10-12 12:52:04.240 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 10.6104ms
2025-10-12 12:52:04.241 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 12:52:04.241 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:52:04.243 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:52:04.249 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:52:04.250 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 51.3754ms
2025-10-12 12:52:04.252 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 51.9688ms
2025-10-12 12:52:04.253 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:52:04.260 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 12:52:04.273 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 12:52:04.276 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:52:04.278 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 16.5973ms
2025-10-12 12:52:04.280 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:52:04.281 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 39.9327ms
2025-10-12 12:52:04.283 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 12:52:04.288 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:52:04.289 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 5.6261ms
2025-10-12 12:52:04.290 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 12:52:04.295 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:52:04.297 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:52:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:52:04.299 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:52:04'.
2025-10-12 12:52:04.300 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:52:04.301 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 12:52:04.313 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 12:52:04.316 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 12:52:04.319 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 15.5312ms
2025-10-12 12:52:04.321 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:52:04.322 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 31.9725ms
2025-10-12 12:54:03.445 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - null null
2025-10-12 12:54:03.449 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:54:03.450 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 204 null null 5.7679ms
2025-10-12 12:54:03.452 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-12 12:54:03.459 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:54:03.460 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:54:03'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:54:03.463 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:54:03'.
2025-10-12 12:54:03.464 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:54:03.466 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 12:54:03.480 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 12:54:03.484 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 16.4711ms
2025-10-12 12:54:03.486 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:54:03.488 +04:00 [ERR] An unhandled exception has occurred while executing the request.
GreenZone.Application.Exceptions.NotFoundException: Basket not found for the customer.
   at GreenZone.Application.Service.BasketService.GetBasketByCustomerAsync(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\BasketService.cs:line 75
   at GreenZone.API.Controllers.BasketController.GetBasketByCustomerId(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\BasketController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-12 12:54:03.495 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 500 null text/plain; charset=utf-8 42.6718ms
2025-10-12 12:54:03.615 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 12:54:03.615 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 12:54:03.619 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:54:03.622 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:54:03.624 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 8.7163ms
2025-10-12 12:54:03.625 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 9.8417ms
2025-10-12 12:54:03.627 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 12:54:03.637 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:54:03.639 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:54:03.641 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 12:54:03.654 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 12:54:03.659 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:54:03.661 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 17.8028ms
2025-10-12 12:54:03.662 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 12:54:03.663 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:54:03.667 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:54:03.668 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 40.8438ms
2025-10-12 12:54:03.669 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:54:03.675 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 12:54:03.680 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 12:54:03.680 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 12:54:03.683 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:54:03.687 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:54:03.688 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 7.6957ms
2025-10-12 12:54:03.689 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 12:54:03.689 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 8.8721ms
2025-10-12 12:54:03.691 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 12:54:03.698 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:54:03.704 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:54:03.705 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 28.3275ms
2025-10-12 12:54:03.707 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:54:03'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:54:03.708 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:54:03.710 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:54:03'.
2025-10-12 12:54:03.711 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 49.1196ms
2025-10-12 12:54:03.713 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:54:03.718 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 12:54:03.733 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 12:54:03.736 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 12:54:03.739 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 18.2362ms
2025-10-12 12:54:03.739 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 12:54:03.740 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:54:03.744 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:54:03.745 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 54.6142ms
2025-10-12 12:54:03.746 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:54:03'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:54:03.747 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 12:54:03.747 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 12:54:03.753 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:54:03'.
2025-10-12 12:54:03.756 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:54:03.759 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:54:03.760 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:54:03.762 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 14.4829ms
2025-10-12 12:54:03.762 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 15.3523ms
2025-10-12 12:54:03.764 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 12:54:03.764 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 12:54:03.764 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 12:54:03.774 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:54:03.779 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:54:03.780 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:54:03'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:54:03.781 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:54:03'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:54:03.783 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:54:03'.
2025-10-12 12:54:03.785 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:54:03'.
2025-10-12 12:54:03.786 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:54:03.786 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 12:54:03.787 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:54:03.788 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 12:54:03.792 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 12:54:03.793 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 12:54:03.796 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 20.376ms
2025-10-12 12:54:03.800 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:54:03.802 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 62.1329ms
2025-10-12 12:54:03.802 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 12:54:03.803 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 12:54:03.808 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:54:03.811 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:54:03.812 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 17.4752ms
2025-10-12 12:54:03.813 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 12:54:03.814 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 15.4121ms
2025-10-12 12:54:03.814 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 12:54:03.815 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:54:03.818 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:54:03.820 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:54:03.823 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:54:03.824 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 60.7341ms
2025-10-12 12:54:03.826 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:54:03'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:54:03.827 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 63.4017ms
2025-10-12 12:54:03.828 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:54:03'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:54:03.834 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:54:03'.
2025-10-12 12:54:03.840 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:54:03'.
2025-10-12 12:54:03.841 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:54:03.843 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:54:03.844 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 12:54:03.845 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 12:54:03.853 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 12:54:03.853 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 12:54:03.856 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:54:03.858 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:54:03.859 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.5865ms
2025-10-12 12:54:03.861 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 13.1424ms
2025-10-12 12:54:03.862 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:54:03.864 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:54:03.865 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 50.4674ms
2025-10-12 12:54:03.867 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 53.3724ms
2025-10-12 12:54:10.959 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - null null
2025-10-12 12:54:10.964 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:54:10.965 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - 204 null null 5.1875ms
2025-10-12 12:54:10.967 +04:00 [INF] Request starting HTTP/2 PUT https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - application/json 67
2025-10-12 12:54:10.970 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:54:10.971 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:54:10'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:54:10.973 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:54:10'.
2025-10-12 12:54:10.975 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API)'
2025-10-12 12:54:10.976 +04:00 [INF] Route matched with {action = "UpdateItemsInBasket", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateItemsInBasket(System.Guid, GreenZone.Contracts.Dtos.BasketItemsDtos.BasketItemsUpdateDto) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 12:54:10.990 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 12:54:10.999 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__productId_0='?' (DbType = Guid), @__basketId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BasketId], [b].[CreatedAt], [b].[IsDeleted], [b].[ProductId], [b].[Quantity], [b].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [BasketItems] AS [b]
INNER JOIN [Products] AS [p] ON [b].[ProductId] = [p].[Id]
WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[ProductId] = @__productId_0 AND [b].[BasketId] = @__basketId_1
2025-10-12 12:54:11.009 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@p6='?' (DbType = Guid), @p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [BasketItems] SET [BasketId] = @p0, [CreatedAt] = @p1, [IsDeleted] = @p2, [ProductId] = @p3, [Quantity] = @p4, [UpdatedAt] = @p5
OUTPUT 1
WHERE [Id] = @p6;
2025-10-12 12:54:11.013 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 12:54:11.016 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 12:54:11.019 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API) in 40.3288ms
2025-10-12 12:54:11.021 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API)'
2025-10-12 12:54:11.023 +04:00 [INF] Request finished HTTP/2 PUT https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - 200 null application/json; charset=utf-8 55.4091ms
2025-10-12 12:54:11.025 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 12:54:11.029 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:54:11.030 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 5.5321ms
2025-10-12 12:54:11.032 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 12:54:11.038 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:54:11.039 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:54:11'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:54:11.041 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:54:11'.
2025-10-12 12:54:11.043 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:54:11.044 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 12:54:11.048 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 12:54:11.052 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 12:54:11.055 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 7.9919ms
2025-10-12 12:54:11.056 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:54:11.058 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 25.1483ms
2025-10-12 12:57:31.788 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 12:57:31.788 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 12:57:31.792 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:57:31.797 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:57:31.798 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 10.0406ms
2025-10-12 12:57:31.799 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 10.9375ms
2025-10-12 12:57:31.808 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 12:57:31.812 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:57:31.814 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:57:31.816 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 12:57:31.833 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 12:57:31.839 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:57:31.843 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 24.9986ms
2025-10-12 12:57:31.847 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:57:31.847 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 12:57:31.849 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 41.2645ms
2025-10-12 12:57:31.853 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:57:31.860 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:57:31.862 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 12:57:31.870 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 12:57:31.875 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:57:31.878 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 13.3235ms
2025-10-12 12:57:31.881 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:57:31.884 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 36.7738ms
2025-10-12 12:57:59.126 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 12:57:59.131 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:57:59.132 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 6.8004ms
2025-10-12 12:57:59.134 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 12:57:59.138 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:57:59.140 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:57:59.141 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 12:57:59.145 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 12:57:59.149 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:57:59.151 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 7.7343ms
2025-10-12 12:57:59.152 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:57:59.154 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 19.7711ms
2025-10-12 12:58:14.346 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 12:58:14.351 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:58:14.352 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 6.2832ms
2025-10-12 12:58:14.355 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 12:58:14.360 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:58:14.362 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:58:14.363 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 12:58:14.374 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 12:58:14.379 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:58:14.381 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 15.8305ms
2025-10-12 12:58:14.383 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:58:14.384 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 28.324ms
2025-10-12 12:58:38.743 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/index.html - null null
2025-10-12 12:58:38.760 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/index.html - 200 null text/html;charset=utf-8 16.2145ms
2025-10-12 12:58:38.781 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - null null
2025-10-12 12:58:38.783 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_vs/browserLink - null null
2025-10-12 12:58:38.786 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - 200 16511 application/javascript; charset=utf-8 4.2145ms
2025-10-12 12:58:38.795 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_vs/browserLink - 200 null text/javascript; charset=UTF-8 12.5741ms
2025-10-12 12:58:39.008 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - null null
2025-10-12 12:58:39.059 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 50.9577ms
2025-10-12 12:58:45.260 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - null null
2025-10-12 12:58:45.266 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:58:45.269 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 12:58:45.283 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 12:58:45.288 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:58:45.291 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 19.5237ms
2025-10-12 12:58:45.293 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:58:45.295 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 35.5462ms
2025-10-12 12:59:04.174 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 12:59:04.178 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:04.179 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 5.7918ms
2025-10-12 12:59:04.184 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 12:59:04.189 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:04.190 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:59:04.192 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 12:59:04.210 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 12:59:04.215 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:59:04.217 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 21.8001ms
2025-10-12 12:59:04.219 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:59:04.221 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 36.7626ms
2025-10-12 12:59:08.549 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 12:59:08.552 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:08.553 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:59:08.555 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 12:59:08.558 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 12:59:08.561 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:59:08.563 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 5.7806ms
2025-10-12 12:59:08.564 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:59:08.566 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 17.1243ms
2025-10-12 12:59:12.957 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7100/swagger - null null
2025-10-12 12:59:12.963 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7100/swagger - 301 0 null 6.2814ms
2025-10-12 12:59:12.968 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7100/swagger/index.html - null null
2025-10-12 12:59:12.972 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7100/swagger/index.html - 200 null text/html;charset=utf-8 4.1303ms
2025-10-12 12:59:14.158 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7100/api/Product - null null
2025-10-12 12:59:14.160 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:59:14.162 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 12:59:14.166 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 12:59:14.170 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:59:14.171 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 7.9498ms
2025-10-12 12:59:14.173 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:59:14.174 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 16.3694ms
2025-10-12 12:59:17.291 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 12:59:17.291 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 12:59:17.292 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 12:59:17.292 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 12:59:17.297 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:17.299 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:17.303 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:17.306 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:17.307 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 15.7261ms
2025-10-12 12:59:17.308 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 17.1702ms
2025-10-12 12:59:17.309 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 17.0689ms
2025-10-12 12:59:17.311 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 18.2287ms
2025-10-12 12:59:17.313 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 12:59:17.313 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 12:59:17.330 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:17.333 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:17.334 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:17'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:59:17.335 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:17'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:59:17.337 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:17'.
2025-10-12 12:59:17.340 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:17'.
2025-10-12 12:59:17.341 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:59:17.343 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:59:17.344 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 12:59:17.346 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 12:59:17.352 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 12:59:17.353 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 12:59:17.355 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:59:17.358 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:59:17.360 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.0807ms
2025-10-12 12:59:17.362 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 12:59:17.362 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 13.9694ms
2025-10-12 12:59:17.363 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 12:59:17.364 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:59:17.368 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:17.370 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:59:17.373 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:17.375 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 61.3473ms
2025-10-12 12:59:17.376 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:17'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:59:17.377 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 63.8381ms
2025-10-12 12:59:17.378 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:17'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:59:17.384 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:17'.
2025-10-12 12:59:17.391 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:17'.
2025-10-12 12:59:17.392 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:59:17.393 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:59:17.394 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 12:59:17.396 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 12:59:17.399 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 12:59:17.402 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 12:59:17.403 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:59:17.406 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:59:17.407 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.819ms
2025-10-12 12:59:17.409 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.2839ms
2025-10-12 12:59:17.411 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:59:17.413 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:59:17.415 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 53.0824ms
2025-10-12 12:59:17.416 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 53.3779ms
2025-10-12 12:59:22.977 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7100/api/Product - null null
2025-10-12 12:59:22.981 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:59:22.982 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 12:59:22.986 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 12:59:22.990 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:59:22.992 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 7.2711ms
2025-10-12 12:59:22.993 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:59:22.995 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 17.686ms
2025-10-12 12:59:25.900 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7100/api/Category - null null
2025-10-12 12:59:25.904 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:59:25.905 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 12:59:25.912 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 12:59:25.915 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:59:25.918 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.8155ms
2025-10-12 12:59:25.920 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:59:25.922 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 21.1427ms
2025-10-12 12:59:39.157 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - null null
2025-10-12 12:59:39.161 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:39.162 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 204 null null 5.013ms
2025-10-12 12:59:39.164 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-12 12:59:39.169 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:39.170 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:39'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:59:39.183 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:39'.
2025-10-12 12:59:39.186 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:59:39.188 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 12:59:39.205 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 12:59:39.209 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 16.9396ms
2025-10-12 12:59:39.210 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:59:39.214 +04:00 [ERR] An unhandled exception has occurred while executing the request.
GreenZone.Application.Exceptions.NotFoundException: Basket not found for the customer.
   at GreenZone.Application.Service.BasketService.GetBasketByCustomerAsync(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\BasketService.cs:line 75
   at GreenZone.API.Controllers.BasketController.GetBasketByCustomerId(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\BasketController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-12 12:59:39.223 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 500 null text/plain; charset=utf-8 59.4356ms
2025-10-12 12:59:39.336 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 12:59:39.336 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 12:59:39.342 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:39.345 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:39.346 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 10.4578ms
2025-10-12 12:59:39.347 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 11.5656ms
2025-10-12 12:59:39.349 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 12:59:39.358 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:39.360 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:59:39.361 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 12:59:39.376 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 12:59:39.380 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:59:39.383 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 19.4699ms
2025-10-12 12:59:39.384 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 12:59:39.385 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:59:39.388 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:39.389 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 40.0018ms
2025-10-12 12:59:39.390 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:59:39.395 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 12:59:39.395 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 12:59:39.395 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 12:59:39.400 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:39.400 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 12:59:39.403 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:39.404 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 8.5253ms
2025-10-12 12:59:39.406 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 12:59:39.407 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:59:39.407 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 11.4898ms
2025-10-12 12:59:39.414 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:39.416 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 18.8217ms
2025-10-12 12:59:39.422 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:39'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:59:39.423 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:59:39.425 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:39'.
2025-10-12 12:59:39.427 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 42.5546ms
2025-10-12 12:59:39.428 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:59:39.434 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 12:59:39.438 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 12:59:39.441 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 12:59:39.443 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 6.6712ms
2025-10-12 12:59:39.444 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 12:59:39.444 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:59:39.447 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:39.448 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 41.7573ms
2025-10-12 12:59:39.450 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:39'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:59:39.450 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 12:59:39.450 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 12:59:39.454 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:39'.
2025-10-12 12:59:39.457 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:39.460 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:39.461 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:59:39.462 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 11.9298ms
2025-10-12 12:59:39.463 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 12.84ms
2025-10-12 12:59:39.464 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 12:59:39.464 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 12:59:39.464 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 12:59:39.467 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:39.479 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 12:59:39.480 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:39.481 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:39'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:59:39.484 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 12:59:39.485 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:39'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:59:39.488 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:39'.
2025-10-12 12:59:39.490 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 12.9076ms
2025-10-12 12:59:39.492 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:39'.
2025-10-12 12:59:39.493 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:59:39.495 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:59:39.496 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:59:39.498 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 12:59:39.499 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 55.3036ms
2025-10-12 12:59:39.501 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 12:59:39.507 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 12:59:39.512 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:59:39.513 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 12:59:39.514 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.6308ms
2025-10-12 12:59:39.515 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 12:59:39.517 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:59:39.518 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:59:39.522 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:39.524 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 15.3389ms
2025-10-12 12:59:39.525 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 12:59:39.525 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 61.2005ms
2025-10-12 12:59:39.527 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:39'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:59:39.528 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:59:39.531 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:39.538 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:39'.
2025-10-12 12:59:39.539 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 75.0609ms
2025-10-12 12:59:39.541 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:39'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:59:39.542 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:59:39.549 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:39'.
2025-10-12 12:59:39.550 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 12:59:39.551 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:59:39.555 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 12:59:39.556 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 12:59:39.559 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 12:59:39.561 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:59:39.564 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:59:39.565 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 11.1438ms
2025-10-12 12:59:39.567 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.3114ms
2025-10-12 12:59:39.569 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:59:39.571 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:59:39.572 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 57.3547ms
2025-10-12 12:59:39.574 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 48.3213ms
2025-10-12 12:59:43.641 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - null null
2025-10-12 12:59:43.643 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:43.645 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - 204 null null 4.223ms
2025-10-12 12:59:43.647 +04:00 [INF] Request starting HTTP/2 PUT https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - application/json 66
2025-10-12 12:59:43.650 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:43.651 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:43'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:59:43.655 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:43'.
2025-10-12 12:59:43.656 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API)'
2025-10-12 12:59:43.657 +04:00 [INF] Route matched with {action = "UpdateItemsInBasket", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateItemsInBasket(System.Guid, GreenZone.Contracts.Dtos.BasketItemsDtos.BasketItemsUpdateDto) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 12:59:43.662 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 12:59:43.669 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__productId_0='?' (DbType = Guid), @__basketId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BasketId], [b].[CreatedAt], [b].[IsDeleted], [b].[ProductId], [b].[Quantity], [b].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [BasketItems] AS [b]
INNER JOIN [Products] AS [p] ON [b].[ProductId] = [p].[Id]
WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[ProductId] = @__productId_0 AND [b].[BasketId] = @__basketId_1
2025-10-12 12:59:43.676 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@p6='?' (DbType = Guid), @p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [BasketItems] SET [BasketId] = @p0, [CreatedAt] = @p1, [IsDeleted] = @p2, [ProductId] = @p3, [Quantity] = @p4, [UpdatedAt] = @p5
OUTPUT 1
WHERE [Id] = @p6;
2025-10-12 12:59:43.680 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 12:59:43.684 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 12:59:43.686 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API) in 26.2047ms
2025-10-12 12:59:43.687 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API)'
2025-10-12 12:59:43.689 +04:00 [INF] Request finished HTTP/2 PUT https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - 200 null application/json; charset=utf-8 42.0155ms
2025-10-12 12:59:43.690 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 12:59:43.695 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:43.697 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:43'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:59:43.699 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:43'.
2025-10-12 12:59:43.701 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:59:43.702 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 12:59:43.706 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 12:59:43.710 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 12:59:43.712 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 7.324ms
2025-10-12 12:59:43.713 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:59:43.715 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 24.6435ms
2025-10-12 12:59:55.946 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 12:59:55.951 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:55.952 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 6.0856ms
2025-10-12 12:59:55.954 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 12:59:55.959 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:55.961 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:59:55.962 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 12:59:55.966 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 12:59:55.969 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:59:55.971 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 6.1952ms
2025-10-12 12:59:55.971 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 12:59:55.972 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:59:55.974 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:55.975 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 21.3164ms
2025-10-12 12:59:55.977 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:59:55.981 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 12:59:55.983 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 12:59:55.983 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 12:59:55.986 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 12:59:55.987 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:55.990 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:59:55.992 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:55.993 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 10.5149ms
2025-10-12 12:59:55.994 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 10.9906ms
2025-10-12 12:59:55.995 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 12:59:55.995 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 11.9666ms
2025-10-12 12:59:56.000 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 12:59:56.002 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:56.007 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 35.399ms
2025-10-12 12:59:56.008 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:56'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:59:56.013 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:56'.
2025-10-12 12:59:56.015 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:59:56.016 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 12:59:56.021 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 12:59:56.024 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 12:59:56.025 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 7.1377ms
2025-10-12 12:59:56.026 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 12:59:56.027 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:59:56.030 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:56.031 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 36.266ms
2025-10-12 12:59:56.032 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:56'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:59:56.033 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 12:59:56.034 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 12:59:56.037 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:56'.
2025-10-12 12:59:56.040 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:56.042 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:56.043 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:59:56.044 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 10.6473ms
2025-10-12 12:59:56.045 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 11.4251ms
2025-10-12 12:59:56.046 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 12:59:56.046 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 12:59:56.047 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 12:59:56.056 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:56.060 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 12:59:56.061 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:56.062 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:56'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:59:56.065 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 12:59:56.065 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:56'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:59:56.067 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:56'.
2025-10-12 12:59:56.069 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 10.9533ms
2025-10-12 12:59:56.070 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 12:59:56.071 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:56'.
2025-10-12 12:59:56.072 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:59:56.074 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:59:56.077 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:56.078 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:59:56.079 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 12:59:56.080 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 54.2765ms
2025-10-12 12:59:56.081 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:56'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:59:56.083 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 12:59:56.086 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 12:59:56.090 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:56'.
2025-10-12 12:59:56.093 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 12:59:56.095 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:59:56.099 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:59:56.099 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:59:56.100 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 15.4722ms
2025-10-12 12:59:56.101 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 12:59:56.102 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.6443ms
2025-10-12 12:59:56.103 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 12:59:56.103 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 12:59:56.105 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:59:56.108 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:56.110 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:59:56.112 +04:00 [INF] CORS policy execution successful.
2025-10-12 12:59:56.116 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 69.8563ms
2025-10-12 12:59:56.116 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 12:59:56.117 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:56'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:59:56.118 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 71.5951ms
2025-10-12 12:59:56.119 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:56'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 12:59:56.126 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 12:59:56.128 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:56'.
2025-10-12 12:59:56.134 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 8:59:56'.
2025-10-12 12:59:56.136 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 22.1354ms
2025-10-12 12:59:56.138 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:59:56.139 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:59:56.141 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 12:59:56.142 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 12:59:56.143 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 12:59:56.145 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 74.6696ms
2025-10-12 12:59:56.149 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 12:59:56.151 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 12:59:56.157 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:59:56.161 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 12:59:56.162 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 15.5086ms
2025-10-12 12:59:56.164 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 14.8209ms
2025-10-12 12:59:56.166 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 12:59:56.168 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 12:59:56.171 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 69.4999ms
2025-10-12 12:59:56.173 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 69.9831ms
2025-10-12 13:01:32.579 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 13:01:32.584 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:01:32.585 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 5.9689ms
2025-10-12 13:01:32.588 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:01:32.593 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:01:32.594 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:01:32'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:01:32.597 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:01:32'.
2025-10-12 13:01:32.598 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:01:32.600 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:01:32.615 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:01:32.619 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:01:32.622 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 19.866ms
2025-10-12 13:01:32.624 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:01:32.625 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 37.4522ms
2025-10-12 13:01:32.629 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:01:32.629 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:01:32.633 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:01:32.636 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:01:32.637 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 8.6333ms
2025-10-12 13:01:32.639 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 10.2385ms
2025-10-12 13:01:32.640 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:01:32.642 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:01:32.652 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:01:32.655 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:01:32.656 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:01:32'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:01:32.657 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:01:32'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:01:32.659 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:01:32'.
2025-10-12 13:01:32.661 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:01:32'.
2025-10-12 13:01:32.662 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:01:32.663 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:01:32.665 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:01:32.666 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:01:32.673 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:01:32.676 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:01:32.677 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:01:32.680 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:01:32.681 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.9785ms
2025-10-12 13:01:32.683 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.0376ms
2025-10-12 13:01:32.685 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:01:32.686 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:01:32.688 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 47.8339ms
2025-10-12 13:01:32.689 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 47.0178ms
2025-10-12 13:02:06.425 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - null null
2025-10-12 13:02:06.431 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:02:06.432 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - 204 null null 7.8106ms
2025-10-12 13:02:06.435 +04:00 [INF] Request starting HTTP/2 PUT https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - application/json 67
2025-10-12 13:02:06.438 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:02:06.439 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:02:06'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:02:06.441 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:02:06'.
2025-10-12 13:02:06.443 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API)'
2025-10-12 13:02:06.444 +04:00 [INF] Route matched with {action = "UpdateItemsInBasket", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateItemsInBasket(System.Guid, GreenZone.Contracts.Dtos.BasketItemsDtos.BasketItemsUpdateDto) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:02:06.456 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:02:06.465 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__productId_0='?' (DbType = Guid), @__basketId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BasketId], [b].[CreatedAt], [b].[IsDeleted], [b].[ProductId], [b].[Quantity], [b].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [BasketItems] AS [b]
INNER JOIN [Products] AS [p] ON [b].[ProductId] = [p].[Id]
WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[ProductId] = @__productId_0 AND [b].[BasketId] = @__basketId_1
2025-10-12 13:02:06.476 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[@p6='?' (DbType = Guid), @p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [BasketItems] SET [BasketId] = @p0, [CreatedAt] = @p1, [IsDeleted] = @p2, [ProductId] = @p3, [Quantity] = @p4, [UpdatedAt] = @p5
OUTPUT 1
WHERE [Id] = @p6;
2025-10-12 13:02:06.481 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:02:06.484 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:02:06.486 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API) in 39.4218ms
2025-10-12 13:02:06.488 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API)'
2025-10-12 13:02:06.489 +04:00 [INF] Request finished HTTP/2 PUT https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - 200 null application/json; charset=utf-8 54.1042ms
2025-10-12 13:02:06.491 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 13:02:06.496 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:02:06.497 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 6.1293ms
2025-10-12 13:02:06.499 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:02:06.504 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:02:06.505 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:02:06'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:02:06.507 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:02:06'.
2025-10-12 13:02:06.509 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:02:06.511 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:02:06.515 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:02:06.519 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:02:06.520 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 7.267ms
2025-10-12 13:02:06.521 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:02:06.522 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 22.6019ms
2025-10-12 13:03:28.204 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7100/api/Product - null null
2025-10-12 13:03:28.207 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:03:28.209 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:03:28.217 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:03:28.220 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:03:28.221 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.6929ms
2025-10-12 13:03:28.223 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:03:28.224 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 20.0497ms
2025-10-12 13:03:31.090 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7100/api/Product/f17fe991-aa7c-445a-a9cc-beae4a564a7d - null null
2025-10-12 13:03:31.094 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetProductById (GreenZone.API)'
2025-10-12 13:03:31.100 +04:00 [INF] Route matched with {action = "GetProductById", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductById(System.Guid) on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:03:31.133 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CreatedAt], [t].[Description], [t].[ImageUrl], [t].[IsDeleted], [t].[MaxThickness], [t].[MinThickness], [t].[PricePerSquareMeter], [t].[Title], [t].[UpdatedAt], [t].[Id0], [t].[CreatedAt0], [t].[Description0], [t].[IsDeleted0], [t].[Name], [t].[UpdatedAt0], [p0].[Id], [p0].[CreatedAt], [p0].[DocumentUrl], [p0].[IsDeleted], [p0].[ProductId], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id] AS [Id0], [c].[CreatedAt] AS [CreatedAt0], [c].[Description] AS [Description0], [c].[IsDeleted] AS [IsDeleted0], [c].[Name], [c].[UpdatedAt] AS [UpdatedAt0]
    FROM [Products] AS [p]
    INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
    WHERE [p].[Id] = @__id_0 AND [p].[IsDeleted] = CAST(0 AS bit)
) AS [t]
LEFT JOIN [ProductDocuments] AS [p0] ON [t].[Id] = [p0].[ProductId]
ORDER BY [t].[Id], [t].[Id0]
2025-10-12 13:03:31.144 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto'.
2025-10-12 13:03:31.146 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetProductById (GreenZone.API) in 43.482ms
2025-10-12 13:03:31.150 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetProductById (GreenZone.API)'
2025-10-12 13:03:31.152 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7100/api/Product/f17fe991-aa7c-445a-a9cc-beae4a564a7d - 200 null application/json; charset=utf-8 62.3305ms
2025-10-12 13:04:05.753 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 13:04:05.757 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:05.758 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 5.0083ms
2025-10-12 13:04:05.760 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:04:05.766 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:05.768 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:04:05.770 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:04:05.781 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:04:05.785 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:04:05.787 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 14.7849ms
2025-10-12 13:04:05.788 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:04:05.788 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:04:05.792 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:05.793 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 32.6461ms
2025-10-12 13:04:05.794 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:04:05.799 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:04:05.799 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 13:04:05.800 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 13:04:05.804 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:04:05.804 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:05.807 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:05.810 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:04:05.810 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 10.9596ms
2025-10-12 13:04:05.812 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 11.2298ms
2025-10-12 13:04:05.812 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:04:05.813 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 11.6837ms
2025-10-12 13:04:05.823 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:05.825 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:04:05.826 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:04:05.827 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 39.619ms
2025-10-12 13:04:05.830 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:05'.
2025-10-12 13:04:05.834 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:04:05.835 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:04:05.849 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:04:05.853 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:04:05.854 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 17.112ms
2025-10-12 13:04:05.855 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:04:05.856 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:04:05.861 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:05.862 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 49.8845ms
2025-10-12 13:04:05.863 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:04:05.864 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:04:05.865 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:04:05.868 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:05'.
2025-10-12 13:04:05.871 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:05.875 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:05.876 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:04:05.877 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 12.1701ms
2025-10-12 13:04:05.877 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 12.7363ms
2025-10-12 13:04:05.879 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:04:05.879 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:04:05.879 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:04:05.888 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:05.892 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:04:05.893 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:05.894 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:04:05.897 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:04:05.898 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:04:05.899 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:05'.
2025-10-12 13:04:05.901 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 11.0871ms
2025-10-12 13:04:05.902 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:04:05.903 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:05'.
2025-10-12 13:04:05.904 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:04:05.906 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:04:05.909 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:05.910 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:04:05.911 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:04:05.912 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 56.9504ms
2025-10-12 13:04:05.913 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:04:05.914 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:04:05.921 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:04:05.924 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:05'.
2025-10-12 13:04:05.929 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:04:05.929 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:04:05.930 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:04:05.932 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 14.3718ms
2025-10-12 13:04:05.933 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:04:05.934 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:04:05.935 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:04:05.937 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:04:05.940 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:05.941 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 15.4165ms
2025-10-12 13:04:05.943 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:04:05.945 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 66.0092ms
2025-10-12 13:04:05.945 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:04:05.946 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:04:05.947 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:04:05.950 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:05.957 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:04:05.958 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:05'.
2025-10-12 13:04:05.959 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 80.5416ms
2025-10-12 13:04:05.961 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:04:05.962 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 18.3908ms
2025-10-12 13:04:05.963 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:04:05.969 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:05'.
2025-10-12 13:04:05.970 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:04:05.971 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:04:05.972 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:04:05.972 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 69.9547ms
2025-10-12 13:04:05.975 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:04:05.975 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:04:05.982 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:04:05.983 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:04:05.985 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:04:05.986 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.6557ms
2025-10-12 13:04:05.988 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.4737ms
2025-10-12 13:04:05.990 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:04:05.991 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:04:05.992 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 59.8444ms
2025-10-12 13:04:05.994 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 50.7091ms
2025-10-12 13:04:21.530 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - null null
2025-10-12 13:04:21.533 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:21.534 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - 204 null null 4.8237ms
2025-10-12 13:04:21.538 +04:00 [INF] Request starting HTTP/2 PUT https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - application/json 66
2025-10-12 13:04:21.540 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:21.541 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:21'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:04:21.542 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:21'.
2025-10-12 13:04:21.542 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API)'
2025-10-12 13:04:21.543 +04:00 [INF] Route matched with {action = "UpdateItemsInBasket", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateItemsInBasket(System.Guid, GreenZone.Contracts.Dtos.BasketItemsDtos.BasketItemsUpdateDto) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:04:21.546 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:04:21.557 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__productId_0='?' (DbType = Guid), @__basketId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BasketId], [b].[CreatedAt], [b].[IsDeleted], [b].[ProductId], [b].[Quantity], [b].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [BasketItems] AS [b]
INNER JOIN [Products] AS [p] ON [b].[ProductId] = [p].[Id]
WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[ProductId] = @__productId_0 AND [b].[BasketId] = @__basketId_1
2025-10-12 13:04:21.566 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[@p6='?' (DbType = Guid), @p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [BasketItems] SET [BasketId] = @p0, [CreatedAt] = @p1, [IsDeleted] = @p2, [ProductId] = @p3, [Quantity] = @p4, [UpdatedAt] = @p5
OUTPUT 1
WHERE [Id] = @p6;
2025-10-12 13:04:21.571 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:04:21.575 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:04:21.577 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API) in 32.3508ms
2025-10-12 13:04:21.578 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API)'
2025-10-12 13:04:21.580 +04:00 [INF] Request finished HTTP/2 PUT https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - 200 null application/json; charset=utf-8 42.6817ms
2025-10-12 13:04:21.584 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 13:04:21.587 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:21.588 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 4.5018ms
2025-10-12 13:04:21.590 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:04:21.595 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:21.597 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:21'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:04:21.598 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:21'.
2025-10-12 13:04:21.600 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:04:21.601 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:04:21.605 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:04:21.608 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:04:21.610 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 6.3488ms
2025-10-12 13:04:21.611 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:04:21.613 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 22.7869ms
2025-10-12 13:04:21.615 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:04:21.615 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:04:21.620 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:21.623 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:21.624 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 8.6632ms
2025-10-12 13:04:21.625 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 9.4289ms
2025-10-12 13:04:21.626 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:04:21.626 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:04:21.636 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:21.639 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:21.641 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:21'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:04:21.642 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:21'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:04:21.643 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:21'.
2025-10-12 13:04:21.645 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:21'.
2025-10-12 13:04:21.647 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:04:21.649 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:04:21.650 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:04:21.651 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:04:21.655 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:04:21.658 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:04:21.660 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:04:21.664 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:04:21.665 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 11.273ms
2025-10-12 13:04:21.667 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 10.3456ms
2025-10-12 13:04:21.669 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:04:21.671 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:04:21.672 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 46.101ms
2025-10-12 13:04:21.673 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 47.068ms
2025-10-12 13:04:28.249 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - null null
2025-10-12 13:04:28.253 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:28.256 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - 204 null null 6.949ms
2025-10-12 13:04:28.257 +04:00 [INF] Request starting HTTP/2 PUT https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - application/json 66
2025-10-12 13:04:28.264 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:28.265 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:28'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:04:28.267 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:28'.
2025-10-12 13:04:28.268 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API)'
2025-10-12 13:04:28.269 +04:00 [INF] Route matched with {action = "UpdateItemsInBasket", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateItemsInBasket(System.Guid, GreenZone.Contracts.Dtos.BasketItemsDtos.BasketItemsUpdateDto) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:04:28.273 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:04:28.276 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__productId_0='?' (DbType = Guid), @__basketId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BasketId], [b].[CreatedAt], [b].[IsDeleted], [b].[ProductId], [b].[Quantity], [b].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [BasketItems] AS [b]
INNER JOIN [Products] AS [p] ON [b].[ProductId] = [p].[Id]
WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[ProductId] = @__productId_0 AND [b].[BasketId] = @__basketId_1
2025-10-12 13:04:28.281 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@p6='?' (DbType = Guid), @p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [BasketItems] SET [BasketId] = @p0, [CreatedAt] = @p1, [IsDeleted] = @p2, [ProductId] = @p3, [Quantity] = @p4, [UpdatedAt] = @p5
OUTPUT 1
WHERE [Id] = @p6;
2025-10-12 13:04:28.285 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:04:28.289 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:04:28.291 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API) in 19.4041ms
2025-10-12 13:04:28.292 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API)'
2025-10-12 13:04:28.294 +04:00 [INF] Request finished HTTP/2 PUT https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - 200 null application/json; charset=utf-8 36.6219ms
2025-10-12 13:04:28.296 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 13:04:28.301 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:28.302 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 6.4276ms
2025-10-12 13:04:28.304 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:04:28.309 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:28.310 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:28'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:04:28.312 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:28'.
2025-10-12 13:04:28.313 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:04:28.314 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:04:28.318 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:04:28.321 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:04:28.322 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 5.5874ms
2025-10-12 13:04:28.324 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:04:28.325 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 20.8575ms
2025-10-12 13:04:28.327 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:04:28.327 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:04:28.331 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:28.334 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:28.335 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 7.4668ms
2025-10-12 13:04:28.335 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 8.1341ms
2025-10-12 13:04:28.336 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:04:28.337 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:04:28.345 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:28.348 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:28.349 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:28'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:04:28.350 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:28'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:04:28.352 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:28'.
2025-10-12 13:04:28.354 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:28'.
2025-10-12 13:04:28.355 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:04:28.356 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:04:28.357 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:04:28.358 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:04:28.362 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:04:28.364 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:04:28.365 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:04:28.368 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:04:28.370 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.8292ms
2025-10-12 13:04:28.371 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.2191ms
2025-10-12 13:04:28.373 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:04:28.375 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:04:28.376 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 39.6301ms
2025-10-12 13:04:28.377 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 40.645ms
2025-10-12 13:04:37.815 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - null null
2025-10-12 13:04:37.820 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:37.821 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - 204 null null 6.7375ms
2025-10-12 13:04:37.823 +04:00 [INF] Request starting HTTP/2 PUT https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - application/json 65
2025-10-12 13:04:37.828 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:37.830 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:37'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:04:37.832 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:37'.
2025-10-12 13:04:37.833 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API)'
2025-10-12 13:04:37.835 +04:00 [INF] Route matched with {action = "UpdateItemsInBasket", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateItemsInBasket(System.Guid, GreenZone.Contracts.Dtos.BasketItemsDtos.BasketItemsUpdateDto) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:04:37.839 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:04:37.843 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__productId_0='?' (DbType = Guid), @__basketId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BasketId], [b].[CreatedAt], [b].[IsDeleted], [b].[ProductId], [b].[Quantity], [b].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [BasketItems] AS [b]
INNER JOIN [Products] AS [p] ON [b].[ProductId] = [p].[Id]
WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[ProductId] = @__productId_0 AND [b].[BasketId] = @__basketId_1
2025-10-12 13:04:37.850 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@p6='?' (DbType = Guid), @p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [BasketItems] SET [BasketId] = @p0, [CreatedAt] = @p1, [IsDeleted] = @p2, [ProductId] = @p3, [Quantity] = @p4, [UpdatedAt] = @p5
OUTPUT 1
WHERE [Id] = @p6;
2025-10-12 13:04:37.854 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:04:37.857 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:04:37.858 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API) in 21.4446ms
2025-10-12 13:04:37.860 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API)'
2025-10-12 13:04:37.862 +04:00 [INF] Request finished HTTP/2 PUT https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - 200 null application/json; charset=utf-8 38.4288ms
2025-10-12 13:04:37.865 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 13:04:37.870 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:37.871 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 5.7865ms
2025-10-12 13:04:37.872 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:04:37.877 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:37.879 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:37'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:04:37.881 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:37'.
2025-10-12 13:04:37.882 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:04:37.884 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:04:37.887 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:04:37.890 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:04:37.892 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 6.1819ms
2025-10-12 13:04:37.894 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:04:37.896 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 23.0232ms
2025-10-12 13:04:37.898 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:04:37.898 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:04:37.902 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:37.905 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:37.906 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 8.1618ms
2025-10-12 13:04:37.907 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 9.0421ms
2025-10-12 13:04:37.908 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:04:37.909 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:04:37.919 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:37.922 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:37.923 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:37'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:04:37.924 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:37'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:04:37.928 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:37'.
2025-10-12 13:04:37.930 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:37'.
2025-10-12 13:04:37.931 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:04:37.933 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:04:37.934 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:04:37.935 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:04:37.940 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:04:37.940 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:04:37.942 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:04:37.945 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:04:37.947 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.0596ms
2025-10-12 13:04:37.948 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.8584ms
2025-10-12 13:04:37.950 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:04:37.952 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:04:37.953 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 45.4241ms
2025-10-12 13:04:37.954 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 45.6886ms
2025-10-12 13:04:42.534 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 13:04:42.539 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:42.540 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 5.8194ms
2025-10-12 13:04:42.542 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:04:42.547 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:42.548 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:04:42.549 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:04:42.553 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:04:42.556 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:04:42.558 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 6.6415ms
2025-10-12 13:04:42.559 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:04:42.559 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:04:42.562 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:42.563 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 21.2918ms
2025-10-12 13:04:42.564 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:04:42.569 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:04:42.569 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:04:42.572 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:04:42.573 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:42.576 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:04:42.577 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:04:42.578 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 7.6903ms
2025-10-12 13:04:42.580 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:42'.
2025-10-12 13:04:42.582 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:04:42.583 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:04:42.584 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 25.55ms
2025-10-12 13:04:42.585 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:04:42.592 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:04:42.595 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:04:42.597 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 5.461ms
2025-10-12 13:04:42.597 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:04:42.598 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:04:42.601 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:42.602 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 33.4489ms
2025-10-12 13:04:42.603 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:04:42.605 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:04:42.605 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:04:42.609 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:42'.
2025-10-12 13:04:42.612 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:42.614 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:42.616 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:04:42.617 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:04:42.617 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:04:42.619 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:04:42.621 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:42'.
2025-10-12 13:04:42.623 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:42'.
2025-10-12 13:04:42.626 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:04:42.626 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:04:42.627 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:04:42.630 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:04:42.631 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:04:42.632 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:04:42.633 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 8.6877ms
2025-10-12 13:04:42.635 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:04:42.636 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:04:42.640 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:04:42.642 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:04:42.644 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:42.646 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:04:42.647 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 49.7125ms
2025-10-12 13:04:42.650 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:04:42.651 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:04:42.652 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 16.8462ms
2025-10-12 13:04:42.653 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:04:42.657 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 18.5643ms
2025-10-12 13:04:42.658 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:04:42.659 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:42'.
2025-10-12 13:04:42.660 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:04:42.663 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:42.665 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:04:42.668 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:42.670 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:04:42.671 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 66.017ms
2025-10-12 13:04:42.672 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:04:42.673 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 68.3969ms
2025-10-12 13:04:42.674 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:04:42.675 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:04:42.680 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:42'.
2025-10-12 13:04:42.685 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:42'.
2025-10-12 13:04:42.688 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:04:42.688 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:04:42.689 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:04:42.690 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:04:42.693 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:04:42.694 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:04:42.697 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:04:42.697 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 10.0706ms
2025-10-12 13:04:42.701 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:04:42.702 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:04:42.703 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:04:42.706 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:04:42.707 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 11.6389ms
2025-10-12 13:04:42.708 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 73.3323ms
2025-10-12 13:04:42.709 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.7703ms
2025-10-12 13:04:42.711 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:04:42.716 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:04:42.717 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 63.5866ms
2025-10-12 13:04:42.718 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 60.437ms
2025-10-12 13:04:46.312 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - null null
2025-10-12 13:04:46.317 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:46.319 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - 204 null null 6.0721ms
2025-10-12 13:04:46.320 +04:00 [INF] Request starting HTTP/2 PUT https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - application/json 66
2025-10-12 13:04:46.325 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:46.326 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:46'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:04:46.329 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:46'.
2025-10-12 13:04:46.330 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API)'
2025-10-12 13:04:46.331 +04:00 [INF] Route matched with {action = "UpdateItemsInBasket", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateItemsInBasket(System.Guid, GreenZone.Contracts.Dtos.BasketItemsDtos.BasketItemsUpdateDto) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:04:46.335 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:04:46.338 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__productId_0='?' (DbType = Guid), @__basketId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BasketId], [b].[CreatedAt], [b].[IsDeleted], [b].[ProductId], [b].[Quantity], [b].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [BasketItems] AS [b]
INNER JOIN [Products] AS [p] ON [b].[ProductId] = [p].[Id]
WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[ProductId] = @__productId_0 AND [b].[BasketId] = @__basketId_1
2025-10-12 13:04:46.345 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@p6='?' (DbType = Guid), @p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [BasketItems] SET [BasketId] = @p0, [CreatedAt] = @p1, [IsDeleted] = @p2, [ProductId] = @p3, [Quantity] = @p4, [UpdatedAt] = @p5
OUTPUT 1
WHERE [Id] = @p6;
2025-10-12 13:04:46.349 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:04:46.351 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:04:46.352 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API) in 18.5595ms
2025-10-12 13:04:46.354 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API)'
2025-10-12 13:04:46.355 +04:00 [INF] Request finished HTTP/2 PUT https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - 200 null application/json; charset=utf-8 34.4762ms
2025-10-12 13:04:46.357 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 13:04:46.362 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:46.364 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 6.577ms
2025-10-12 13:04:46.365 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:04:46.371 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:46.372 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:46'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:04:46.375 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:46'.
2025-10-12 13:04:46.376 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:04:46.377 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:04:46.381 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:04:46.384 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:04:46.385 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 5.757ms
2025-10-12 13:04:46.387 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:04:46.388 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 22.561ms
2025-10-12 13:04:46.389 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:04:46.389 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:04:46.394 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:46.396 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:46.397 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 7.9448ms
2025-10-12 13:04:46.398 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 8.9475ms
2025-10-12 13:04:46.398 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:04:46.399 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:04:46.410 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:46.412 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:04:46.413 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:46'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:04:46.414 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:46'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:04:46.416 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:46'.
2025-10-12 13:04:46.418 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:04:46'.
2025-10-12 13:04:46.420 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:04:46.421 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:04:46.422 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:04:46.424 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:04:46.427 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:04:46.429 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:04:46.431 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:04:46.434 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:04:46.435 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.1882ms
2025-10-12 13:04:46.437 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.8255ms
2025-10-12 13:04:46.439 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:04:46.441 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:04:46.442 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 43.8568ms
2025-10-12 13:04:46.444 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 44.5418ms
2025-10-12 13:05:04.126 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:05:04.128 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:05:04.134 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:05:04.135 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:05:04.135 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:05:04.139 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:05:04.140 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 13.5621ms
2025-10-12 13:05:04.143 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:05:04.143 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:05:04.148 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:05:04.148 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 20.4094ms
2025-10-12 13:05:04.150 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:05:04.155 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:05:04.156 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 21.3385ms
2025-10-12 13:05:04.157 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 22.1884ms
2025-10-12 13:05:04.165 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:05:04.166 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:05:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:05:04.176 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:05:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:05:04.178 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:05:04'.
2025-10-12 13:05:04.180 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:05:04'.
2025-10-12 13:05:04.181 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:05:04.182 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:05:04.184 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:05:04.185 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:05:04.193 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:05:04.194 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:05:04.197 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:05:04.200 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:05:04.202 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 13.1875ms
2025-10-12 13:05:04.203 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:05:04.203 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.6584ms
2025-10-12 13:05:04.204 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:05:04.205 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:05:04.208 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:05:04.210 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:05:04.214 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:05:04.215 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 72.0505ms
2025-10-12 13:05:04.216 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:05:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:05:04.218 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 67.6101ms
2025-10-12 13:05:04.219 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:05:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:05:04.225 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:05:04'.
2025-10-12 13:05:04.231 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:05:04'.
2025-10-12 13:05:04.233 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:05:04.234 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:05:04.235 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:05:04.236 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:05:04.245 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:05:04.245 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:05:04.247 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:05:04.250 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:05:04.252 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.8355ms
2025-10-12 13:05:04.253 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.427ms
2025-10-12 13:05:04.255 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:05:04.257 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:05:04.258 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 55.2296ms
2025-10-12 13:05:04.259 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 54.8529ms
2025-10-12 13:05:24.999 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:05:24.999 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:05:25.002 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:05:25.005 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:05:25.006 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 7.6805ms
2025-10-12 13:05:25.008 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 8.1943ms
2025-10-12 13:05:25.009 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:05:25.010 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:05:25.018 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:05:25.021 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:05:25.023 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:05:25'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:05:25.023 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:05:25'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:05:25.025 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:05:25'.
2025-10-12 13:05:25.027 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:05:25'.
2025-10-12 13:05:25.028 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:05:25.029 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:05:25.030 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:05:25.031 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:05:25.038 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:05:25.039 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:05:25.042 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:05:25.044 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:05:25.045 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.1016ms
2025-10-12 13:05:25.047 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 11.6132ms
2025-10-12 13:05:25.048 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:05:25.050 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:05:25.051 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 41.7415ms
2025-10-12 13:05:25.052 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 41.984ms
2025-10-12 13:05:25.101 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 13:05:25.106 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:05:25.107 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 6.189ms
2025-10-12 13:05:25.109 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:05:25.115 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:05:25.116 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:05:25.118 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:05:25.129 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:05:25.132 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:05:25.135 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 15.4732ms
2025-10-12 13:05:25.137 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:05:25.139 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 29.7862ms
2025-10-12 13:05:25.144 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 13:05:25.148 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:05:25.150 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 5.6932ms
2025-10-12 13:05:25.152 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:05:25.157 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:05:25.158 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:05:25'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:05:25.161 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:05:25'.
2025-10-12 13:05:25.162 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:05:25.164 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:05:25.177 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:05:25.181 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:05:25.184 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 17.8885ms
2025-10-12 13:05:25.187 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:05:25.188 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 36.551ms
2025-10-12 13:07:16.048 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:07:16.050 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:07:16.053 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:07:16.057 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:07:16.058 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 9.9467ms
2025-10-12 13:07:16.060 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 10.072ms
2025-10-12 13:07:16.063 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:07:16.064 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:07:16.073 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:07:16.076 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:07:16.078 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:07:16'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:07:16.079 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:07:16'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:07:16.082 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:07:16'.
2025-10-12 13:07:16.084 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:07:16'.
2025-10-12 13:07:16.086 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:07:16.087 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:07:16.088 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:07:16.089 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:07:16.097 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 13:07:16.099 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 13:07:16.101 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:07:16.105 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:07:16.105 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:07:16.105 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:07:16.106 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 9.0923ms
2025-10-12 13:07:16.110 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:07:16.112 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:07:16.112 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:07:16.113 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 13.4927ms
2025-10-12 13:07:16.118 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 23.3978ms
2025-10-12 13:07:16.120 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:07:16.121 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:07:16.123 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 31.2547ms
2025-10-12 13:07:16.124 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:07:16.128 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:07:16.131 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:07:16.133 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:07:16.134 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:07:16.138 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:07:16.140 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 75.9647ms
2025-10-12 13:07:16.141 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:07:16'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:07:16.142 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:07:16.143 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 79.9557ms
2025-10-12 13:07:16.145 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:07:16'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:07:16.150 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:07:16'.
2025-10-12 13:07:16.160 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:07:16'.
2025-10-12 13:07:16.162 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:07:16.163 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:07:16.165 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:07:16.166 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:07:16.167 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:07:16.172 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:07:16.174 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:07:16.181 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:07:16.182 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:07:16.184 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 30.5468ms
2025-10-12 13:07:16.188 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:07:16.190 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 20.5686ms
2025-10-12 13:07:16.193 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:07:16.195 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:07:16.201 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:07:16.203 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:07:16.205 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 29.2973ms
2025-10-12 13:07:16.207 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 95.2458ms
2025-10-12 13:07:16.208 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:07:16.210 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 90.3682ms
2025-10-12 13:07:16.212 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:07:16.223 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:07:16.230 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 105.2782ms
2025-10-12 13:07:16.234 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:07:16.241 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:07:16.244 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 11.5536ms
2025-10-12 13:07:16.246 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:07:16.247 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 59.6844ms
2025-10-12 13:07:16.268 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 13:07:16.269 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 13:07:16.272 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:07:16.276 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:07:16.277 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 8.7552ms
2025-10-12 13:07:16.278 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 8.9123ms
2025-10-12 13:07:16.279 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:07:16.290 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:07:16.291 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:07:16'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:07:16.294 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:07:16'.
2025-10-12 13:07:16.295 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:07:16.297 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:07:16.312 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:07:16.316 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:07:16.318 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 18.607ms
2025-10-12 13:07:16.320 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:07:16.321 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:07:16.324 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:07:16.326 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 46.6994ms
2025-10-12 13:07:16.327 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:07:16'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:07:16.334 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:07:16'.
2025-10-12 13:07:16.336 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:07:16.337 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:07:16.354 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:07:16.358 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:07:16.360 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 19.7485ms
2025-10-12 13:07:16.362 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:07:16.363 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 42.972ms
2025-10-12 13:07:20.669 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:07:20.671 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:07:20.673 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:07:20.677 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:07:20.678 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:07:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:07:20.679 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:07:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:07:20.681 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:07:20'.
2025-10-12 13:07:20.684 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:07:20'.
2025-10-12 13:07:20.686 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:07:20.688 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:07:20.689 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:07:20.689 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:07:20.691 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:07:20.694 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:07:20.701 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:07:20.703 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:07:20.708 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:07:20.708 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:07:20.714 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:07:20.721 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:07:20.722 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 22.3528ms
2025-10-12 13:07:20.724 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 26.5523ms
2025-10-12 13:07:20.724 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:07:20.725 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:07:20.725 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:07:20.728 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:07:20.731 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:07:20.732 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 61.7092ms
2025-10-12 13:07:20.736 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:07:20.738 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 68.8689ms
2025-10-12 13:07:20.739 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:07:20.739 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:07:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:07:20.746 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:07:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:07:20.754 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:07:20.760 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:07:20'.
2025-10-12 13:07:20.770 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:07:20.773 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 67.3197ms
2025-10-12 13:07:20.776 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:07:20.777 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:07:20'.
2025-10-12 13:07:20.778 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:07:20.780 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:07:20.786 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:07:20.789 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:07:20.793 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 104.4758ms
2025-10-12 13:07:20.795 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:07:20.796 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:07:20.802 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:07:20.803 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:07:20.812 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:07:20.814 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 22.3198ms
2025-10-12 13:07:20.814 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:07:20.816 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:07:20.819 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:07:20.820 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 96.3939ms
2025-10-12 13:07:20.821 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:07:20.823 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 17.5123ms
2025-10-12 13:07:20.833 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:07:20.833 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:07:20.835 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 27.4722ms
2025-10-12 13:07:20.837 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 111.6292ms
2025-10-12 13:07:20.839 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:07:20.844 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:07:20.845 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 69.7292ms
2025-10-12 13:07:20.849 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:07:20.856 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:07:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:07:20.859 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:07:20'.
2025-10-12 13:07:20.861 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:07:20.863 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:07:20.885 +04:00 [INF] Executed DbCommand (17ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:07:20.890 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:07:20.892 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 25.8822ms
2025-10-12 13:07:20.895 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:07:20.897 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 52.9294ms
2025-10-12 13:07:20.922 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:07:20.927 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:07:20.928 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:07:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:07:20.932 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:07:20'.
2025-10-12 13:07:20.933 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:07:20.935 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:07:20.941 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:07:20.946 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:07:20.948 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 10.3179ms
2025-10-12 13:07:20.951 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:07:20.953 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 31.2132ms
2025-10-12 13:08:34.649 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:08:34.650 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:08:34.651 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:08:34.652 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:08:34.655 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:34.657 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 13:08:34.657 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 13:08:34.658 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:34.661 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:34.665 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:34.667 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 17.0255ms
2025-10-12 13:08:34.670 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:34.672 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:08:34.674 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:34.675 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 24.7314ms
2025-10-12 13:08:34.676 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 24.635ms
2025-10-12 13:08:34.677 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 24.879ms
2025-10-12 13:08:34.682 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:08:34.683 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 26.7141ms
2025-10-12 13:08:34.687 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:34.688 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 30.8507ms
2025-10-12 13:08:34.688 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:08:34.705 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:34.710 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:08:34'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:08:34.718 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:34.719 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:08:34'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:08:34.721 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:08:34'.
2025-10-12 13:08:34.723 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:08:34.725 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:08:34'.
2025-10-12 13:08:34.727 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:08:34.729 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:08:34.730 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:08:34.731 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:08:34.735 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:08:34.745 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:08:34.745 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:08:34.748 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:08:34.748 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:08:34.751 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:08:34.754 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:08:34.755 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 17.4371ms
2025-10-12 13:08:34.757 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 16.9378ms
2025-10-12 13:08:34.757 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:08:34.758 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:08:34.759 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 25.0718ms
2025-10-12 13:08:34.759 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:08:34.760 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:08:34.761 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:08:34.765 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:34.768 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:34.770 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:08:34.773 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:34.774 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 102.407ms
2025-10-12 13:08:34.776 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 93.5648ms
2025-10-12 13:08:34.777 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:08:34'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:08:34.778 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:08:34'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:08:34.779 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 90.8602ms
2025-10-12 13:08:34.780 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:08:34.790 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:08:34'.
2025-10-12 13:08:34.792 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:08:34'.
2025-10-12 13:08:34.795 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 13:08:34.799 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:08:34.800 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:08:34.802 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:08:34.805 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:34.809 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:08:34.810 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:08:34.810 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:08:34.811 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 16.1343ms
2025-10-12 13:08:34.813 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:08:34.815 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:08:34.817 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:08:34.821 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:08:34.827 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:34.830 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:08:34.832 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 24.5074ms
2025-10-12 13:08:34.835 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:08:34.837 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:08:34'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:08:34.838 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 24.2765ms
2025-10-12 13:08:34.840 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:08:34.842 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 22.5218ms
2025-10-12 13:08:34.844 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:08:34'.
2025-10-12 13:08:34.846 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:08:34.847 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 87.676ms
2025-10-12 13:08:34.849 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:08:34.851 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:08:34.852 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 94.4889ms
2025-10-12 13:08:34.857 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 98.7302ms
2025-10-12 13:08:34.858 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:08:34.888 +04:00 [INF] Executed DbCommand (17ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:08:34.892 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:08:34.894 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 24.7691ms
2025-10-12 13:08:34.896 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:08:34.897 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:08:34.900 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:34.902 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 88.6478ms
2025-10-12 13:08:34.903 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:08:34'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:08:34.910 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:08:34'.
2025-10-12 13:08:34.912 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:08:34.914 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:08:34.921 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:08:34.925 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:08:34.927 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 10.5006ms
2025-10-12 13:08:34.931 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:08:34.932 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 36.3683ms
2025-10-12 13:08:53.107 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:08:53.107 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:08:53.109 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:08:53.109 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:08:53.112 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:53.116 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:53.116 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 13:08:53.117 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 13:08:53.120 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:53.124 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:53.125 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 17.5262ms
2025-10-12 13:08:53.126 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 18.4822ms
2025-10-12 13:08:53.129 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:53.130 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:08:53.130 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:08:53.133 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:53.134 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 25.3179ms
2025-10-12 13:08:53.136 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 26.6544ms
2025-10-12 13:08:53.146 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 29.5201ms
2025-10-12 13:08:53.149 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:08:53.150 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:53.153 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:53.155 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 37.7654ms
2025-10-12 13:08:53.172 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:53.173 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:08:53'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:08:53.175 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:08:53'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:08:53.181 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:08:53.182 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:08:53'.
2025-10-12 13:08:53.185 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:08:53'.
2025-10-12 13:08:53.187 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:08:53.189 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:08:53.190 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:08:53.195 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:08:53.196 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:08:53.196 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:08:53.202 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:08:53.204 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:08:53.206 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:08:53.208 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:08:53.211 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:08:53.213 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 19.8895ms
2025-10-12 13:08:53.214 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:08:53.214 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 15.5868ms
2025-10-12 13:08:53.216 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:08:53.218 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:53.220 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:08:53.222 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 20.3651ms
2025-10-12 13:08:53.224 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:08:53.224 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:08:53.228 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:53.229 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:08:53.231 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 81.3441ms
2025-10-12 13:08:53.233 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:08:53.236 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:53.238 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 108.244ms
2025-10-12 13:08:53.240 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:08:53'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:08:53.240 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:08:53.247 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 116.9265ms
2025-10-12 13:08:53.248 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:08:53'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:08:53.254 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:08:53'.
2025-10-12 13:08:53.260 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:08:53.264 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:08:53'.
2025-10-12 13:08:53.266 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:08:53.270 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:08:53.270 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:08:53.271 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:08:53.273 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 16.5431ms
2025-10-12 13:08:53.275 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:08:53.276 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 13:08:53.280 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:08:53.281 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:08:53.286 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:08:53.287 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:53.288 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 74.0223ms
2025-10-12 13:08:53.292 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:08:53.295 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:08:53.295 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 19.5597ms
2025-10-12 13:08:53.299 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:08:53.302 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 24.3102ms
2025-10-12 13:08:53.304 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 21.6657ms
2025-10-12 13:08:53.312 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:53.314 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:08:53.316 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:08:53.317 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:08:53'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:08:53.318 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 102.2898ms
2025-10-12 13:08:53.320 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 95.6998ms
2025-10-12 13:08:53.322 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:08:53'.
2025-10-12 13:08:53.333 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:08:53.335 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:08:53.341 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:08:53.346 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:08:53.348 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 10.6582ms
2025-10-12 13:08:53.350 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:08:53.350 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:08:53.354 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:53.356 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 56.9097ms
2025-10-12 13:08:53.357 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:08:53'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:08:53.363 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:08:53'.
2025-10-12 13:08:53.365 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:08:53.367 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:08:53.373 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:08:53.378 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:08:53.380 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 9.4708ms
2025-10-12 13:08:53.382 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:08:53.384 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 33.9559ms
2025-10-12 13:08:58.240 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:08:58.240 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:08:58.243 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:08:58.243 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:08:58.244 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:58.248 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:58.251 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:58.254 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 13:08:58.254 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 13:08:58.255 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:58.256 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 16.3809ms
2025-10-12 13:08:58.258 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 17.5264ms
2025-10-12 13:08:58.259 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 15.6349ms
2025-10-12 13:08:58.262 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:58.262 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:08:58.262 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:08:58.265 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:58.266 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 22.9534ms
2025-10-12 13:08:58.280 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 25.2223ms
2025-10-12 13:08:58.285 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:08:58.285 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:58.288 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:58.289 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 34.6075ms
2025-10-12 13:08:58.302 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:58.303 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:08:58'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:08:58.304 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:08:58'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:08:58.309 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:08:58.310 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:08:58'.
2025-10-12 13:08:58.313 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:08:58'.
2025-10-12 13:08:58.315 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:08:58.317 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:08:58.319 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:08:58.322 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:08:58.324 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:08:58.324 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:08:58.328 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:08:58.331 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:08:58.333 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:08:58.334 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:08:58.338 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:08:58.339 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 18.3844ms
2025-10-12 13:08:58.341 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 15.4896ms
2025-10-12 13:08:58.342 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:08:58.343 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:08:58.343 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 15.2133ms
2025-10-12 13:08:58.344 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:08:58.345 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:08:58.347 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:08:58.351 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:58.354 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:58.356 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:08:58.360 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:58.362 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 77.0599ms
2025-10-12 13:08:58.363 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 100.9716ms
2025-10-12 13:08:58.364 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:08:58.365 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:08:58'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:08:58.367 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 104.6806ms
2025-10-12 13:08:58.369 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:08:58'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:08:58.370 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 13:08:58.378 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:08:58.381 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:08:58'.
2025-10-12 13:08:58.387 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:08:58'.
2025-10-12 13:08:58.390 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:58.395 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:08:58.397 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:08:58.398 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 27.6134ms
2025-10-12 13:08:58.398 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:08:58.399 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:08:58.401 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:08:58.401 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:08:58.409 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:08:58.413 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:08:58.417 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:08:58.417 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:58.419 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 25.7342ms
2025-10-12 13:08:58.422 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:08:58.425 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:08:58.427 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:08:58'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:08:58.428 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:08:58.430 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 19.6107ms
2025-10-12 13:08:58.432 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 19.2087ms
2025-10-12 13:08:58.434 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:08:58'.
2025-10-12 13:08:58.436 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 93.6653ms
2025-10-12 13:08:58.437 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:08:58.439 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:08:58.441 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:08:58.447 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 103.674ms
2025-10-12 13:08:58.448 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 103.5649ms
2025-10-12 13:08:58.450 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:08:58.464 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:08:58.469 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:08:58.471 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 9.7278ms
2025-10-12 13:08:58.474 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:08:58.474 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:08:58.477 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:08:58.479 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 77.3973ms
2025-10-12 13:08:58.480 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:08:58'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:08:58.487 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:08:58'.
2025-10-12 13:08:58.489 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:08:58.491 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:08:58.497 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:08:58.501 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:08:58.503 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 9.8316ms
2025-10-12 13:08:58.505 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:08:58.507 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 33.8458ms
2025-10-12 13:09:04.136 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:09:04.136 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:09:04.136 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:09:04.136 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 13:09:04.136 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 13:09:04.136 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:09:04.140 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:09:04.143 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:09:04.147 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:09:04.150 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:09:04.154 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:09:04.158 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:09:04.159 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 22.7954ms
2025-10-12 13:09:04.161 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 23.9978ms
2025-10-12 13:09:04.162 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 25.0831ms
2025-10-12 13:09:04.163 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 26.3054ms
2025-10-12 13:09:04.164 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 27.4228ms
2025-10-12 13:09:04.165 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 28.4069ms
2025-10-12 13:09:04.172 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:09:04.172 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:09:04.172 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:09:04.195 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:09:04.198 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:09:04.202 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:09:04.203 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:09:04.204 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:09:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:09:04.205 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:09:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:09:04.206 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:09:04.209 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:09:04'.
2025-10-12 13:09:04.211 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:09:04'.
2025-10-12 13:09:04.215 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:09:04.216 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:09:04.217 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:09:04.219 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:09:04.222 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:09:04.223 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:09:04.228 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:09:04.228 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 14.0183ms
2025-10-12 13:09:04.229 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:09:04.234 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:09:04.234 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:09:04.239 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:09:04.241 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:09:04.244 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:09:04.245 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:09:04.247 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 20.9519ms
2025-10-12 13:09:04.248 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 76.129ms
2025-10-12 13:09:04.249 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:09:04.250 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 20.7071ms
2025-10-12 13:09:04.252 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:09:04.252 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:09:04.254 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:09:04.255 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 13:09:04.262 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:09:04.263 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:09:04.270 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:09:04.270 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:09:04.271 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 98.947ms
2025-10-12 13:09:04.274 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:09:04.275 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:09:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:09:04.277 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 104.7936ms
2025-10-12 13:09:04.281 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:09:04.281 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:09:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:09:04.286 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 31.4597ms
2025-10-12 13:09:04.289 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:09:04'.
2025-10-12 13:09:04.289 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:09:04.295 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 28.4986ms
2025-10-12 13:09:04.297 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:09:04'.
2025-10-12 13:09:04.303 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:09:04.306 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:09:04.308 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:09:04.309 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:09:04.311 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:09:04.312 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:09:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:09:04.313 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 83.9269ms
2025-10-12 13:09:04.315 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:09:04.320 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:09:04'.
2025-10-12 13:09:04.320 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:09:04.328 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:09:04.329 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:09:04.331 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:09:04.332 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:09:04.335 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:09:04.336 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 18.8794ms
2025-10-12 13:09:04.340 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 13.9898ms
2025-10-12 13:09:04.340 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:09:04.342 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:09:04.344 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:09:04.347 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:09:04.348 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 99.3778ms
2025-10-12 13:09:04.350 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 97.5869ms
2025-10-12 13:09:04.351 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 12.8225ms
2025-10-12 13:09:04.352 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:09:04.361 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:09:04.365 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:09:04.366 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 76.9548ms
2025-10-12 13:09:04.368 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:09:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:09:04.374 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:09:04'.
2025-10-12 13:09:04.376 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:09:04.378 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:09:04.383 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:09:04.387 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:09:04.390 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 8.875ms
2025-10-12 13:09:04.392 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:09:04.393 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 41.0502ms
2025-10-12 13:10:12.178 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:10:12.179 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:10:12.179 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:10:12.180 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:10:12.183 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:12.186 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:12.187 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 13:10:12.187 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 13:10:12.191 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:12.194 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:12.195 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 16.6179ms
2025-10-12 13:10:12.196 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 17.4826ms
2025-10-12 13:10:12.199 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:10:12.199 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:10:12.199 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:12.203 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:12.204 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 24.6519ms
2025-10-12 13:10:12.205 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 24.621ms
2025-10-12 13:10:12.217 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:12.221 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:12.222 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 34.9539ms
2025-10-12 13:10:12.223 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 36.0011ms
2025-10-12 13:10:12.226 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:10:12.233 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:10:12'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:10:12.234 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:10:12'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:10:12.248 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:12.251 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:10:12'.
2025-10-12 13:10:12.253 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:10:12'.
2025-10-12 13:10:12.255 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:10:12.256 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:10:12.257 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:10:12.259 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:10:12.260 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:10:12.261 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:10:12.274 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:10:12.275 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:10:12.276 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:10:12.278 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:10:12.282 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:10:12.284 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:10:12.285 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 19.0443ms
2025-10-12 13:10:12.287 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:10:12.287 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 18.2198ms
2025-10-12 13:10:12.288 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:10:12.289 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 24.8941ms
2025-10-12 13:10:12.290 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:10:12.291 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:10:12.294 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:12.296 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:10:12.300 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:12.301 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:10:12.305 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:12.306 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 107.5676ms
2025-10-12 13:10:12.307 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:10:12'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:10:12.309 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 109.8904ms
2025-10-12 13:10:12.310 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:10:12'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:10:12.311 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 85.0282ms
2025-10-12 13:10:12.312 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:10:12.319 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:10:12'.
2025-10-12 13:10:12.322 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 13:10:12.326 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:10:12'.
2025-10-12 13:10:12.331 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:10:12.333 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:10:12.337 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:12.338 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:10:12.342 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:10:12.343 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:10:12.343 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 21.3047ms
2025-10-12 13:10:12.345 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:10:12.347 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:10:12.352 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:10:12.353 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:10:12.360 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:10:12.362 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:12.365 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:10:12.366 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 25.7375ms
2025-10-12 13:10:12.370 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:10:12.372 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:10:12'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:10:12.373 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 24.7911ms
2025-10-12 13:10:12.374 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:10:12.376 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 17.606ms
2025-10-12 13:10:12.378 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:10:12'.
2025-10-12 13:10:12.379 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:10:12.381 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 90.4681ms
2025-10-12 13:10:12.382 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:10:12.384 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:10:12.385 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 98.4908ms
2025-10-12 13:10:12.392 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 103.5469ms
2025-10-12 13:10:12.393 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:10:12.418 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:10:12.422 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:10:12.425 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 20.4788ms
2025-10-12 13:10:12.426 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:10:12.427 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:10:12.431 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:12.432 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 85.5749ms
2025-10-12 13:10:12.434 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:10:12'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:10:12.440 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:10:12'.
2025-10-12 13:10:12.443 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:10:12.444 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:10:12.449 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:10:12.453 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:10:12.455 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 8.1425ms
2025-10-12 13:10:12.457 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:10:12.459 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 32.8659ms
2025-10-12 13:10:16.200 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:10:16.200 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:10:16.206 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:16.210 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:16.210 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:10:16.211 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:10:16'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:10:16.212 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:10:16'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:10:16.215 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:16.217 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:10:16'.
2025-10-12 13:10:16.220 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:10:16'.
2025-10-12 13:10:16.222 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:10:16.223 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:10:16.225 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:10:16.226 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:10:16.227 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:10:16.230 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:10:16.235 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:10:16.237 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:10:16.241 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:10:16.241 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:10:16.246 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:10:16.249 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:10:16.250 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 17.8745ms
2025-10-12 13:10:16.252 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:10:16.253 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 17.8159ms
2025-10-12 13:10:16.254 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:10:16.254 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 16.7763ms
2025-10-12 13:10:16.255 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:10:16.256 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:10:16.260 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:16.262 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:10:16.264 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 63.7657ms
2025-10-12 13:10:16.266 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:10:16.269 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:16.271 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 60.6139ms
2025-10-12 13:10:16.272 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:10:16.276 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:16.277 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:10:16.281 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 81.3112ms
2025-10-12 13:10:16.283 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:10:16'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:10:16.289 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:10:16.291 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:10:16'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:10:16.294 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:16.302 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:10:16'.
2025-10-12 13:10:16.306 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:10:16.307 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:10:16'.
2025-10-12 13:10:16.308 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:10:16'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:10:16.309 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:10:16.312 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:10:16.313 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:10:16.315 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:10:16'.
2025-10-12 13:10:16.316 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:10:16.318 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 14.1952ms
2025-10-12 13:10:16.320 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:10:16.321 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:10:16.326 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:10:16.326 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:10:16.330 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:10:16.332 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:10:16.332 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 79.9955ms
2025-10-12 13:10:16.335 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:10:16.340 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:10:16.341 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:10:16.347 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 22.5877ms
2025-10-12 13:10:16.350 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:10:16.351 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 22.5978ms
2025-10-12 13:10:16.353 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:10:16.355 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 17.9656ms
2025-10-12 13:10:16.356 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:10:16.356 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:10:16.358 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 102.7152ms
2025-10-12 13:10:16.359 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:10:16.362 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:16.364 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 109.2765ms
2025-10-12 13:10:16.370 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 92.4004ms
2025-10-12 13:10:16.371 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:10:16'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:10:16.382 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:10:16'.
2025-10-12 13:10:16.383 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:10:16.385 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:10:16.391 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:10:16.395 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:10:16.397 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 8.2478ms
2025-10-12 13:10:16.399 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:10:16.400 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 43.9236ms
2025-10-12 13:10:23.658 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:10:23.658 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:10:23.662 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:10:23.662 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:10:23.663 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:23.667 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:23.671 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:23.675 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:23.676 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 18.0495ms
2025-10-12 13:10:23.677 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 18.9876ms
2025-10-12 13:10:23.677 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 13:10:23.679 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 16.4686ms
2025-10-12 13:10:23.680 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 17.7745ms
2025-10-12 13:10:23.684 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 13:10:23.684 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:10:23.685 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:10:23.693 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:23.707 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:23.710 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:23.714 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:23.715 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 37.6424ms
2025-10-12 13:10:23.716 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 32.4053ms
2025-10-12 13:10:23.718 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:10:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:10:23.719 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:10:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:10:23.721 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:10:23.733 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:10:23'.
2025-10-12 13:10:23.736 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:10:23'.
2025-10-12 13:10:23.741 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:23.742 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:10:23.744 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:10:23.745 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:10:23.746 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:10:23.747 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:10:23.748 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:10:23.770 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:10:23.775 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:10:23.775 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:10:23.778 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:10:23.781 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 28.9877ms
2025-10-12 13:10:23.781 +04:00 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:10:23.783 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:10:23.784 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 25.4861ms
2025-10-12 13:10:23.786 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:10:23.788 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:10:23.794 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:10:23.796 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:23.799 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:10:23.802 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:23.804 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 118.9875ms
2025-10-12 13:10:23.806 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 45.4434ms
2025-10-12 13:10:23.807 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:10:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:10:23.807 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:10:23.808 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 123.1291ms
2025-10-12 13:10:23.810 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:10:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:10:23.816 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:10:23.820 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:10:23'.
2025-10-12 13:10:23.824 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:23.831 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:10:23'.
2025-10-12 13:10:23.833 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 111.8969ms
2025-10-12 13:10:23.835 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:10:23.836 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:10:23.838 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:10:23.844 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:10:23.846 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:10:23.848 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:10:23.850 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 13:10:23.854 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:10:23.855 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:10:23.859 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:10:23.859 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:23.862 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:10:23.866 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:10:23.868 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:10:23.869 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 18.7265ms
2025-10-12 13:10:23.871 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 20.2807ms
2025-10-12 13:10:23.872 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:10:23.872 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 19.1664ms
2025-10-12 13:10:23.874 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 18.7002ms
2025-10-12 13:10:23.881 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:10:23.884 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:23.886 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:10:23.887 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:10:23.889 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 105.9395ms
2025-10-12 13:10:23.891 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:10:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:10:23.892 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 84.8221ms
2025-10-12 13:10:23.893 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 107.024ms
2025-10-12 13:10:23.899 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:10:23'.
2025-10-12 13:10:23.911 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:10:23.913 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:10:23.934 +04:00 [INF] Executed DbCommand (18ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:10:23.939 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:10:23.941 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 26.0908ms
2025-10-12 13:10:23.943 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:10:23.944 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:10:23.948 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:10:23.949 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 76.7786ms
2025-10-12 13:10:23.950 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:10:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:10:23.957 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:10:23'.
2025-10-12 13:10:23.959 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:10:23.961 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:10:23.986 +04:00 [INF] Executed DbCommand (19ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:10:23.992 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:10:23.994 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 29.074ms
2025-10-12 13:10:23.996 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:10:23.998 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 54.4006ms
2025-10-12 13:12:47.005 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:12:47.006 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:12:47.005 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:12:47.005 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:12:47.009 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:47.011 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 13:12:47.012 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:47.013 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 13:12:47.016 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:47.021 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:47.023 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 17.2129ms
2025-10-12 13:12:47.026 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:47.027 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 21.8479ms
2025-10-12 13:12:47.031 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:47.032 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 26.1084ms
2025-10-12 13:12:47.032 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:12:47.032 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:12:47.033 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 27.2405ms
2025-10-12 13:12:47.038 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 27.1733ms
2025-10-12 13:12:47.041 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:12:47.044 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 31.3818ms
2025-10-12 13:12:47.051 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:47.055 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:47.066 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:47.072 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:12:47'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:12:47.073 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:12:47'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:12:47.074 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:12:47.077 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:12:47'.
2025-10-12 13:12:47.079 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:12:47'.
2025-10-12 13:12:47.080 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:12:47.082 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:12:47.084 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:12:47.088 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:12:47.090 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:12:47.101 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:12:47.101 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:12:47.103 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:12:47.104 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:12:47.106 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:12:47.110 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:12:47.111 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 16.4379ms
2025-10-12 13:12:47.112 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 20.0147ms
2025-10-12 13:12:47.113 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:12:47.113 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:12:47.114 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 27.5274ms
2025-10-12 13:12:47.115 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:12:47.116 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:12:47.118 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:12:47.121 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:47.125 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:47.127 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:12:47.131 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:47.132 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 100.1579ms
2025-10-12 13:12:47.133 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 101.6013ms
2025-10-12 13:12:47.134 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:12:47'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:12:47.136 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:12:47'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:12:47.137 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 96.171ms
2025-10-12 13:12:47.138 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:12:47.142 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 13:12:47.149 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:12:47'.
2025-10-12 13:12:47.152 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:12:47'.
2025-10-12 13:12:47.157 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:12:47.161 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:47.162 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:12:47.164 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:12:47.168 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 25.8422ms
2025-10-12 13:12:47.169 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:12:47.170 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:12:47.171 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:12:47.172 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:12:47.180 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:12:47.185 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:12:47.186 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:47.190 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 23.7668ms
2025-10-12 13:12:47.192 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:12:47.193 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:12:47.194 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:12:47'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:12:47.195 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:12:47.198 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:12:47.200 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 18.2588ms
2025-10-12 13:12:47.202 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:12:47'.
2025-10-12 13:12:47.204 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 88.36ms
2025-10-12 13:12:47.206 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 17.6477ms
2025-10-12 13:12:47.208 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:12:47.210 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:12:47.215 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:12:47.217 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 103.8827ms
2025-10-12 13:12:47.218 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:12:47.220 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 106.7721ms
2025-10-12 13:12:47.243 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:12:47.248 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:12:47.251 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 23.3995ms
2025-10-12 13:12:47.252 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:12:47.253 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:12:47.257 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:47.259 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 87.6051ms
2025-10-12 13:12:47.260 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:12:47'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:12:47.267 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:12:47'.
2025-10-12 13:12:47.269 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:12:47.270 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:12:47.276 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:12:47.280 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:12:47.283 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 9.5274ms
2025-10-12 13:12:47.285 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:12:47.287 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 34.9465ms
2025-10-12 13:12:50.641 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:12:50.642 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:12:50.648 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:50.650 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:12:50.652 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:50.654 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:12:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:12:50.657 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:50.659 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:12:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:12:50.661 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:12:50'.
2025-10-12 13:12:50.663 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:12:50.665 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:12:50'.
2025-10-12 13:12:50.667 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:12:50.669 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:12:50.670 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:12:50.672 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:12:50.677 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:12:50.688 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:12:50.689 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:12:50.691 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:12:50.692 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:12:50.696 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:12:50.699 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:12:50.701 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 20.5694ms
2025-10-12 13:12:50.702 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:12:50.703 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 27.6876ms
2025-10-12 13:12:50.704 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:12:50.705 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 21.5406ms
2025-10-12 13:12:50.706 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:12:50.706 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:12:50.710 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:50.712 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:12:50.716 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:50.718 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:12:50.722 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:50.724 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 82.2368ms
2025-10-12 13:12:50.725 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:12:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:12:50.727 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 76.6098ms
2025-10-12 13:12:50.728 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:12:50.729 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 87.7835ms
2025-10-12 13:12:50.731 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:12:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:12:50.738 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:12:50'.
2025-10-12 13:12:50.738 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:12:50.744 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:12:50.751 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:12:50'.
2025-10-12 13:12:50.754 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:12:50.757 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:50.761 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:12:50.762 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:12:50.764 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:12:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:12:50.765 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:12:50.770 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:12:50'.
2025-10-12 13:12:50.771 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:12:50.775 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:12:50.776 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:12:50.779 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:12:50.779 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:12:50.780 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:12:50.782 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:12:50.784 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 24.8875ms
2025-10-12 13:12:50.788 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:12:50.791 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 23.5184ms
2025-10-12 13:12:50.793 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:12:50.795 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 21.9856ms
2025-10-12 13:12:50.796 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:12:50.798 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 94.28ms
2025-10-12 13:12:50.800 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:12:50.801 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 99.0719ms
2025-10-12 13:12:50.804 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:12:50.807 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 100.7107ms
2025-10-12 13:12:50.814 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:12:50.819 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 29.6435ms
2025-10-12 13:12:50.821 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:12:50.821 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:12:50.824 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:50.825 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 86.9258ms
2025-10-12 13:12:50.826 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:12:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:12:50.832 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:12:50'.
2025-10-12 13:12:50.833 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:12:50.835 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:12:50.850 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:12:50.855 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:12:50.858 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 20.3869ms
2025-10-12 13:12:50.859 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:12:50.862 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 41.0113ms
2025-10-12 13:12:57.799 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:12:57.799 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:12:57.799 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:12:57.799 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:12:57.803 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:57.806 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 13:12:57.806 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 13:12:57.807 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:57.810 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:57.814 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:57.816 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 16.7693ms
2025-10-12 13:12:57.819 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:57.822 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:12:57.823 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:57.824 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 25.0427ms
2025-10-12 13:12:57.825 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 25.8905ms
2025-10-12 13:12:57.828 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:12:57.830 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 31.312ms
2025-10-12 13:12:57.831 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 24.8292ms
2025-10-12 13:12:57.834 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:12:57.834 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:57.836 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 29.4261ms
2025-10-12 13:12:57.847 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:57.859 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:57.860 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:12:57'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:12:57.867 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:12:57'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:12:57.868 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:12:57.870 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:12:57'.
2025-10-12 13:12:57.873 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:12:57'.
2025-10-12 13:12:57.874 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:12:57.876 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:12:57.878 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:12:57.882 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:12:57.884 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:12:57.894 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:12:57.895 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:12:57.897 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:12:57.899 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:12:57.902 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:12:57.905 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:12:57.906 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 19.8259ms
2025-10-12 13:12:57.908 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:12:57.908 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 18.1578ms
2025-10-12 13:12:57.909 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:12:57.910 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 29.283ms
2025-10-12 13:12:57.911 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:12:57.912 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:12:57.916 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:57.917 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:12:57.920 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:57.923 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:12:57.926 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:57.928 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 105.4439ms
2025-10-12 13:12:57.929 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:12:57'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:12:57.930 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 102.3213ms
2025-10-12 13:12:57.932 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:12:57'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:12:57.933 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 99.3777ms
2025-10-12 13:12:57.934 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:12:57.941 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:12:57'.
2025-10-12 13:12:57.947 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:12:57'.
2025-10-12 13:12:57.953 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:12:57.954 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:12:57.955 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:12:57.959 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:12:57.960 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:12:57.960 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:12:57.965 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:12:57.967 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:12:57.970 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:12:57.971 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:12:57.973 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 15.4967ms
2025-10-12 13:12:57.976 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:12:57.978 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 14.9238ms
2025-10-12 13:12:57.979 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 13:12:57.980 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:12:57.983 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 13.9018ms
2025-10-12 13:12:57.984 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:12:57.988 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:57.990 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 78.0857ms
2025-10-12 13:12:57.991 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:12:57.993 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 84.9577ms
2025-10-12 13:12:57.994 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 14.9984ms
2025-10-12 13:12:57.994 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 13:12:57.997 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:12:58.000 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 90.2019ms
2025-10-12 13:12:58.012 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:58.016 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:58.022 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 27.6126ms
2025-10-12 13:12:58.023 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:12:58'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:12:58.029 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:12:58'.
2025-10-12 13:12:58.031 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:12:58.033 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:12:58.052 +04:00 [INF] Executed DbCommand (16ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:12:58.056 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:12:58.059 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 23.3403ms
2025-10-12 13:12:58.062 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:12:58.065 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:12:58.069 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:12:58.070 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 73.3665ms
2025-10-12 13:12:58.071 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:12:58'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:12:58.088 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:12:58'.
2025-10-12 13:12:58.090 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:12:58.092 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:12:58.111 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:12:58.115 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:12:58.117 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 22.5902ms
2025-10-12 13:12:58.119 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:12:58.121 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 59.9228ms
2025-10-12 13:13:35.281 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:13:35.281 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:13:35.282 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:13:35.282 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:13:35.285 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:35.285 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 13:13:35.287 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 13:13:35.288 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:35.292 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:35.295 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:35.296 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 15.0714ms
2025-10-12 13:13:35.300 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:35.303 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:35.305 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:13:35.305 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 23.467ms
2025-10-12 13:13:35.306 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 23.7888ms
2025-10-12 13:13:35.308 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:13:35.311 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 25.3266ms
2025-10-12 13:13:35.312 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 29.8305ms
2025-10-12 13:13:35.313 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 26.0491ms
2025-10-12 13:13:35.314 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:13:35.317 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:35.328 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:35.346 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:35.347 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:13:35'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:13:35.349 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:13:35'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:13:35.350 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:13:35.353 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:13:35'.
2025-10-12 13:13:35.355 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:13:35'.
2025-10-12 13:13:35.357 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:13:35.359 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:13:35.360 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:13:35.365 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:13:35.367 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:13:35.377 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:13:35.377 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:13:35.381 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:13:35.381 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:13:35.385 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:13:35.388 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:13:35.389 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 19.6127ms
2025-10-12 13:13:35.390 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:13:35.391 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 18.7967ms
2025-10-12 13:13:35.393 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:13:35.393 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 29.532ms
2025-10-12 13:13:35.395 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:13:35.395 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:13:35.399 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:35.401 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:13:35.405 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:35.407 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:13:35.411 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:35.412 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 107.6569ms
2025-10-12 13:13:35.414 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:13:35'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:13:35.415 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 106.6702ms
2025-10-12 13:13:35.416 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:13:35'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:13:35.417 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 102.795ms
2025-10-12 13:13:35.418 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:13:35.425 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:13:35'.
2025-10-12 13:13:35.431 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:13:35'.
2025-10-12 13:13:35.437 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:13:35.438 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 13:13:35.439 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:13:35.443 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:35.447 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:13:35.449 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:13:35.449 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:13:35.450 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 11.4086ms
2025-10-12 13:13:35.451 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:13:35.452 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:13:35.455 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:13:35.459 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:13:35.466 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:13:35.468 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:35.469 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 24.0597ms
2025-10-12 13:13:35.473 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:13:35.476 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:13:35.477 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:13:35'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:13:35.478 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:13:35.480 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 23.4421ms
2025-10-12 13:13:35.482 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 18.6259ms
2025-10-12 13:13:35.484 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:13:35'.
2025-10-12 13:13:35.486 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 91.5778ms
2025-10-12 13:13:35.488 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:13:35.490 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:13:35.492 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:13:35.498 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 107.4104ms
2025-10-12 13:13:35.499 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 106.8349ms
2025-10-12 13:13:35.501 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:13:35.523 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:13:35.527 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:13:35.529 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 18.455ms
2025-10-12 13:13:35.531 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:13:35.531 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:13:35.533 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 81.0544ms
2025-10-12 13:13:35.537 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:35.543 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:13:35'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:13:35.546 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:13:35'.
2025-10-12 13:13:35.548 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:13:35.550 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:13:35.556 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:13:35.560 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:13:35.562 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 8.8815ms
2025-10-12 13:13:35.564 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:13:35.566 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 34.1813ms
2025-10-12 13:13:38.759 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:13:38.759 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:13:38.763 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:38.764 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:13:38.767 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:38.769 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:13:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:13:38.772 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:38.773 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:13:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:13:38.775 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:13:38'.
2025-10-12 13:13:38.776 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:13:38.779 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:13:38'.
2025-10-12 13:13:38.781 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:13:38.782 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:13:38.783 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:13:38.785 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:13:38.788 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:13:38.789 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:13:38.793 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:13:38.797 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:13:38.797 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:13:38.800 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:13:38.802 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:13:38.804 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 16.7685ms
2025-10-12 13:13:38.805 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:13:38.806 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 14.8186ms
2025-10-12 13:13:38.807 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:13:38.808 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 14.1141ms
2025-10-12 13:13:38.809 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:13:38.810 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:13:38.813 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:38.815 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:13:38.819 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:38.820 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:13:38.824 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:38.826 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 61.7381ms
2025-10-12 13:13:38.827 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:13:38.828 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 69.5427ms
2025-10-12 13:13:38.830 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:13:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:13:38.832 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 72.9579ms
2025-10-12 13:13:38.833 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:13:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:13:38.838 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:13:38.845 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:13:38.845 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:13:38'.
2025-10-12 13:13:38.852 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:13:38'.
2025-10-12 13:13:38.858 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:13:38.859 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:38.861 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:13:38.862 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:13:38.866 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:13:38.866 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:13:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:13:38.868 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:13:38.870 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:13:38.872 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 17.3235ms
2025-10-12 13:13:38.875 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:13:38'.
2025-10-12 13:13:38.880 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:13:38.881 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:13:38.881 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:13:38.883 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:13:38.887 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:13:38.890 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:13:38.891 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 85.9015ms
2025-10-12 13:13:38.892 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:13:38.894 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 16.9991ms
2025-10-12 13:13:38.896 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 16.8906ms
2025-10-12 13:13:38.904 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:13:38.904 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:13:38.906 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:13:38.908 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 100.6873ms
2025-10-12 13:13:38.911 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:13:38.913 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 104.3147ms
2025-10-12 13:13:38.920 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 17.8215ms
2025-10-12 13:13:38.921 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:13:38.925 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:13:38.928 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:38.930 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 84.5827ms
2025-10-12 13:13:38.931 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:13:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:13:38.938 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:13:38'.
2025-10-12 13:13:38.940 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:13:38.941 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:13:38.946 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:13:38.949 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:13:38.951 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 7.3418ms
2025-10-12 13:13:38.953 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:13:38.955 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 33.3238ms
2025-10-12 13:13:42.466 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:13:42.466 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:13:42.467 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:13:42.467 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:13:42.470 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:42.474 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 13:13:42.474 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 13:13:42.474 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:42.479 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:42.482 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:42.484 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 17.1073ms
2025-10-12 13:13:42.486 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:13:42.487 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:42.490 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:42.491 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 24.694ms
2025-10-12 13:13:42.493 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 25.7383ms
2025-10-12 13:13:42.494 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 26.8639ms
2025-10-12 13:13:42.495 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:13:42.502 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:42.503 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 29.5477ms
2025-10-12 13:13:42.504 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 30.4457ms
2025-10-12 13:13:42.505 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:13:42.521 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:42.523 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:13:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:13:42.533 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:42.534 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:13:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:13:42.536 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:13:42'.
2025-10-12 13:13:42.537 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:13:42.540 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:13:42'.
2025-10-12 13:13:42.541 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:13:42.542 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:13:42.543 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:13:42.545 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:13:42.549 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:13:42.549 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:13:42.552 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:13:42.555 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:13:42.557 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:13:42.559 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:13:42.562 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:13:42.564 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 16.8529ms
2025-10-12 13:13:42.566 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:13:42.566 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 14.5371ms
2025-10-12 13:13:42.566 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:13:42.567 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 14.1409ms
2025-10-12 13:13:42.568 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:13:42.569 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:13:42.573 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:42.574 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:13:42.578 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:42.579 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:13:42.583 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:42.584 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 78.857ms
2025-10-12 13:13:42.585 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:13:42.586 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 13:13:42.587 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 100.623ms
2025-10-12 13:13:42.588 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:13:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:13:42.590 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 94.8938ms
2025-10-12 13:13:42.591 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:13:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:13:42.596 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:13:42.600 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:42.606 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:13:42'.
2025-10-12 13:13:42.612 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:13:42'.
2025-10-12 13:13:42.616 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 29.7657ms
2025-10-12 13:13:42.616 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:13:42.617 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:13:42.619 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:13:42.619 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:13:42.628 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:13:42.629 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:13:42.632 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:42.634 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:13:42.635 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 20.4968ms
2025-10-12 13:13:42.639 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:13:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:13:42.640 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:13:42.642 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:13:42.643 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:13:42.644 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:13:42'.
2025-10-12 13:13:42.647 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:13:42.648 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 82.6677ms
2025-10-12 13:13:42.651 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:13:42.653 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:13:42.654 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 17.0989ms
2025-10-12 13:13:42.661 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 20.3281ms
2025-10-12 13:13:42.663 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:13:42.664 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:13:42.666 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:13:42.670 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 103.6564ms
2025-10-12 13:13:42.671 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:13:42.671 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 102.6308ms
2025-10-12 13:13:42.678 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:13:42.684 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 16.3775ms
2025-10-12 13:13:42.685 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:13:42.686 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:13:42.690 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:13:42.692 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 73.1776ms
2025-10-12 13:13:42.693 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:13:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:13:42.699 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:13:42'.
2025-10-12 13:13:42.701 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:13:42.703 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:13:42.708 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:13:42.712 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:13:42.714 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 8.1234ms
2025-10-12 13:13:42.716 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:13:42.718 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 32.325ms
2025-10-12 13:29:37.509 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:29:37.509 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:29:37.516 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:29:37.520 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:29:37.521 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 11.7201ms
2025-10-12 13:29:37.522 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 12.9521ms
2025-10-12 13:29:37.527 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:29:37.527 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:29:37.535 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:29:37.539 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:29:37.540 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:29:37'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:29:37.541 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:29:37'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:29:37.544 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:29:37'.
2025-10-12 13:29:37.546 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:29:37'.
2025-10-12 13:29:37.548 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:29:37.550 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:29:37.551 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:29:37.552 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:29:37.570 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 13:29:37.574 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:29:37.576 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 5.3852ms
2025-10-12 13:29:37.577 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:29:37.583 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:29:37.584 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:29:37.586 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:29:37.665 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:29:37.666 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:29:37.670 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:29:37.672 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:29:37.673 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:29:37.674 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 119.9401ms
2025-10-12 13:29:37.676 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:29:37.676 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 119.3551ms
2025-10-12 13:29:37.677 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:29:37.680 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:29:37.681 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:29:37.683 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:29:37.685 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:29:37.688 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:29:37.690 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 101.1058ms
2025-10-12 13:29:37.691 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 164.5396ms
2025-10-12 13:29:37.693 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:29:37'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:29:37.694 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 166.9031ms
2025-10-12 13:29:37.695 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:29:37'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:29:37.696 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:29:37.702 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:29:37'.
2025-10-12 13:29:37.707 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:29:37'.
2025-10-12 13:29:37.709 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 131.263ms
2025-10-12 13:29:37.710 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:29:37.711 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 13:29:37.711 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:29:37.716 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:29:37.719 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:29:37.720 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:29:37.722 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 11.5207ms
2025-10-12 13:29:37.723 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:29:37.723 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:29:37.727 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:29:37.731 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:29:37.734 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:29:37.737 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:29:37.738 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 16.786ms
2025-10-12 13:29:37.740 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:29:37'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:29:37.741 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 16.4825ms
2025-10-12 13:29:37.743 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:29:37.745 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:29:37'.
2025-10-12 13:29:37.747 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:29:37.748 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 72.1851ms
2025-10-12 13:29:37.749 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:29:37.750 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 73.2518ms
2025-10-12 13:29:37.755 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:29:37.774 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:29:37.778 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:29:37.779 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 17.6625ms
2025-10-12 13:29:37.781 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:29:37.783 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 59.2354ms
2025-10-12 13:30:08.299 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:30:08.299 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:30:08.302 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:30:08.304 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:30:08.304 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 5.7273ms
2025-10-12 13:30:08.305 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 6.149ms
2025-10-12 13:30:08.307 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:30:08.307 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:30:08.316 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:30:08.318 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:30:08.319 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:30:08'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:30:08.320 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:30:08'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:30:08.322 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:30:08'.
2025-10-12 13:30:08.324 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:30:08'.
2025-10-12 13:30:08.325 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:30:08.326 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:30:08.328 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:30:08.329 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:30:08.332 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:30:08.334 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:30:08.335 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:30:08.337 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:30:08.339 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.3588ms
2025-10-12 13:30:08.340 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.6345ms
2025-10-12 13:30:08.340 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:30:08.342 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:30:08.342 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:30:08.343 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:30:08.346 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:30:08.347 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 40.1244ms
2025-10-12 13:30:08.349 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:30:08.351 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 43.8421ms
2025-10-12 13:30:08.352 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:30:08'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:30:08.354 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 13:30:08.356 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:30:08'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:30:08.361 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:30:08'.
2025-10-12 13:30:08.364 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:30:08.366 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:30:08'.
2025-10-12 13:30:08.368 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:30:08.369 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 14.8622ms
2025-10-12 13:30:08.370 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:30:08.370 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:30:08.371 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:30:08.378 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:30:08.379 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:30:08.382 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:30:08.383 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:30:08.386 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:30:08.386 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:30:08.388 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:30:08.393 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:30:08.393 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:30:08.394 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 13.356ms
2025-10-12 13:30:08.396 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 11.7264ms
2025-10-12 13:30:08.400 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:30:08.400 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:30:08.401 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:30:08.403 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 12.9751ms
2025-10-12 13:30:08.404 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 63.8388ms
2025-10-12 13:30:08.406 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 63.7131ms
2025-10-12 13:30:08.407 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:30:08.416 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 45.8369ms
2025-10-12 13:30:08.424 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 13:30:08.427 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:30:08.428 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 4.091ms
2025-10-12 13:30:08.430 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:30:08.434 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:30:08.435 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:30:08'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:30:08.437 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:30:08'.
2025-10-12 13:30:08.438 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:30:08.439 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:30:08.443 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:30:08.446 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:30:08.447 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 5.844ms
2025-10-12 13:30:08.449 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:30:08.450 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 20.3891ms
2025-10-12 13:41:27.802 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:41:27.802 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:41:27.807 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:41:27.810 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:41:27.811 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 8.7279ms
2025-10-12 13:41:27.812 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 9.536ms
2025-10-12 13:41:27.816 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:41:27.816 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:41:27.823 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:41:27.826 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:41:27.828 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:41:27'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:41:27.829 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:41:27'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:41:27.831 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:41:27'.
2025-10-12 13:41:27.833 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:41:27'.
2025-10-12 13:41:27.835 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:41:27.836 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:41:27.837 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:41:27.838 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:41:27.849 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:41:27.849 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:41:27.853 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:41:27.857 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:41:27.859 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 16.2522ms
2025-10-12 13:41:27.860 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 19.8358ms
2025-10-12 13:41:27.862 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:41:27.864 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:41:27.865 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 48.9583ms
2025-10-12 13:41:27.866 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 50.0579ms
2025-10-12 13:41:27.883 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:41:27.883 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:41:27.885 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:41:27.888 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:41:27.889 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:41:27'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:41:27.890 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:41:27'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:41:27.892 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:41:27'.
2025-10-12 13:41:27.894 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:41:27'.
2025-10-12 13:41:27.895 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:41:27.896 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:41:27.897 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:41:27.898 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:41:27.901 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:41:27.903 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 13:41:27.904 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:41:27.905 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:41:27.907 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:41:27.909 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:41:27.911 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 11.2979ms
2025-10-12 13:41:27.912 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 8.9609ms
2025-10-12 13:41:27.914 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:41:27.914 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 11.781ms
2025-10-12 13:41:27.917 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:41:27.922 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:41:27.924 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:41:27.925 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:41:27.926 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 43.0886ms
2025-10-12 13:41:27.927 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 43.6257ms
2025-10-12 13:41:27.928 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:41:27.949 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:41:27.953 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:41:27.955 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 17.504ms
2025-10-12 13:41:27.957 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:41:27.958 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 44.7628ms
2025-10-12 13:41:27.986 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 13:41:27.990 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:41:27.990 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 4.6608ms
2025-10-12 13:41:27.992 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:41:27.998 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:41:27.999 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:41:27'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:41:28.002 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:41:27'.
2025-10-12 13:41:28.004 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:41:28.005 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:41:28.018 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:41:28.022 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:41:28.023 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 15.5907ms
2025-10-12 13:41:28.025 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:41:28.027 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 34.8661ms
2025-10-12 13:43:46.953 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:43:46.953 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:43:46.958 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:43:46.962 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:43:46.964 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 10.9084ms
2025-10-12 13:43:46.965 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 11.1487ms
2025-10-12 13:43:46.977 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:43:46.977 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:43:46.981 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:43:46.985 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:43:46.986 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:43:46'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:43:46.987 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:43:46'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:43:46.989 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:43:46'.
2025-10-12 13:43:46.991 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:43:46'.
2025-10-12 13:43:46.992 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:43:46.994 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:43:46.995 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:43:46.997 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:43:47.009 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:43:47.009 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:43:47.013 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:43:47.017 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:43:47.018 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 17.6916ms
2025-10-12 13:43:47.020 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 21.952ms
2025-10-12 13:43:47.022 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:43:47.024 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:43:47.026 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 48.7506ms
2025-10-12 13:43:47.028 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 50.405ms
2025-10-12 13:43:48.612 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:43:48.612 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:43:48.618 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:43:48.622 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:43:48.622 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:43:48'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:43:48.623 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:43:48'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:43:48.625 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:43:48'.
2025-10-12 13:43:48.627 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:43:48'.
2025-10-12 13:43:48.629 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:43:48.630 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:43:48.631 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:43:48.633 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:43:48.637 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:43:48.640 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:43:48.641 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:43:48.643 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:43:48.645 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.6929ms
2025-10-12 13:43:48.646 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.6623ms
2025-10-12 13:43:48.649 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:43:48.650 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:43:48.651 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 38.9741ms
2025-10-12 13:43:48.653 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 40.6969ms
2025-10-12 13:44:31.917 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:44:31.917 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:44:31.921 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:44:31.924 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:44:31.925 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 8.2972ms
2025-10-12 13:44:31.927 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 9.1845ms
2025-10-12 13:44:31.930 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:44:31.930 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:44:31.940 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:44:31.944 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:44:31.946 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:44:31'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:44:31.947 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:44:31'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:44:31.949 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:44:31'.
2025-10-12 13:44:31.951 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:44:31'.
2025-10-12 13:44:31.953 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:44:31.954 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:44:31.956 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:44:31.957 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:44:31.965 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:44:31.968 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:44:31.969 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:44:31.972 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:44:31.974 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 14.1451ms
2025-10-12 13:44:31.975 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.3443ms
2025-10-12 13:44:31.977 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:44:31.979 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:44:31.980 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 50.2274ms
2025-10-12 13:44:31.981 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 51.1901ms
2025-10-12 13:44:32.009 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:44:32.009 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:44:32.013 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:44:32.017 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:44:32.019 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:44:32'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:44:32.020 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:44:32'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:44:32.023 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:44:32'.
2025-10-12 13:44:32.025 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:44:32'.
2025-10-12 13:44:32.027 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:44:32.029 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:44:32.030 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:44:32.031 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:44:32.036 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 13:44:32.036 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:44:32.038 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:44:32.040 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:44:32.043 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:44:32.045 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:44:32.046 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 10.4789ms
2025-10-12 13:44:32.048 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:44:32.048 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 13.9203ms
2025-10-12 13:44:32.050 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 13.1766ms
2025-10-12 13:44:32.057 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:44:32.059 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:44:32.060 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:44:32.061 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:44:32.063 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 53.9054ms
2025-10-12 13:44:32.064 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 54.8698ms
2025-10-12 13:44:32.066 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:44:32.090 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:44:32.095 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:44:32.096 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 20.0877ms
2025-10-12 13:44:32.099 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:44:32.101 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 52.858ms
2025-10-12 13:44:32.148 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 13:44:32.154 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:44:32.156 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 7.793ms
2025-10-12 13:44:32.158 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:44:32.163 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:44:32.164 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:44:32'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:44:32.167 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:44:32'.
2025-10-12 13:44:32.169 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:44:32.170 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:44:32.185 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:44:32.192 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:44:32.196 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 23.4392ms
2025-10-12 13:44:32.199 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:44:32.201 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 42.9198ms
2025-10-12 13:44:41.480 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:44:41.482 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:44:41.485 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:44:41.488 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:44:41.490 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 10.0761ms
2025-10-12 13:44:41.491 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:44:41.491 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 9.6467ms
2025-10-12 13:44:41.492 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:44:41.498 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:44:41.505 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:44:41.506 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:44:41'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:44:41.507 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:44:41'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:44:41.509 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:44:41'.
2025-10-12 13:44:41.512 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:44:41'.
2025-10-12 13:44:41.513 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:44:41.514 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:44:41.516 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:44:41.517 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:44:41.524 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:44:41.525 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:44:41.528 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:44:41.530 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:44:41.532 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.787ms
2025-10-12 13:44:41.533 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.1211ms
2025-10-12 13:44:41.535 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:44:41.536 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:44:41.537 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 45.2185ms
2025-10-12 13:44:41.539 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 47.4438ms
2025-10-12 13:44:41.566 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:44:41.566 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:44:41.570 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:44:41.574 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:44:41.575 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:44:41'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:44:41.576 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:44:41'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:44:41.578 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:44:41'.
2025-10-12 13:44:41.580 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:44:41'.
2025-10-12 13:44:41.581 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:44:41.582 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:44:41.584 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:44:41.585 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:44:41.589 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:44:41.589 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 13:44:41.591 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:44:41.592 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:44:41.595 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:44:41.598 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:44:41.599 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.3843ms
2025-10-12 13:44:41.600 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 10.9599ms
2025-10-12 13:44:41.602 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:44:41.602 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.2791ms
2025-10-12 13:44:41.603 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:44:41.611 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:44:41.612 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:44:41.613 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 47.7037ms
2025-10-12 13:44:41.614 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:44:41.615 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 49.6485ms
2025-10-12 13:44:41.620 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:44:41.635 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:44:41.639 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:44:41.641 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 14.6309ms
2025-10-12 13:44:41.643 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:44:41.644 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 42.0725ms
2025-10-12 13:44:41.705 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 13:44:41.710 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:44:41.711 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 6.0677ms
2025-10-12 13:44:41.713 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:44:41.718 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:44:41.720 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:44:41'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:44:41.722 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:44:41'.
2025-10-12 13:44:41.724 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:44:41.726 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:44:41.739 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:44:41.742 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:44:41.745 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 16.2035ms
2025-10-12 13:44:41.746 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:44:41.748 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 35.2896ms
2025-10-12 13:45:27.489 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:45:27.489 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:45:27.494 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:45:27.497 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:45:27.499 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 9.9211ms
2025-10-12 13:45:27.500 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 11.0933ms
2025-10-12 13:45:27.506 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:45:27.508 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:45:27.513 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:45:27.518 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:45:27.519 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:45:27'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:45:27.520 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:45:27'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:45:27.523 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:45:27'.
2025-10-12 13:45:27.525 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:45:27'.
2025-10-12 13:45:27.527 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:45:27.529 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:45:27.530 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:45:27.532 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:45:27.537 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:45:27.539 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:45:27.541 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:45:27.545 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:45:27.546 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 11.7934ms
2025-10-12 13:45:27.548 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 11.1699ms
2025-10-12 13:45:27.550 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:45:27.552 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:45:27.553 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 47.3262ms
2025-10-12 13:45:27.555 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 46.9808ms
2025-10-12 13:45:28.390 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:45:28.390 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:45:28.394 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:45:28.397 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:45:28.398 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:45:28'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:45:28.399 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:45:28'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:45:28.402 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:45:28'.
2025-10-12 13:45:28.403 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:45:28'.
2025-10-12 13:45:28.405 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:45:28.406 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:45:28.407 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:45:28.408 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:45:28.412 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:45:28.414 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:45:28.415 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:45:28.418 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:45:28.419 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.0213ms
2025-10-12 13:45:28.420 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.8287ms
2025-10-12 13:45:28.422 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:45:28.423 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:45:28.425 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 35.2107ms
2025-10-12 13:45:28.426 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 36.3394ms
2025-10-12 13:45:44.039 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:45:44.039 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:45:44.042 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:45:44.045 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:45:44.046 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 6.9475ms
2025-10-12 13:45:44.047 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 7.7994ms
2025-10-12 13:45:44.047 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:45:44.047 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:45:44.056 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:45:44.059 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:45:44.060 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:45:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:45:44.061 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:45:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:45:44.062 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:45:44'.
2025-10-12 13:45:44.064 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:45:44'.
2025-10-12 13:45:44.065 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:45:44.067 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:45:44.068 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:45:44.069 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:45:44.077 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:45:44.077 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:45:44.079 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:45:44.081 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:45:44.082 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 11.6005ms
2025-10-12 13:45:44.084 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:45:44.084 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 11.7056ms
2025-10-12 13:45:44.085 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:45:44.086 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:45:44.086 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 13:45:44.089 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:45:44.090 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:45:44.093 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:45:44.094 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 47.0831ms
2025-10-12 13:45:44.097 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:45:44.100 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:45:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:45:44.100 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 52.4591ms
2025-10-12 13:45:44.101 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:45:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:45:44.105 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 18.8243ms
2025-10-12 13:45:44.107 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:45:44.107 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:45:44'.
2025-10-12 13:45:44.112 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:45:44'.
2025-10-12 13:45:44.118 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:45:44.120 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:45:44.121 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:45:44.121 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:45:44.123 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:45:44.124 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:45:44.125 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:45:44.129 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:45:44.130 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:45:44.134 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:45:44.136 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:45:44.137 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.3005ms
2025-10-12 13:45:44.139 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.7014ms
2025-10-12 13:45:44.141 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:45:44.142 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:45:44.143 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 59.3776ms
2025-10-12 13:45:44.144 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 59.0311ms
2025-10-12 13:45:44.146 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:45:44.155 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:45:44.157 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 25.9238ms
2025-10-12 13:45:44.158 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:45:44.160 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 53.3605ms
2025-10-12 13:45:44.176 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 13:45:44.179 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:45:44.180 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 3.811ms
2025-10-12 13:45:44.181 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:45:44.185 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:45:44.187 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:45:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:45:44.189 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:45:44'.
2025-10-12 13:45:44.191 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:45:44.192 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:45:44.204 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:45:44.207 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:45:44.209 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 14.8867ms
2025-10-12 13:45:44.211 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:45:44.212 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 31.3927ms
2025-10-12 13:46:14.750 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:46:14.754 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:46:14.756 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:46:14.761 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:46:14.762 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 11.3294ms
2025-10-12 13:46:14.763 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 9.2919ms
2025-10-12 13:46:14.765 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:46:14.768 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:46:14.772 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:46:14.777 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:46:14.783 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:46:14'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:46:14.783 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:46:14'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:46:14.786 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:46:14'.
2025-10-12 13:46:14.801 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:46:14'.
2025-10-12 13:46:14.803 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:46:14.803 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:46:14.805 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:46:14.808 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:46:14.811 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:46:14.815 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:46:14.815 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:46:14.820 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:46:14.821 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.2505ms
2025-10-12 13:46:14.824 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.4688ms
2025-10-12 13:46:14.826 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:46:14.828 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:46:14.830 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 62.1693ms
2025-10-12 13:46:14.832 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 66.3686ms
2025-10-12 13:46:15.986 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:46:15.986 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:46:15.990 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:46:15.992 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:46:15.994 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:46:15'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:46:15.995 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:46:15'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:46:15.998 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:46:15'.
2025-10-12 13:46:16.000 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:46:15'.
2025-10-12 13:46:16.003 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:46:16.005 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:46:16.006 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:46:16.008 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:46:16.012 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:46:16.013 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:46:16.015 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:46:16.018 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:46:16.019 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.1428ms
2025-10-12 13:46:16.021 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.8178ms
2025-10-12 13:46:16.022 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:46:16.024 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:46:16.026 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 39.241ms
2025-10-12 13:46:16.027 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 40.5504ms
2025-10-12 13:47:11.778 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:47:11.778 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:47:11.783 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:47:11.788 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:47:11.789 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 10.6957ms
2025-10-12 13:47:11.790 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 11.602ms
2025-10-12 13:47:11.792 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:47:11.792 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:47:11.802 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:47:11.805 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:47:11.807 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:47:11'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:47:11.808 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:47:11'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:47:11.810 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:47:11'.
2025-10-12 13:47:11.812 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:47:11'.
2025-10-12 13:47:11.813 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:47:11.815 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:47:11.816 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:47:11.817 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:47:11.829 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:47:11.829 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:47:11.833 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:47:11.837 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:47:11.838 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 17.9408ms
2025-10-12 13:47:11.840 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 17.0681ms
2025-10-12 13:47:11.842 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:47:11.843 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:47:11.845 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 52.3882ms
2025-10-12 13:47:11.846 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 53.7576ms
2025-10-12 13:47:11.875 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:47:11.876 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:47:11.880 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:47:11.885 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:47:11.887 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:47:11'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:47:11.888 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:47:11'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:47:11.890 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:47:11'.
2025-10-12 13:47:11.893 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:47:11'.
2025-10-12 13:47:11.894 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:47:11.896 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:47:11.898 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:47:11.900 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:47:11.904 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:47:11.906 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:47:11.908 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:47:11.911 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:47:11.912 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.7614ms
2025-10-12 13:47:11.914 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.9571ms
2025-10-12 13:47:11.916 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:47:11.918 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:47:11.919 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 43.8577ms
2025-10-12 13:47:11.921 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 44.655ms
2025-10-12 13:47:11.932 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 13:47:11.936 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:47:11.937 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 4.833ms
2025-10-12 13:47:11.940 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 13:47:11.945 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:47:11.946 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:47:11.952 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 13:47:11.967 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 13:47:11.971 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:47:11.974 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 18.9574ms
2025-10-12 13:47:11.976 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 13:47:11.978 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 37.4357ms
2025-10-12 13:47:12.113 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 13:47:12.118 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:47:12.119 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 5.8123ms
2025-10-12 13:47:12.121 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 13:47:12.127 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:47:12.128 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:47:12'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:47:12.131 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:47:12'.
2025-10-12 13:47:12.132 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:47:12.134 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 13:47:12.148 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 13:47:12.151 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 13:47:12.152 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 16.2361ms
2025-10-12 13:47:12.154 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 13:47:12.156 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 34.8894ms
2025-10-12 13:47:34.896 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:47:34.896 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:47:34.900 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:47:34.905 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:47:34.906 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 9.9292ms
2025-10-12 13:47:34.907 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 10.9672ms
2025-10-12 13:47:34.911 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:47:34.911 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:47:34.919 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:47:34.922 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:47:34.924 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:47:34'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:47:34.924 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:47:34'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:47:34.927 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:47:34'.
2025-10-12 13:47:34.929 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:47:34'.
2025-10-12 13:47:34.931 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:47:34.932 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:47:34.934 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:47:34.935 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:47:34.939 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:47:34.942 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:47:34.943 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:47:34.945 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:47:34.946 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.9485ms
2025-10-12 13:47:34.948 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 7.8685ms
2025-10-12 13:47:34.949 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:47:34.950 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:47:34.952 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 41.0513ms
2025-10-12 13:47:34.953 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 42.3609ms
2025-10-12 13:47:36.214 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:47:36.214 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:47:36.217 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:47:36.220 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:47:36.222 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:47:36'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:47:36.223 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:47:36'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:47:36.225 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:47:36'.
2025-10-12 13:47:36.227 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:47:36'.
2025-10-12 13:47:36.229 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:47:36.230 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:47:36.232 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:47:36.233 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:47:36.237 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:47:36.239 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:47:36.240 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:47:36.243 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:47:36.245 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.4694ms
2025-10-12 13:47:36.246 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.3595ms
2025-10-12 13:47:36.248 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:47:36.249 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:47:36.251 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 36.6931ms
2025-10-12 13:47:36.252 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 37.778ms
2025-10-12 13:48:29.274 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:48:29.275 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:48:29.277 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:48:29.281 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:48:29.282 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 7.2782ms
2025-10-12 13:48:29.283 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 7.2357ms
2025-10-12 13:48:29.285 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:48:29.286 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:48:29.295 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:48:29.298 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:48:29.300 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:48:29'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:48:29.301 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:48:29'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:48:29.303 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:48:29'.
2025-10-12 13:48:29.305 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:48:29'.
2025-10-12 13:48:29.307 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:48:29.308 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:48:29.309 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:48:29.312 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:48:29.321 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:48:29.321 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:48:29.327 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:48:29.330 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:48:29.331 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 14.3468ms
2025-10-12 13:48:29.333 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 18.9801ms
2025-10-12 13:48:29.335 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:48:29.338 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:48:29.339 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 53.2829ms
2025-10-12 13:48:29.340 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 54.7072ms
2025-10-12 13:48:30.092 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:48:30.092 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:48:30.095 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:48:30.099 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:48:30.100 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:48:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:48:30.101 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:48:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:48:30.103 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:48:30'.
2025-10-12 13:48:30.105 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:48:30'.
2025-10-12 13:48:30.107 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:48:30.108 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:48:30.109 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:48:30.110 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:48:30.114 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:48:30.115 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:48:30.116 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:48:30.119 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:48:30.121 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.5678ms
2025-10-12 13:48:30.122 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 7.5483ms
2025-10-12 13:48:30.123 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:48:30.125 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:48:30.126 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 33.8756ms
2025-10-12 13:48:30.127 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 34.9332ms
2025-10-12 13:48:49.121 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:48:49.124 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:48:49.125 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:48:49.128 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:48:49.130 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 8.3371ms
2025-10-12 13:48:49.131 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 7.0739ms
2025-10-12 13:48:49.133 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:48:49.134 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:48:49.144 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:48:49.147 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:48:49.148 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:48:49'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:48:49.149 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:48:49'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:48:49.152 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:48:49'.
2025-10-12 13:48:49.154 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:48:49'.
2025-10-12 13:48:49.155 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:48:49.157 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:48:49.158 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:48:49.160 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:48:49.165 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:48:49.168 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:48:49.169 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:48:49.172 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:48:49.173 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.8531ms
2025-10-12 13:48:49.175 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 10.221ms
2025-10-12 13:48:49.176 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:48:49.178 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:48:49.180 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 46.6849ms
2025-10-12 13:48:49.181 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 47.6646ms
2025-10-12 13:48:50.346 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:48:50.346 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:48:50.350 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:48:50.353 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:48:50.354 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:48:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:48:50.356 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:48:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:48:50.357 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:48:50'.
2025-10-12 13:48:50.359 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:48:50'.
2025-10-12 13:48:50.361 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:48:50.362 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:48:50.363 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:48:50.365 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:48:50.369 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:48:50.371 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:48:50.373 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:48:50.376 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:48:50.377 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.0856ms
2025-10-12 13:48:50.379 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.4659ms
2025-10-12 13:48:50.381 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:48:50.383 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:48:50.384 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 38.431ms
2025-10-12 13:48:50.386 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 40.1723ms
2025-10-12 13:49:15.786 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:49:15.786 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:49:15.790 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:49:15.793 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:49:15.794 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 8.5507ms
2025-10-12 13:49:15.795 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 8.8502ms
2025-10-12 13:49:15.796 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:49:15.797 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:49:15.803 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:49:15.805 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:49:15.806 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:49:15'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:49:15.807 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:49:15'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:49:15.808 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:49:15'.
2025-10-12 13:49:15.810 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:49:15'.
2025-10-12 13:49:15.811 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:49:15.813 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:49:15.814 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:49:15.815 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:49:15.822 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:49:15.822 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:49:15.824 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:49:15.827 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:49:15.828 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 11.2805ms
2025-10-12 13:49:15.830 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 10.8135ms
2025-10-12 13:49:15.831 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:49:15.832 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:49:15.834 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 37.4678ms
2025-10-12 13:49:15.835 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 38.2243ms
2025-10-12 13:49:31.134 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:49:31.134 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:49:31.138 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:49:31.143 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:49:31.144 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 10.6924ms
2025-10-12 13:49:31.146 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 11.4084ms
2025-10-12 13:49:31.147 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:49:31.148 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:49:31.158 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:49:31.162 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:49:31.163 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:49:31'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:49:31.165 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:49:31'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:49:31.167 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:49:31'.
2025-10-12 13:49:31.169 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:49:31'.
2025-10-12 13:49:31.170 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:49:31.172 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:49:31.173 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:49:31.175 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:49:31.179 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:49:31.181 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:49:31.182 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:49:31.186 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:49:31.187 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.3357ms
2025-10-12 13:49:31.189 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.7195ms
2025-10-12 13:49:31.191 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:49:31.193 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:49:31.194 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 47.8662ms
2025-10-12 13:49:31.197 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 47.8977ms
2025-10-12 13:49:40.598 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:49:40.600 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:49:40.602 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:49:40.607 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:49:40.607 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 9.2146ms
2025-10-12 13:49:40.609 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 9.2502ms
2025-10-12 13:49:40.611 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:49:40.612 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:49:40.620 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:49:40.623 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:49:40.624 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:49:40'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:49:40.625 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:49:40'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:49:40.627 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:49:40'.
2025-10-12 13:49:40.629 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:49:40'.
2025-10-12 13:49:40.630 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:49:40.631 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:49:40.633 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:49:40.634 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:49:40.639 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:49:40.639 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:49:40.641 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:49:40.645 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:49:40.647 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.245ms
2025-10-12 13:49:40.648 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.9655ms
2025-10-12 13:49:40.650 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:49:40.652 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:49:40.653 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 42.4424ms
2025-10-12 13:49:40.655 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 43.3411ms
2025-10-12 13:49:49.363 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:49:49.363 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:49:49.367 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:49:49.371 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:49:49.372 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 9.8146ms
2025-10-12 13:49:49.374 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 10.5861ms
2025-10-12 13:49:49.377 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:49:49.377 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:49:49.386 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:49:49.389 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:49:49.391 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:49:49'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:49:49.391 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:49:49'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:49:49.393 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:49:49'.
2025-10-12 13:49:49.396 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:49:49'.
2025-10-12 13:49:49.398 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:49:49.401 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:49:49.403 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:49:49.405 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:49:49.410 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:49:49.412 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:49:49.413 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:49:49.416 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:49:49.418 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.6137ms
2025-10-12 13:49:49.419 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.6594ms
2025-10-12 13:49:49.421 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:49:49.423 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:49:49.424 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 47.6149ms
2025-10-12 13:49:49.426 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 48.8303ms
2025-10-12 13:49:54.915 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:49:54.915 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:49:54.919 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:49:54.921 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:49:54.922 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 7.5013ms
2025-10-12 13:49:54.923 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 7.8813ms
2025-10-12 13:49:54.924 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:49:54.926 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:49:54.934 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:49:54.937 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:49:54.938 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:49:54'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:49:54.939 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:49:54'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:49:54.941 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:49:54'.
2025-10-12 13:49:54.943 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:49:54'.
2025-10-12 13:49:54.945 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:49:54.946 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:49:54.947 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:49:54.948 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:49:54.952 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:49:54.953 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:49:54.955 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:49:54.957 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:49:54.959 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.398ms
2025-10-12 13:49:54.961 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.201ms
2025-10-12 13:49:54.962 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:49:54.964 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:49:54.966 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 41.7698ms
2025-10-12 13:49:54.967 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 41.529ms
2025-10-12 13:50:09.583 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:50:09.583 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:50:09.587 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:50:09.592 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:50:09.593 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 9.8624ms
2025-10-12 13:50:09.593 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 9.9709ms
2025-10-12 13:50:09.595 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:50:09.598 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:50:09.604 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:50:09.607 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:50:09.608 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:50:09'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:50:09.609 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:50:09'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:50:09.610 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:50:09'.
2025-10-12 13:50:09.612 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:50:09'.
2025-10-12 13:50:09.613 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:50:09.614 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:50:09.616 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:50:09.617 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:50:09.625 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:50:09.626 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:50:09.629 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:50:09.632 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:50:09.633 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.9045ms
2025-10-12 13:50:09.634 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.0737ms
2025-10-12 13:50:09.636 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:50:09.638 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:50:09.639 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 44.0693ms
2025-10-12 13:50:09.640 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 42.0743ms
2025-10-12 13:50:20.655 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:50:20.656 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:50:20.661 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:50:20.665 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:50:20.666 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 10.5333ms
2025-10-12 13:50:20.667 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 11.0531ms
2025-10-12 13:50:20.669 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:50:20.669 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:50:20.678 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:50:20.681 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:50:20.683 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:50:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:50:20.683 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:50:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:50:20.685 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:50:20'.
2025-10-12 13:50:20.687 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:50:20'.
2025-10-12 13:50:20.689 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:50:20.691 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:50:20.692 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:50:20.693 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:50:20.698 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:50:20.698 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:50:20.700 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:50:20.703 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:50:20.704 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.5188ms
2025-10-12 13:50:20.706 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.294ms
2025-10-12 13:50:20.707 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:50:20.709 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:50:20.710 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 40.9699ms
2025-10-12 13:50:20.711 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 41.7722ms
2025-10-12 13:50:29.138 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:50:29.141 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:50:29.144 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:50:29.148 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:50:29.149 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 10.4917ms
2025-10-12 13:50:29.150 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 9.1983ms
2025-10-12 13:50:29.152 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:50:29.153 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:50:29.160 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:50:29.163 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:50:29.164 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:50:29'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:50:29.165 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:50:29'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:50:29.168 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:50:29'.
2025-10-12 13:50:29.170 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:50:29'.
2025-10-12 13:50:29.171 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:50:29.172 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:50:29.174 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:50:29.175 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:50:29.179 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:50:29.182 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:50:29.182 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:50:29.185 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:50:29.186 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.7383ms
2025-10-12 13:50:29.188 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.5112ms
2025-10-12 13:50:29.190 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:50:29.192 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:50:29.193 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 40.7516ms
2025-10-12 13:50:29.195 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 41.6235ms
2025-10-12 13:50:35.611 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 13:50:35.612 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 13:50:35.615 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:50:35.619 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:50:35.620 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 9.1074ms
2025-10-12 13:50:35.621 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 9.253ms
2025-10-12 13:50:35.624 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 13:50:35.625 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 13:50:35.632 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:50:35.635 +04:00 [INF] CORS policy execution successful.
2025-10-12 13:50:35.637 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:50:35'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:50:35.638 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:50:35'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 13:50:35.640 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:50:35'.
2025-10-12 13:50:35.642 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 9:50:35'.
2025-10-12 13:50:35.644 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:50:35.645 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:50:35.647 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 13:50:35.648 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 13:50:35.653 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 13:50:35.655 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 13:50:35.657 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:50:35.660 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 13:50:35.661 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.6997ms
2025-10-12 13:50:35.663 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 10.188ms
2025-10-12 13:50:35.666 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 13:50:35.667 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 13:50:35.669 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 44.6871ms
2025-10-12 13:50:35.670 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 45.6327ms
2025-10-12 14:03:43.633 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 14:03:43.633 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 14:03:43.638 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:03:43.642 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:03:43.643 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 9.7084ms
2025-10-12 14:03:43.644 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 11.2881ms
2025-10-12 14:03:43.648 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:03:43.648 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:03:43.657 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:03:43.660 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:03:43.661 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:03:43'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:03:43.662 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:03:43'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:03:43.664 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:03:43'.
2025-10-12 14:03:43.666 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:03:43'.
2025-10-12 14:03:43.668 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:03:43.669 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:03:43.671 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:03:43.672 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:03:43.736 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 14:03:43.740 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:03:43.741 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 4.9158ms
2025-10-12 14:03:43.743 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 14:03:43.748 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:03:43.749 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:03:43.749 +04:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:03:43.752 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:03:43.753 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 14:03:43.756 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:03:43.758 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 81.0234ms
2025-10-12 14:03:43.759 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:03:43.759 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 14:03:43.761 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 86.7031ms
2025-10-12 14:03:43.761 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:03:43.762 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:03:43.766 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:03:43.770 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:03:43.774 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:03:43.775 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 126.5105ms
2025-10-12 14:03:43.776 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:03:43'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:03:43.777 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 129.3662ms
2025-10-12 14:03:43.779 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:03:43'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:03:43.781 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 14:03:43.784 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:03:43'.
2025-10-12 14:03:43.791 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:03:43'.
2025-10-12 14:03:43.794 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:03:43.796 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:03:43.797 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:03:43.799 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 30.5235ms
2025-10-12 14:03:43.800 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:03:43.802 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:03:43.804 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 14:03:43.808 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:03:43.810 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:03:43.810 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 66.8757ms
2025-10-12 14:03:43.813 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:03:43.816 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:03:43.821 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 15.3361ms
2025-10-12 14:03:43.823 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 14.4848ms
2025-10-12 14:03:43.825 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:03:43.827 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:03:43.828 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 69.3033ms
2025-10-12 14:03:43.829 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 67.7697ms
2025-10-12 14:03:43.835 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 14:03:43.842 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:03:43.843 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 8.935ms
2025-10-12 14:03:43.846 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 14:03:43.851 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:03:43.853 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:03:43'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:03:43.855 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:03:43'.
2025-10-12 14:03:43.857 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 14:03:43.858 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 14:03:43.872 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 14:03:43.877 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 14:03:43.880 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 18.6851ms
2025-10-12 14:03:43.882 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 14:03:43.883 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 37.5907ms
2025-10-12 14:03:59.362 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 14:03:59.362 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 14:03:59.368 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:03:59.372 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:03:59.374 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 12.082ms
2025-10-12 14:03:59.375 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 13.0332ms
2025-10-12 14:03:59.375 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:03:59.376 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:03:59.385 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:03:59.388 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:03:59.390 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:03:59'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:03:59.391 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:03:59'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:03:59.393 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:03:59'.
2025-10-12 14:03:59.395 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:03:59'.
2025-10-12 14:03:59.396 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:03:59.397 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:03:59.398 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:03:59.400 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:03:59.404 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:03:59.406 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:03:59.407 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:03:59.411 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:03:59.412 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.2911ms
2025-10-12 14:03:59.414 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.0619ms
2025-10-12 14:03:59.415 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:03:59.417 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:03:59.418 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 42.3282ms
2025-10-12 14:03:59.419 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 43.1703ms
2025-10-12 14:04:02.132 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:04:02.132 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:04:02.138 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:04:02.142 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:04:02.143 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:04:02'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:04:02.144 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:04:02'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:04:02.146 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:04:02'.
2025-10-12 14:04:02.148 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:04:02'.
2025-10-12 14:04:02.149 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:04:02.151 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:04:02.152 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:04:02.153 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:04:02.156 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:04:02.159 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:04:02.160 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:04:02.163 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:04:02.164 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.9692ms
2025-10-12 14:04:02.166 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.5975ms
2025-10-12 14:04:02.167 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:04:02.169 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:04:02.170 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 37.9376ms
2025-10-12 14:04:02.171 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 39.1445ms
2025-10-12 14:04:59.922 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 14:04:59.923 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 14:04:59.926 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:04:59.930 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:04:59.931 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 8.3428ms
2025-10-12 14:04:59.932 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 9.8302ms
2025-10-12 14:04:59.935 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:04:59.935 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:04:59.944 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:04:59.948 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:04:59.950 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:04:59'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:04:59.951 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:04:59'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:04:59.953 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:04:59'.
2025-10-12 14:04:59.954 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:04:59'.
2025-10-12 14:04:59.956 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:04:59.958 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:04:59.959 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:04:59.961 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:04:59.971 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:04:59.972 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:04:59.974 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:04:59.977 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:04:59.979 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 15.7149ms
2025-10-12 14:04:59.981 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 15.4187ms
2025-10-12 14:04:59.983 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:04:59.985 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:04:59.986 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 51.4381ms
2025-10-12 14:04:59.988 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 52.5828ms
2025-10-12 14:05:05.067 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 14:05:05.067 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 14:05:05.073 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:05.076 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:05.077 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 9.868ms
2025-10-12 14:05:05.078 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 10.7328ms
2025-10-12 14:05:05.082 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:05:05.082 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:05:05.089 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:05.092 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:05.093 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:05:05.094 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:05:05.096 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:05'.
2025-10-12 14:05:05.099 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:05'.
2025-10-12 14:05:05.101 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:05:05.102 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:05:05.103 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:05:05.104 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:05:05.110 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:05:05.110 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:05:05.113 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:05:05.116 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:05:05.118 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.7701ms
2025-10-12 14:05:05.119 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 10.4991ms
2025-10-12 14:05:05.122 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:05:05.124 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:05:05.126 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 43.5926ms
2025-10-12 14:05:05.128 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 45.1851ms
2025-10-12 14:05:10.034 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:05:10.034 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:05:10.038 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:10.043 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:10.044 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:10'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:05:10.045 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:10'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:05:10.047 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:10'.
2025-10-12 14:05:10.049 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:10'.
2025-10-12 14:05:10.051 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:05:10.052 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:05:10.054 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:05:10.055 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:05:10.059 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:05:10.062 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:05:10.062 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:05:10.066 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:05:10.067 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.9982ms
2025-10-12 14:05:10.069 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.0938ms
2025-10-12 14:05:10.070 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:05:10.072 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:05:10.073 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 39.0904ms
2025-10-12 14:05:10.074 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 40.4493ms
2025-10-12 14:05:17.128 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 14:05:17.129 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 14:05:17.133 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:17.137 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:17.138 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 9.8482ms
2025-10-12 14:05:17.139 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 10.6238ms
2025-10-12 14:05:17.141 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:05:17.141 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:05:17.148 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:17.151 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:17.152 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:17'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:05:17.153 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:17'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:05:17.154 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:17'.
2025-10-12 14:05:17.156 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:17'.
2025-10-12 14:05:17.157 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:05:17.158 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:05:17.160 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:05:17.160 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:05:17.163 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:05:17.165 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:05:17.166 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:05:17.169 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:05:17.170 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 7.5414ms
2025-10-12 14:05:17.171 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 6.8958ms
2025-10-12 14:05:17.173 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:05:17.174 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:05:17.175 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 34.4083ms
2025-10-12 14:05:17.176 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 35.4065ms
2025-10-12 14:05:21.170 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:05:21.170 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:05:21.175 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:21.179 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:21.180 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:21'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:05:21.181 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:21'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:05:21.183 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:21'.
2025-10-12 14:05:21.186 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:21'.
2025-10-12 14:05:21.188 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:05:21.190 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:05:21.191 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:05:21.193 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:05:21.200 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:05:21.200 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:05:21.204 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:05:21.207 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:05:21.209 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.8268ms
2025-10-12 14:05:21.211 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.5072ms
2025-10-12 14:05:21.213 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:05:21.214 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:05:21.217 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 46.3506ms
2025-10-12 14:05:21.218 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 48.3724ms
2025-10-12 14:05:24.765 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 14:05:24.765 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 14:05:24.767 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:24.772 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:24.773 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 8.2367ms
2025-10-12 14:05:24.775 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 10.0164ms
2025-10-12 14:05:24.775 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:05:24.777 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:05:24.787 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:24.790 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:24.792 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:24'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:05:24.793 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:24'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:05:24.795 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:24'.
2025-10-12 14:05:24.797 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:24'.
2025-10-12 14:05:24.798 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:05:24.800 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:05:24.801 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:05:24.802 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:05:24.806 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:05:24.808 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:05:24.810 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:05:24.813 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:05:24.814 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.5919ms
2025-10-12 14:05:24.816 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.5812ms
2025-10-12 14:05:24.817 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:05:24.819 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:05:24.820 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 45.1227ms
2025-10-12 14:05:24.822 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 44.6668ms
2025-10-12 14:05:28.771 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:05:28.771 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:05:28.775 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:28.779 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:28.780 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:28'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:05:28.781 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:28'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:05:28.783 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:28'.
2025-10-12 14:05:28.788 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:28'.
2025-10-12 14:05:28.789 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:05:28.790 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:05:28.793 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:05:28.795 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:05:28.811 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:05:28.811 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:05:28.814 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:05:28.817 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:05:28.818 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 18.0304ms
2025-10-12 14:05:28.822 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 24.3341ms
2025-10-12 14:05:28.824 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:05:28.826 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:05:28.830 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 59.4238ms
2025-10-12 14:05:28.832 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 61.1867ms
2025-10-12 14:05:32.117 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 14:05:32.117 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 14:05:32.121 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:32.125 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:32.125 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 8.5845ms
2025-10-12 14:05:32.126 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 9.3954ms
2025-10-12 14:05:32.128 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:05:32.128 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:05:32.139 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:32.142 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:32.143 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:32'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:05:32.144 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:32'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:05:32.146 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:32'.
2025-10-12 14:05:32.148 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:32'.
2025-10-12 14:05:32.150 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:05:32.152 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:05:32.153 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:05:32.154 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:05:32.157 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:05:32.159 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:05:32.160 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:05:32.163 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:05:32.164 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 7.7817ms
2025-10-12 14:05:32.166 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.9443ms
2025-10-12 14:05:32.168 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:05:32.169 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:05:32.171 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 42.9981ms
2025-10-12 14:05:32.172 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 43.7647ms
2025-10-12 14:05:35.787 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:05:35.787 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:05:35.790 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:35.793 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:35.794 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:35'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:05:35.795 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:35'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:05:35.797 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:35'.
2025-10-12 14:05:35.799 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:35'.
2025-10-12 14:05:35.800 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:05:35.802 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:05:35.803 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:05:35.805 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:05:35.808 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:05:35.810 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:05:35.811 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:05:35.814 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:05:35.816 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.456ms
2025-10-12 14:05:35.817 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.0045ms
2025-10-12 14:05:35.819 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:05:35.821 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:05:35.823 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 35.7724ms
2025-10-12 14:05:35.824 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 37.162ms
2025-10-12 14:05:39.546 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 14:05:39.547 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 14:05:39.550 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:39.553 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:39.554 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 7.7077ms
2025-10-12 14:05:39.555 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 8.6704ms
2025-10-12 14:05:39.557 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:05:39.557 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:05:39.566 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:39.569 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:39.570 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:39'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:05:39.571 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:39'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:05:39.573 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:39'.
2025-10-12 14:05:39.575 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:39'.
2025-10-12 14:05:39.576 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:05:39.577 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:05:39.579 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:05:39.580 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:05:39.583 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:05:39.585 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:05:39.586 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:05:39.588 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:05:39.590 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.3829ms
2025-10-12 14:05:39.591 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.6263ms
2025-10-12 14:05:39.593 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:05:39.595 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:05:39.596 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 39.028ms
2025-10-12 14:05:39.598 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 40.5588ms
2025-10-12 14:05:43.494 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:05:43.494 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:05:43.499 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:43.502 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:43.504 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:43'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:05:43.505 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:43'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:05:43.506 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:43'.
2025-10-12 14:05:43.508 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:43'.
2025-10-12 14:05:43.510 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:05:43.511 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:05:43.512 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:05:43.514 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:05:43.517 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:05:43.519 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:05:43.521 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:05:43.523 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:05:43.525 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.2187ms
2025-10-12 14:05:43.526 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.8879ms
2025-10-12 14:05:43.528 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:05:43.530 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:05:43.531 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 37.102ms
2025-10-12 14:05:43.532 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 38.4617ms
2025-10-12 14:05:47.933 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 14:05:47.936 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 14:05:47.937 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:47.940 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:47.942 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 8.3783ms
2025-10-12 14:05:47.942 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 6.45ms
2025-10-12 14:05:47.944 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:05:47.944 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:05:47.954 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:47.957 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:47.958 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:47'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:05:47.959 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:47'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:05:47.961 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:47'.
2025-10-12 14:05:47.963 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:47'.
2025-10-12 14:05:47.964 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:05:47.966 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:05:47.967 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:05:47.968 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:05:47.976 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:05:47.978 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:05:47.979 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:05:47.981 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:05:47.983 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.3704ms
2025-10-12 14:05:47.984 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 11.7296ms
2025-10-12 14:05:47.987 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:05:47.988 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:05:47.990 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 45.561ms
2025-10-12 14:05:47.991 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 46.9621ms
2025-10-12 14:05:52.209 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:05:52.209 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:05:52.213 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:52.216 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:52.216 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:52'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:05:52.218 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:52'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:05:52.219 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:52'.
2025-10-12 14:05:52.224 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:52'.
2025-10-12 14:05:52.225 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:05:52.226 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:05:52.228 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:05:52.229 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:05:52.240 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:05:52.240 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:05:52.246 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:05:52.248 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:05:52.250 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 16.9916ms
2025-10-12 14:05:52.252 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 20.9351ms
2025-10-12 14:05:52.253 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:05:52.255 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:05:52.257 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 47.8748ms
2025-10-12 14:05:52.258 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 49.4588ms
2025-10-12 14:05:56.827 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 14:05:56.827 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 14:05:56.831 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:56.835 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:56.836 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 9.4137ms
2025-10-12 14:05:56.837 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 9.9619ms
2025-10-12 14:05:56.838 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:05:56.839 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:05:56.847 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:56.849 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:05:56.850 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:56'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:05:56.851 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:56'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:05:56.853 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:56'.
2025-10-12 14:05:56.856 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:05:56'.
2025-10-12 14:05:56.857 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:05:56.858 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:05:56.860 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:05:56.861 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:05:56.865 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:05:56.867 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:05:56.868 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:05:56.871 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:05:56.872 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.6332ms
2025-10-12 14:05:56.874 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.4668ms
2025-10-12 14:05:56.876 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:05:56.877 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:05:56.879 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 40.2696ms
2025-10-12 14:05:56.880 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 41.3734ms
2025-10-12 14:06:00.614 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:06:00.614 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:06:00.619 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:00.622 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:00.625 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:00'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:06:00.626 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:00'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:06:00.628 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:00'.
2025-10-12 14:06:00.631 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:00'.
2025-10-12 14:06:00.633 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:06:00.634 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:06:00.636 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:06:00.637 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:06:00.646 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:06:00.650 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:06:00.656 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:06:00.661 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:06:00.663 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 23.3141ms
2025-10-12 14:06:00.666 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 22.1269ms
2025-10-12 14:06:00.667 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:06:00.670 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 55.7081ms
2025-10-12 14:06:00.672 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:06:00.679 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 64.9271ms
2025-10-12 14:06:04.529 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 14:06:04.530 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 14:06:04.533 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:04.537 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:04.538 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 8.5567ms
2025-10-12 14:06:04.539 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 9.6503ms
2025-10-12 14:06:04.544 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:06:04.545 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:06:04.553 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:04.556 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:04.557 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:06:04.558 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:06:04.560 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:04'.
2025-10-12 14:06:04.562 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:04'.
2025-10-12 14:06:04.564 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:06:04.565 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:06:04.567 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:06:04.568 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:06:04.573 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:06:04.574 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:06:04.576 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:06:04.579 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:06:04.581 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 10.1033ms
2025-10-12 14:06:04.583 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.8909ms
2025-10-12 14:06:04.584 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:06:04.586 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:06:04.588 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 43.5367ms
2025-10-12 14:06:04.589 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 44.7982ms
2025-10-12 14:06:09.692 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 14:06:09.692 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 14:06:09.697 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:09.700 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:09.701 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 8.5574ms
2025-10-12 14:06:09.703 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 10.1368ms
2025-10-12 14:06:09.705 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:06:09.705 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:06:09.715 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:09.719 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:09.720 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:09'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:06:09.721 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:09'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:06:09.724 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:09'.
2025-10-12 14:06:09.726 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:09'.
2025-10-12 14:06:09.728 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:06:09.729 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:06:09.731 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:06:09.732 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:06:09.737 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:06:09.739 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:06:09.741 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:06:09.743 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:06:09.745 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.8806ms
2025-10-12 14:06:09.747 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.1526ms
2025-10-12 14:06:09.748 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:06:09.750 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:06:09.752 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 47.1451ms
2025-10-12 14:06:09.753 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 48.5252ms
2025-10-12 14:06:13.187 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:06:13.187 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:06:13.192 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:13.194 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:13.195 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:06:13.197 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:06:13.198 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:13'.
2025-10-12 14:06:13.201 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:13'.
2025-10-12 14:06:13.202 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:06:13.203 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:06:13.204 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:06:13.206 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:06:13.210 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:06:13.213 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:06:13.215 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:06:13.217 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:06:13.219 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 10.5145ms
2025-10-12 14:06:13.220 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.9244ms
2025-10-12 14:06:13.221 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:06:13.223 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:06:13.224 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 36.8695ms
2025-10-12 14:06:13.225 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 38.1644ms
2025-10-12 14:06:17.662 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 14:06:17.662 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 14:06:17.668 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:17.671 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:17.672 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 10.1926ms
2025-10-12 14:06:17.673 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 11.2072ms
2025-10-12 14:06:17.676 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:06:17.676 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:06:17.685 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:17.688 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:17.689 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:17'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:06:17.691 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:17'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:06:17.692 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:17'.
2025-10-12 14:06:17.695 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:17'.
2025-10-12 14:06:17.696 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:06:17.698 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:06:17.699 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:06:17.701 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:06:17.705 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:06:17.706 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:06:17.708 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:06:17.710 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:06:17.712 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.7442ms
2025-10-12 14:06:17.713 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.1459ms
2025-10-12 14:06:17.715 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:06:17.717 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:06:17.718 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 41.7549ms
2025-10-12 14:06:17.719 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 42.8753ms
2025-10-12 14:06:20.980 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:06:20.980 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:06:20.983 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:20.986 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:20.988 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:06:20.989 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:06:20.992 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:20'.
2025-10-12 14:06:20.994 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:20'.
2025-10-12 14:06:20.995 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:06:20.997 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:06:20.998 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:06:20.999 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:06:21.003 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:06:21.004 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:06:21.005 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:06:21.008 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:06:21.009 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.1744ms
2025-10-12 14:06:21.011 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 7.7383ms
2025-10-12 14:06:21.012 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:06:21.013 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:06:21.015 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 34.9344ms
2025-10-12 14:06:21.016 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 35.8579ms
2025-10-12 14:06:25.473 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 14:06:25.473 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 14:06:25.477 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:25.480 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:25.481 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 8.3358ms
2025-10-12 14:06:25.483 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 9.7554ms
2025-10-12 14:06:25.485 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:06:25.485 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:06:25.494 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:25.497 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:25.499 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:25'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:06:25.499 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:25'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:06:25.501 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:25'.
2025-10-12 14:06:25.503 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:25'.
2025-10-12 14:06:25.505 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:06:25.507 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:06:25.508 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:06:25.509 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:06:25.515 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:06:25.516 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:06:25.518 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:06:25.521 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:06:25.523 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 11.2333ms
2025-10-12 14:06:25.525 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 10.8572ms
2025-10-12 14:06:25.526 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:06:25.528 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:06:25.530 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 45.0397ms
2025-10-12 14:06:25.531 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 45.7429ms
2025-10-12 14:06:29.228 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:06:29.228 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:06:29.233 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:29.236 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:29.237 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:29'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:06:29.238 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:29'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:06:29.240 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:29'.
2025-10-12 14:06:29.242 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:29'.
2025-10-12 14:06:29.244 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:06:29.245 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:06:29.246 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:06:29.247 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:06:29.255 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:06:29.255 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:06:29.258 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:06:29.261 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:06:29.263 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.0914ms
2025-10-12 14:06:29.265 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 14.5783ms
2025-10-12 14:06:29.267 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:06:29.268 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:06:29.270 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 42.4911ms
2025-10-12 14:06:29.272 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 44.3764ms
2025-10-12 14:06:32.652 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 14:06:32.652 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 14:06:32.656 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:32.660 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:32.661 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 8.4098ms
2025-10-12 14:06:32.661 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 9.0303ms
2025-10-12 14:06:32.664 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:06:32.664 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:06:32.672 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:32.676 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:32.677 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:32'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:06:32.678 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:32'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:06:32.680 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:32'.
2025-10-12 14:06:32.682 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:32'.
2025-10-12 14:06:32.684 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:06:32.685 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:06:32.686 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:06:32.687 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:06:32.692 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:06:32.693 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:06:32.695 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:06:32.697 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:06:32.698 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.3307ms
2025-10-12 14:06:32.700 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 7.9081ms
2025-10-12 14:06:32.701 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:06:32.703 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:06:32.704 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 40.3042ms
2025-10-12 14:06:32.706 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 41.5016ms
2025-10-12 14:06:36.929 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:06:36.929 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:06:36.933 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:36.937 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:36.939 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:36'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:06:36.939 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:36'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:06:36.941 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:36'.
2025-10-12 14:06:36.944 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:36'.
2025-10-12 14:06:36.946 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:06:36.948 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:06:36.949 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:06:36.951 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:06:36.958 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:06:36.960 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:06:36.961 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:06:36.964 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:06:36.966 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 11.7357ms
2025-10-12 14:06:36.968 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.4687ms
2025-10-12 14:06:36.970 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:06:36.972 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:06:36.973 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 43.8345ms
2025-10-12 14:06:36.975 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 45.3155ms
2025-10-12 14:06:42.499 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 14:06:42.499 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 14:06:42.503 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:42.507 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:42.508 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 9.3088ms
2025-10-12 14:06:42.509 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 10.3352ms
2025-10-12 14:06:42.512 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:06:42.512 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:06:42.521 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:42.525 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:42.527 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:06:42.528 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:06:42.530 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:42'.
2025-10-12 14:06:42.533 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:42'.
2025-10-12 14:06:42.535 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:06:42.537 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:06:42.539 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:06:42.541 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:06:42.546 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:06:42.547 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:06:42.550 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:06:42.553 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:06:42.554 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.9487ms
2025-10-12 14:06:42.557 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 11.0823ms
2025-10-12 14:06:42.559 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:06:42.560 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:06:42.562 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 49.8054ms
2025-10-12 14:06:42.564 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 51.6377ms
2025-10-12 14:06:46.559 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:06:46.559 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:06:46.563 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:46.567 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:46.568 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:46'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:06:46.569 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:46'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:06:46.571 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:46'.
2025-10-12 14:06:46.573 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:46'.
2025-10-12 14:06:46.574 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:06:46.575 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:06:46.576 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:06:46.577 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:06:46.582 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:06:46.584 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:06:46.585 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:06:46.587 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:06:46.589 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.4982ms
2025-10-12 14:06:46.591 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.4191ms
2025-10-12 14:06:46.592 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:06:46.594 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:06:46.595 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 36.1364ms
2025-10-12 14:06:46.596 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 37.9ms
2025-10-12 14:06:51.752 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 14:06:51.752 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 14:06:51.755 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:51.760 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:51.761 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 8.8527ms
2025-10-12 14:06:51.762 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 10.1133ms
2025-10-12 14:06:51.771 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:06:51.771 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:06:51.776 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:51.779 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:51.781 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:51'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:06:51.782 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:51'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:06:51.783 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:51'.
2025-10-12 14:06:51.786 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:51'.
2025-10-12 14:06:51.787 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:06:51.789 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:06:51.790 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:06:51.792 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:06:51.807 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:06:51.807 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:06:51.817 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:06:51.822 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:06:51.827 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 31.6711ms
2025-10-12 14:06:51.829 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 26.2331ms
2025-10-12 14:06:51.831 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:06:51.833 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:06:51.834 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 63.4929ms
2025-10-12 14:06:51.836 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 65.0801ms
2025-10-12 14:06:56.902 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 14:06:56.903 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 14:06:56.906 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:56.910 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:56.911 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 9.1444ms
2025-10-12 14:06:56.913 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 10.0028ms
2025-10-12 14:06:56.916 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:06:56.916 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:06:56.925 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:56.928 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:06:56.929 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:56'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:06:56.930 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:56'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:06:56.933 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:56'.
2025-10-12 14:06:56.935 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:06:56'.
2025-10-12 14:06:56.936 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:06:56.938 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:06:56.939 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:06:56.940 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:06:56.950 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:06:56.950 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:06:56.954 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:06:56.956 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:06:56.958 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 13.5008ms
2025-10-12 14:06:56.960 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 17.9209ms
2025-10-12 14:06:56.962 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:06:56.963 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:06:56.965 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 48.7375ms
2025-10-12 14:06:56.967 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 50.2898ms
2025-10-12 14:07:00.682 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:07:00.682 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:07:00.686 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:00.690 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:00.691 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:00'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:07:00.692 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:00'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:07:00.694 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:00'.
2025-10-12 14:07:00.696 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:00'.
2025-10-12 14:07:00.697 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:07:00.698 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:07:00.700 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:07:00.702 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:07:00.715 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:07:00.716 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:07:00.722 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:07:00.724 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:07:00.726 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 18.7652ms
2025-10-12 14:07:00.728 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 23.3389ms
2025-10-12 14:07:00.730 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:07:00.732 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:07:00.733 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 50.8603ms
2025-10-12 14:07:00.735 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 52.1634ms
2025-10-12 14:07:04.692 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 14:07:04.692 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 14:07:04.697 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:04.701 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:04.702 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 9.7183ms
2025-10-12 14:07:04.703 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 10.7097ms
2025-10-12 14:07:04.706 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:07:04.706 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:07:04.716 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:04.720 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:04.721 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:07:04.722 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:07:04.724 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:04'.
2025-10-12 14:07:04.726 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:04'.
2025-10-12 14:07:04.728 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:07:04.730 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:07:04.731 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:07:04.733 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:07:04.740 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:07:04.741 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:07:04.744 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:07:04.747 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:07:04.748 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 10.596ms
2025-10-12 14:07:04.750 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 14.6696ms
2025-10-12 14:07:04.752 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:07:04.754 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:07:04.756 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 50.064ms
2025-10-12 14:07:04.758 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 52.4412ms
2025-10-12 14:07:09.389 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:07:09.389 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:07:09.393 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:09.396 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:09.398 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:09'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:07:09.400 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:09'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:07:09.401 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:09'.
2025-10-12 14:07:09.404 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:09'.
2025-10-12 14:07:09.406 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:07:09.407 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:07:09.409 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:07:09.411 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:07:09.415 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:07:09.418 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:07:09.419 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:07:09.425 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:07:09.426 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 13.8701ms
2025-10-12 14:07:09.428 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 13.4432ms
2025-10-12 14:07:09.430 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:07:09.431 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:07:09.433 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 43.9306ms
2025-10-12 14:07:09.435 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 46.4417ms
2025-10-12 14:07:12.927 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 14:07:12.927 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 14:07:12.931 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:12.935 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:12.935 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 8.8075ms
2025-10-12 14:07:12.936 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 9.5744ms
2025-10-12 14:07:12.941 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:07:12.941 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:07:12.950 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:12.953 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:12.955 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:12'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:07:12.956 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:12'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:07:12.958 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:12'.
2025-10-12 14:07:12.961 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:12'.
2025-10-12 14:07:12.962 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:07:12.964 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:07:12.965 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:07:12.967 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:07:12.971 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:07:12.975 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:07:12.977 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.9014ms
2025-10-12 14:07:12.978 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:07:12.980 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:07:12.983 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:07:12.984 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 42.801ms
2025-10-12 14:07:12.987 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 15.2431ms
2025-10-12 14:07:12.993 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:07:12.995 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 53.799ms
2025-10-12 14:07:18.705 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 14:07:18.705 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 14:07:18.708 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:18.710 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:18.711 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 5.4496ms
2025-10-12 14:07:18.711 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 6.0775ms
2025-10-12 14:07:18.713 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:07:18.713 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:07:18.721 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:18.724 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:18.725 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:07:18.726 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:07:18.727 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:18'.
2025-10-12 14:07:18.729 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:18'.
2025-10-12 14:07:18.730 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:07:18.731 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:07:18.732 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:07:18.734 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:07:18.738 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:07:18.740 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:07:18.740 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:07:18.745 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:07:18.747 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.5938ms
2025-10-12 14:07:18.748 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.8426ms
2025-10-12 14:07:18.750 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:07:18.752 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:07:18.753 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 40.1823ms
2025-10-12 14:07:18.754 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 41.2343ms
2025-10-12 14:07:22.582 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:07:22.582 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:07:22.586 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:22.589 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:22.591 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:22'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:07:22.592 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:22'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:07:22.594 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:22'.
2025-10-12 14:07:22.596 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:22'.
2025-10-12 14:07:22.598 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:07:22.599 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:07:22.600 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:07:22.602 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:07:22.608 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:07:22.611 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:07:22.613 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:07:22.616 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:07:22.617 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.0461ms
2025-10-12 14:07:22.619 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 11.5202ms
2025-10-12 14:07:22.621 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:07:22.623 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:07:22.624 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 42.2665ms
2025-10-12 14:07:22.626 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 44.5961ms
2025-10-12 14:07:32.529 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 14:07:32.529 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 14:07:32.530 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 14:07:32.531 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 14:07:32.533 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:32.536 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:32.538 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 14:07:32.538 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 14:07:32.540 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:32.543 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:32.544 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 15.2553ms
2025-10-12 14:07:32.545 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 16.3256ms
2025-10-12 14:07:32.548 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:32.549 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:07:32.549 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:07:32.552 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:32.553 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 22.8895ms
2025-10-12 14:07:32.554 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 23.2738ms
2025-10-12 14:07:32.564 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 25.9382ms
2025-10-12 14:07:32.568 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:32.568 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 14:07:32.571 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:32.572 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 33.8594ms
2025-10-12 14:07:32.586 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:32'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:07:32.589 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:32.590 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:32'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:07:32.597 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:32'.
2025-10-12 14:07:32.599 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 14:07:32.601 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:32'.
2025-10-12 14:07:32.602 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:07:32.604 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 14:07:32.605 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:07:32.606 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:07:32.610 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:07:32.616 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:07:32.619 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:07:32.620 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 14:07:32.621 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.7346ms
2025-10-12 14:07:32.623 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:07:32.625 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:07:32.625 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:07:32.626 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:07:32.629 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:32.633 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:07:32.635 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 26.3413ms
2025-10-12 14:07:32.637 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 87.6223ms
2025-10-12 14:07:32.637 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 14:07:32.638 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:32'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:07:32.640 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 25.4473ms
2025-10-12 14:07:32.641 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:07:32.642 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 14:07:32.651 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:32.654 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:32'.
2025-10-12 14:07:32.656 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:07:32.659 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:32.660 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 92.1034ms
2025-10-12 14:07:32.661 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 14:07:32.663 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:07:32.664 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 115.3316ms
2025-10-12 14:07:32.666 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:32'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:07:32.670 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 14:07:32.671 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 14:07:32.673 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:07:32.679 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:32'.
2025-10-12 14:07:32.682 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:32.687 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 14:07:32.689 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:07:32.689 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:07:32.689 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 19.8789ms
2025-10-12 14:07:32.693 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 14:07:32.694 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:07:32.694 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:07:32.696 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:07:32.704 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:32.706 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 20.808ms
2025-10-12 14:07:32.710 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 23.1583ms
2025-10-12 14:07:32.711 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:07:32.712 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:32'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:07:32.712 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:07:32.714 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:07:32.716 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:07:32.718 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 14:07:32.720 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:32'.
2025-10-12 14:07:32.724 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:32.726 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 18.3581ms
2025-10-12 14:07:32.727 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 104.5889ms
2025-10-12 14:07:32.727 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:07:32.729 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 91.3371ms
2025-10-12 14:07:32.731 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 14:07:32.732 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:32'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:07:32.733 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:07:32.744 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:32.750 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 14:07:32.752 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:32'.
2025-10-12 14:07:32.753 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 111.869ms
2025-10-12 14:07:32.755 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:32'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:07:32.758 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:07:32.764 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:32'.
2025-10-12 14:07:32.766 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:07:32.767 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:07:32.771 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 14:07:32.771 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:07:32.773 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:07:32.774 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 14:07:32.779 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:07:32.779 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:07:32.780 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 23.5144ms
2025-10-12 14:07:32.783 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 14:07:32.784 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:07:32.785 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 16.1038ms
2025-10-12 14:07:32.788 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 14:07:32.791 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:32.793 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 16.8114ms
2025-10-12 14:07:32.795 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:07:32.797 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 103.7067ms
2025-10-12 14:07:32.799 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:32'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:07:32.800 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:07:32.802 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 89.9834ms
2025-10-12 14:07:32.808 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:32'.
2025-10-12 14:07:32.810 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 82.7818ms
2025-10-12 14:07:32.816 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 14:07:32.820 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 14:07:32.826 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 14:07:32.830 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 14:07:32.832 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 9.8695ms
2025-10-12 14:07:32.834 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 14:07:32.836 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 53.1634ms
2025-10-12 14:07:44.486 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 14:07:44.486 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 14:07:44.488 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 14:07:44.489 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 14:07:44.490 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:44.493 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:44.495 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 14:07:44.497 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 14:07:44.497 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:44.500 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:44.501 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 15.0108ms
2025-10-12 14:07:44.502 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 15.6074ms
2025-10-12 14:07:44.505 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:07:44.505 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:44.506 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:07:44.509 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:44.510 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 21.6526ms
2025-10-12 14:07:44.511 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 22.5298ms
2025-10-12 14:07:44.525 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:44.526 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 30.2958ms
2025-10-12 14:07:44.528 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 14:07:44.529 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:44.530 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 33.0122ms
2025-10-12 14:07:44.540 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:07:44.548 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:44.549 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:07:44.556 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:44'.
2025-10-12 14:07:44.557 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 14:07:44.562 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:44'.
2025-10-12 14:07:44.564 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:07:44.565 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 14:07:44.566 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:07:44.568 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:07:44.572 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:07:44.572 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 14:07:44.576 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:07:44.579 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:07:44.580 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:07:44.582 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:07:44.585 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:07:44.587 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 16.585ms
2025-10-12 14:07:44.588 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 14:07:44.589 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 14.7423ms
2025-10-12 14:07:44.590 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:07:44.591 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 14.3108ms
2025-10-12 14:07:44.592 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 14:07:44.594 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:07:44.596 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:44.598 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:07:44.601 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:44.603 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:07:44.605 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 76.6187ms
2025-10-12 14:07:44.608 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:44.610 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 105.4363ms
2025-10-12 14:07:44.610 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 14:07:44.612 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:07:44.613 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 106.4666ms
2025-10-12 14:07:44.618 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:07:44.624 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 14:07:44.624 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 14:07:44.626 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:44'.
2025-10-12 14:07:44.633 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:44'.
2025-10-12 14:07:44.639 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 14:07:44.640 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:44.642 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:07:44.643 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:07:44.647 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 22.7513ms
2025-10-12 14:07:44.648 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:07:44.649 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:07:44.649 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 14:07:44.650 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:07:44.657 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 20.5909ms
2025-10-12 14:07:44.661 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:07:44.662 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:44.666 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:07:44.666 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 14:07:44.670 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:07:44.670 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:07:44.673 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:07:44.674 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 86.2024ms
2025-10-12 14:07:44.676 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 17.6505ms
2025-10-12 14:07:44.678 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:07:44.679 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:44'.
2025-10-12 14:07:44.681 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 16.3736ms
2025-10-12 14:07:44.682 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:07:44.686 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:07:44.690 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:44.691 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 14:07:44.693 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:07:44.696 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:44.698 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 107.9033ms
2025-10-12 14:07:44.699 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:07:44.700 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 14:07:44.701 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 107.4711ms
2025-10-12 14:07:44.703 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:07:44.708 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:44'.
2025-10-12 14:07:44.712 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 14:07:44.717 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:44'.
2025-10-12 14:07:44.719 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:07:44.722 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 14:07:44.723 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:07:44.725 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:07:44.726 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 15.759ms
2025-10-12 14:07:44.727 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 14:07:44.727 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:07:44.731 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 14:07:44.732 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:07:44.735 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:07:44.738 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 88.7612ms
2025-10-12 14:07:44.739 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:07:44.741 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:07:44.742 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:07:44.748 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:07:44.750 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 19.7547ms
2025-10-12 14:07:44.751 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:07:44'.
2025-10-12 14:07:44.753 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 16.6168ms
2025-10-12 14:07:44.755 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:07:44.757 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 14:07:44.758 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:07:44.760 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 81.4237ms
2025-10-12 14:07:44.761 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 14:07:44.763 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 80.6663ms
2025-10-12 14:07:44.772 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 14:07:44.778 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 14:07:44.780 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 10.71ms
2025-10-12 14:07:44.782 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 14:07:44.785 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 57.1779ms
2025-10-12 14:18:29.012 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 14:18:29.012 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 14:18:29.018 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:18:29.021 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:18:29.022 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 9.8337ms
2025-10-12 14:18:29.024 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 11.2733ms
2025-10-12 14:18:29.027 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:18:29.027 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:18:29.036 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:18:29.040 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:18:29.042 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:18:29'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:18:29.043 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:18:29'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:18:29.045 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:18:29'.
2025-10-12 14:18:29.047 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:18:29'.
2025-10-12 14:18:29.048 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:18:29.050 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:18:29.051 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:18:29.053 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:18:29.057 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 14:18:29.061 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:18:29.062 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:18:29.062 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:18:29.065 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:18:29.066 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 9.12ms
2025-10-12 14:18:29.069 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:18:29.071 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 15.5401ms
2025-10-12 14:18:29.072 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:18:29.075 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 14:18:29.078 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 20.1784ms
2025-10-12 14:18:29.079 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:18:29.080 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:18:29.083 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:18:29.086 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:18:29.088 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:18:29.091 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:18:29.092 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 65.0912ms
2025-10-12 14:18:29.094 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:18:29'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:18:29.094 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 14:18:29.096 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 68.1632ms
2025-10-12 14:18:29.097 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:18:29'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:18:29.102 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:18:29'.
2025-10-12 14:18:29.104 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 14:18:29.110 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:18:29'.
2025-10-12 14:18:29.111 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:18:29.114 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:18:29.115 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:18:29.117 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:18:29.121 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:18:29.124 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 14:18:29.125 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:18:29.125 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:18:29.129 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:18:29.130 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:18:29.132 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.917ms
2025-10-12 14:18:29.134 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 20.8922ms
2025-10-12 14:18:29.136 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 13.496ms
2025-10-12 14:18:29.137 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:18:29.139 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 14:18:29.141 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:18:29.142 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 69.9095ms
2025-10-12 14:18:29.143 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 68.1682ms
2025-10-12 14:18:29.145 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 65.8169ms
2025-10-12 14:18:29.147 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 14:18:29.160 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:18:29.162 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 14.6285ms
2025-10-12 14:18:29.163 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 14:18:29.169 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:18:29.170 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:18:29'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:18:29.172 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:18:29'.
2025-10-12 14:18:29.174 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 14:18:29.175 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 14:18:29.187 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 14:18:29.190 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 14:18:29.192 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 15.146ms
2025-10-12 14:18:29.194 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 14:18:29.195 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 31.8108ms
2025-10-12 14:18:34.103 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 14:18:34.103 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 14:18:34.109 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:18:34.112 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:18:34.113 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 9.8793ms
2025-10-12 14:18:34.114 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 10.9389ms
2025-10-12 14:18:34.114 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:18:34.115 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:18:34.126 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:18:34.129 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:18:34.130 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:18:34'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:18:34.131 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:18:34'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:18:34.136 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:18:34'.
2025-10-12 14:18:34.137 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:18:34'.
2025-10-12 14:18:34.138 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:18:34.139 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:18:34.140 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:18:34.144 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:18:34.146 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:18:34.149 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:18:34.153 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:18:34.154 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 11.9395ms
2025-10-12 14:18:34.157 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:18:34.158 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:18:34.160 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.4837ms
2025-10-12 14:18:34.161 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 46.6996ms
2025-10-12 14:18:34.163 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:18:34.169 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 53.7621ms
2025-10-12 14:18:35.875 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:18:35.875 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:18:35.881 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:18:35.884 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:18:35.886 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:18:35'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:18:35.886 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:18:35'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:18:35.888 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:18:35'.
2025-10-12 14:18:35.890 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:18:35'.
2025-10-12 14:18:35.892 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:18:35.893 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:18:35.895 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:18:35.896 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:18:35.900 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:18:35.902 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:18:35.904 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:18:35.907 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:18:35.909 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.914ms
2025-10-12 14:18:35.911 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.2289ms
2025-10-12 14:18:35.912 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:18:35.914 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:18:35.915 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 39.5122ms
2025-10-12 14:18:35.916 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 40.6273ms
2025-10-12 14:18:38.504 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 14:18:38.504 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 14:18:38.508 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:18:38.511 +04:00 [INF] CORS policy execution successful.
2025-10-12 14:18:38.512 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:18:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:18:38.513 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:18:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 14:18:38.515 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:18:38'.
2025-10-12 14:18:38.517 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 10:18:38'.
2025-10-12 14:18:38.518 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:18:38.519 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:18:38.520 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 14:18:38.521 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 14:18:38.525 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 14:18:38.529 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:18:38.530 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 14:18:38.531 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.2956ms
2025-10-12 14:18:38.534 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 14:18:38.535 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 14:18:38.537 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.2995ms
2025-10-12 14:18:38.538 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 33.8834ms
2025-10-12 14:18:38.539 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 14:18:38.544 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 40.1318ms
2025-10-12 15:21:23.033 +04:00 [WRN] No store type was specified for the decimal property 'Quantity' on entity type 'OrderItem'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-10-12 15:21:23.307 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-12 15:21:23.331 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-12 15:21:23.334 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-12 15:21:23.337 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-12 15:21:23.355 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-10-12 15:21:23.367 +04:00 [INF] No migrations were applied. The database is already up to date.
2025-10-12 15:21:23.368 +04:00 [INF] Migrations applied
2025-10-12 15:21:23.503 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-12 15:21:23.530 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-12 15:21:23.534 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-12 15:21:23.549 +04:00 [INF] User profile is available. Using 'C:\Users\ASUS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-12 15:21:23.566 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-10-12 15:21:23.595 +04:00 [INF] Admin user already exists: admin@greenzone.com
2025-10-12 15:21:23.773 +04:00 [INF] Now listening on: https://localhost:7100
2025-10-12 15:21:23.800 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-12 15:21:23.802 +04:00 [INF] Hosting environment: Development
2025-10-12 15:21:23.804 +04:00 [INF] Content root path: C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API
2025-10-12 15:21:24.570 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/index.html - null null
2025-10-12 15:21:24.754 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/index.html - 200 null text/html;charset=utf-8 185.4537ms
2025-10-12 15:21:24.760 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - null null
2025-10-12 15:21:24.762 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_vs/browserLink - null null
2025-10-12 15:21:24.768 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - 200 16511 application/javascript; charset=utf-8 8.3407ms
2025-10-12 15:21:24.810 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_vs/browserLink - 200 null text/javascript; charset=UTF-8 47.5681ms
2025-10-12 15:21:24.901 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - null null
2025-10-12 15:21:24.953 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 51.3055ms
2025-10-12 15:22:20.889 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:22:20.889 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:22:20.889 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 15:22:20.889 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:22:20.889 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:22:20.896 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:22:20.897 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:22:20.900 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:22:20.904 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:22:20.906 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:22:20.908 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 18.1854ms
2025-10-12 15:22:20.908 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 18.3299ms
2025-10-12 15:22:20.910 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 20.4191ms
2025-10-12 15:22:20.910 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 21.3929ms
2025-10-12 15:22:20.912 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 22.5645ms
2025-10-12 15:22:20.914 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 15:22:20.914 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:22:20.914 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:22:20.936 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:22:20.939 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:22:20.943 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:22:20.975 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:22:20.986 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 15:22:20.999 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:22:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:22:20.999 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:22:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:22:21.024 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:22:20'.
2025-10-12 15:22:21.026 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:22:20'.
2025-10-12 15:22:21.028 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:22:21.030 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:22:21.035 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:22:21.035 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:22:21.179 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-10-12 15:22:21.184 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:22:21.189 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:22:21.199 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 15:22:21.211 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:22:21.238 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:22:21.250 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:22:21.252 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:22:21.253 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 261.903ms
2025-10-12 15:22:21.253 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 209.7062ms
2025-10-12 15:22:21.254 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 216.2461ms
2025-10-12 15:22:21.255 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:22:21.256 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:22:21.258 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:22:21.260 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:22:21.262 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:22:21.265 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:22:21.267 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:22:21'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:22:21.271 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 357.1332ms
2025-10-12 15:22:21.271 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 357.0527ms
2025-10-12 15:22:21.271 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 357.1398ms
2025-10-12 15:22:21.271 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 15:22:21.272 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:22:21'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:22:21.274 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:22:21'.
2025-10-12 15:22:21.292 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:22:21.294 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:22:21'.
2025-10-12 15:22:21.296 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:22:21.297 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 25.5433ms
2025-10-12 15:22:21.298 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:22:21.299 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 15:22:21.299 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:22:21.305 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:22:21.308 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:22:21.315 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:22:21'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:22:21.315 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:22:21.316 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:22:21.318 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:22:21'.
2025-10-12 15:22:21.321 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:22:21.323 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:22:21.324 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:22:21.327 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 15.8621ms
2025-10-12 15:22:21.328 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 15.1457ms
2025-10-12 15:22:21.332 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:22:21.334 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:22:21.335 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 83.1294ms
2025-10-12 15:22:21.337 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 81.3687ms
2025-10-12 15:22:21.341 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 15:22:21.420 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 15:22:21.456 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 15:22:21.462 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 114.2395ms
2025-10-12 15:22:21.465 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:22:21.466 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 167.6477ms
2025-10-12 15:22:23.729 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:22:23.729 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:22:23.733 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:22:23.736 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:22:23.737 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:22:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:22:23.738 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:22:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:22:23.740 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:22:23'.
2025-10-12 15:22:23.742 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:22:23'.
2025-10-12 15:22:23.743 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:22:23.744 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:22:23.745 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:22:23.746 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:22:23.756 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:22:23.756 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:22:23.761 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:22:23.763 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:22:23.765 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 14.6957ms
2025-10-12 15:22:23.767 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 18.3741ms
2025-10-12 15:22:23.768 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:22:23.770 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:22:23.771 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 42.5093ms
2025-10-12 15:22:23.773 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 43.9067ms
2025-10-12 15:23:46.261 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:23:46.261 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:23:46.264 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:23:46.266 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:23:46.267 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 6.2233ms
2025-10-12 15:23:46.267 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 6.914ms
2025-10-12 15:23:46.272 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:23:46.272 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:23:46.278 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:23:46.280 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:23:46.281 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:23:46'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:23:46.282 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:23:46'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:23:46.283 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:23:46'.
2025-10-12 15:23:46.285 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:23:46'.
2025-10-12 15:23:46.287 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:23:46.288 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:23:46.289 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:23:46.289 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:23:46.302 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:23:46.302 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:23:46.305 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:23:46.308 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:23:46.309 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 17.6278ms
2025-10-12 15:23:46.310 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 17.435ms
2025-10-12 15:23:46.312 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:23:46.314 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:23:46.316 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 43.6297ms
2025-10-12 15:23:46.317 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 44.6507ms
2025-10-12 15:26:38.009 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:26:38.009 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:26:38.012 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:26:38.016 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:26:38.017 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 8.1597ms
2025-10-12 15:26:38.018 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 8.9311ms
2025-10-12 15:26:38.026 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:26:38.026 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:26:38.031 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:26:38.035 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:26:38.036 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:26:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:26:38.037 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:26:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:26:38.040 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:26:38'.
2025-10-12 15:26:38.042 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:26:38'.
2025-10-12 15:26:38.044 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:26:38.045 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:26:38.046 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:26:38.048 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:26:38.066 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:26:38.066 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:26:38.070 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:26:38.073 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:26:38.075 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 22.081ms
2025-10-12 15:26:38.076 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 25.6127ms
2025-10-12 15:26:38.078 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:26:38.079 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:26:38.081 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 54.9056ms
2025-10-12 15:26:38.082 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 56.469ms
2025-10-12 15:26:38.094 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:26:38.094 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:26:38.099 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:26:38.102 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:26:38.104 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:26:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:26:38.104 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:26:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:26:38.106 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:26:38'.
2025-10-12 15:26:38.108 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:26:38'.
2025-10-12 15:26:38.110 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:26:38.112 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:26:38.113 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:26:38.114 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:26:38.120 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 15:26:38.120 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:26:38.122 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:26:38.124 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:26:38.129 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:26:38.130 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:26:38.131 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 10.9761ms
2025-10-12 15:26:38.134 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 17.4774ms
2025-10-12 15:26:38.136 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 16.9972ms
2025-10-12 15:26:38.137 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 15:26:38.142 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:26:38.144 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:26:38.148 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:26:38.149 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 54.8493ms
2025-10-12 15:26:38.151 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 56.0583ms
2025-10-12 15:26:38.152 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:26:38.162 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 15:26:38.184 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 15:26:38.190 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:26:38.197 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 31.9745ms
2025-10-12 15:26:38.201 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:26:38.204 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 67.4427ms
2025-10-12 15:26:38.296 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 15:26:38.301 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:26:38.302 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 5.8244ms
2025-10-12 15:26:38.309 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 15:26:38.314 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:26:38.317 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:26:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:26:38.320 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:26:38'.
2025-10-12 15:26:38.323 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:26:38.325 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 15:26:38.351 +04:00 [INF] Executed DbCommand (17ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 15:26:38.357 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 15:26:38.359 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 31.7944ms
2025-10-12 15:26:38.361 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:26:38.364 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 55.2259ms
2025-10-12 15:28:18.627 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:28:18.627 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:28:18.632 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:28:18.634 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:28:18.635 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 8.4802ms
2025-10-12 15:28:18.636 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 9.248ms
2025-10-12 15:28:18.637 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:28:18.639 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:28:18.649 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:28:18.653 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:28:18.654 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:28:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:28:18.655 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:28:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:28:18.657 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:28:18'.
2025-10-12 15:28:18.659 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:28:18'.
2025-10-12 15:28:18.660 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:28:18.661 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:28:18.662 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:28:18.664 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:28:18.676 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:28:18.676 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:28:18.680 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:28:18.683 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:28:18.684 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 18.0317ms
2025-10-12 15:28:18.687 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 18.3393ms
2025-10-12 15:28:18.689 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:28:18.690 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:28:18.692 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 54.8092ms
2025-10-12 15:28:18.694 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 55.5743ms
2025-10-12 15:28:18.695 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:28:18.695 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:28:18.707 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:28:18.711 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:28:18.712 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:28:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:28:18.713 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:28:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:28:18.714 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:28:18'.
2025-10-12 15:28:18.716 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 15:28:18.716 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:28:18'.
2025-10-12 15:28:18.719 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:28:18.721 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:28:18.722 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:28:18.724 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 7.5004ms
2025-10-12 15:28:18.725 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:28:18.727 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 15:28:18.727 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:28:18.736 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:28:18.737 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:28:18.741 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:28:18.743 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:28:18.744 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:28:18.747 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:28:18.749 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 15.4306ms
2025-10-12 15:28:18.750 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 15:28:18.751 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.006ms
2025-10-12 15:28:18.753 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:28:18.757 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:28:18.758 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 62.9539ms
2025-10-12 15:28:18.759 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 64.2499ms
2025-10-12 15:28:18.776 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 15:28:18.780 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:28:18.781 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 26.5194ms
2025-10-12 15:28:18.783 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:28:18.784 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 57.8666ms
2025-10-12 15:28:18.800 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 15:28:18.804 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:28:18.805 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 5.1502ms
2025-10-12 15:28:18.807 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 15:28:18.812 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:28:18.814 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:28:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:28:18.816 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:28:18'.
2025-10-12 15:28:18.817 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:28:18.819 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 15:28:18.835 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 15:28:18.839 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 15:28:18.841 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 19.8238ms
2025-10-12 15:28:18.843 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:28:18.845 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 37.6093ms
2025-10-12 15:29:50.959 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:29:50.960 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:29:50.963 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:29:50.967 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:29:50.969 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 10.0388ms
2025-10-12 15:29:50.970 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 9.3474ms
2025-10-12 15:29:50.970 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:29:50.975 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:29:50.982 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:29:50.987 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:29:50.988 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:29:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:29:50.989 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:29:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:29:50.990 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:29:50'.
2025-10-12 15:29:50.993 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:29:50'.
2025-10-12 15:29:50.994 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:29:50.996 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:29:50.997 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:29:50.998 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:29:51.012 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:29:51.012 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:29:51.016 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:29:51.019 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:29:51.020 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 17.8053ms
2025-10-12 15:29:51.022 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 21.9657ms
2025-10-12 15:29:51.025 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:29:51.027 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:29:51.029 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 54.0757ms
2025-10-12 15:29:51.031 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 60.4705ms
2025-10-12 15:29:51.032 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:29:51.032 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:29:51.041 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:29:51.044 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:29:51.045 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:29:51'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:29:51.046 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:29:51'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:29:51.048 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:29:51'.
2025-10-12 15:29:51.049 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:29:51'.
2025-10-12 15:29:51.051 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:29:51.051 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 15:29:51.052 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:29:51.053 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:29:51.056 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:29:51.057 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:29:51.060 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 8.5785ms
2025-10-12 15:29:51.061 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:29:51.064 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:29:51.064 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 15:29:51.069 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:29:51.072 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:29:51.074 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:29:51.076 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 17.1725ms
2025-10-12 15:29:51.077 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 14.9344ms
2025-10-12 15:29:51.078 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:29:51.080 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:29:51.081 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:29:51.082 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 15:29:51.084 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 52.0704ms
2025-10-12 15:29:51.085 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 52.6385ms
2025-10-12 15:29:51.101 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 15:29:51.105 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:29:51.107 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 19.5571ms
2025-10-12 15:29:51.108 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:29:51.110 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 45.4639ms
2025-10-12 15:29:51.150 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 15:29:51.156 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:29:51.157 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 7.3721ms
2025-10-12 15:29:51.161 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 15:29:51.166 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:29:51.167 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:29:51'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:29:51.169 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:29:51'.
2025-10-12 15:29:51.170 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:29:51.172 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 15:29:51.185 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 15:29:51.191 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 15:29:51.193 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 18.9198ms
2025-10-12 15:29:51.195 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:29:51.197 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 35.566ms
2025-10-12 15:32:13.785 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:32:13.785 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:32:13.789 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:32:13.792 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:32:13.793 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 8.4423ms
2025-10-12 15:32:13.794 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 9.2694ms
2025-10-12 15:32:13.797 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:32:13.797 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:32:13.807 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:32:13.810 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:32:13.812 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:32:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:32:13.813 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:32:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:32:13.815 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:32:13'.
2025-10-12 15:32:13.817 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:32:13'.
2025-10-12 15:32:13.818 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:32:13.819 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 15:32:13.819 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:32:13.821 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:32:13.824 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:32:13.825 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:32:13.829 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 9.9986ms
2025-10-12 15:32:13.830 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 15:32:13.838 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:32:13.838 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:32:13.838 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:32:13.839 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:32:13.843 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:32:13.845 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:32:13.846 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 15:32:13.848 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 20.1681ms
2025-10-12 15:32:13.849 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 18.3804ms
2025-10-12 15:32:13.849 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:32:13.850 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:32:13.853 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:32:13.855 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:32:13.858 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:32:13.861 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:32:13.862 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 15:32:13.862 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 65.4009ms
2025-10-12 15:32:13.863 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 66.5318ms
2025-10-12 15:32:13.865 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:32:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:32:13.866 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:32:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:32:13.869 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:32:13.877 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:32:13'.
2025-10-12 15:32:13.879 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:32:13'.
2025-10-12 15:32:13.881 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 29.9842ms
2025-10-12 15:32:13.882 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:32:13.883 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:32:13.885 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:32:13.886 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:32:13.887 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:32:13.889 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 58.7703ms
2025-10-12 15:32:13.891 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 15:32:13.892 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:32:13.893 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:32:13.899 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:32:13.901 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:32:13.904 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:32:13.905 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 13.183ms
2025-10-12 15:32:13.906 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 15:32:13.906 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 15.323ms
2025-10-12 15:32:13.907 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 15.027ms
2025-10-12 15:32:13.913 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:32:13.914 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:32:13.916 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:32:13.918 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:32:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:32:13.918 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 68.9379ms
2025-10-12 15:32:13.919 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 69.0129ms
2025-10-12 15:32:13.921 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:32:13'.
2025-10-12 15:32:13.928 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:32:13.929 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 15:32:13.943 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 15:32:13.947 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 15:32:13.948 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 17.2437ms
2025-10-12 15:32:13.950 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:32:13.951 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 45.1363ms
2025-10-12 15:32:38.234 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:32:38.234 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:32:38.238 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:32:38.239 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:32:38.240 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 6.4167ms
2025-10-12 15:32:38.241 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 6.9901ms
2025-10-12 15:32:38.242 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:32:38.242 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:32:38.247 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:32:38.249 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:32:38.251 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:32:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:32:38.252 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:32:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:32:38.254 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:32:38'.
2025-10-12 15:32:38.256 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:32:38'.
2025-10-12 15:32:38.257 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:32:38.259 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:32:38.260 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:32:38.262 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:32:38.276 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:32:38.276 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:32:38.278 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 15:32:38.280 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:32:38.282 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:32:38.285 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:32:38.287 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 20.3592ms
2025-10-12 15:32:38.289 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 24.8307ms
2025-10-12 15:32:38.289 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:32:38.290 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 11.9026ms
2025-10-12 15:32:38.291 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:32:38.291 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:32:38.291 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 15:32:38.293 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:32:38.298 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:32:38.305 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:32:38.307 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 64.3888ms
2025-10-12 15:32:38.310 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:32:38.311 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 68.9229ms
2025-10-12 15:32:38.313 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:32:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:32:38.314 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:32:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:32:38.318 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:32:38.323 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:32:38'.
2025-10-12 15:32:38.325 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:32:38'.
2025-10-12 15:32:38.327 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 15:32:38.328 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:32:38.329 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:32:38.333 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:32:38.334 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:32:38.338 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:32:38.342 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:32:38.342 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 15:32:38.344 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.3945ms
2025-10-12 15:32:38.347 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:32:38.348 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:32:38.348 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:32:38.351 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:32:38.352 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 20.8518ms
2025-10-12 15:32:38.354 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 64.0681ms
2025-10-12 15:32:38.355 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 15.9484ms
2025-10-12 15:32:38.357 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:32:38.362 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:32:38.363 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 71.8503ms
2025-10-12 15:32:38.365 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 73.8354ms
2025-10-12 15:32:38.366 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 15:32:38.376 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:32:38.377 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 11.1779ms
2025-10-12 15:32:38.379 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 15:32:38.384 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:32:38.385 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:32:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:32:38.387 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:32:38'.
2025-10-12 15:32:38.389 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:32:38.391 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 15:32:38.405 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 15:32:38.409 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 15:32:38.412 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 18.3429ms
2025-10-12 15:32:38.414 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:32:38.417 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 38.1419ms
2025-10-12 15:32:41.222 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:32:41.222 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:32:41.225 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:32:41.228 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:32:41.230 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:32:41'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:32:41.230 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:32:41'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:32:41.232 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:32:41'.
2025-10-12 15:32:41.233 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:32:41'.
2025-10-12 15:32:41.234 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:32:41.236 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:32:41.237 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:32:41.238 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:32:41.242 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:32:41.245 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:32:41.248 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:32:41.251 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:32:41.253 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.1133ms
2025-10-12 15:32:41.254 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 11.1217ms
2025-10-12 15:32:41.256 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:32:41.257 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:32:41.259 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 37.1899ms
2025-10-12 15:32:41.260 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 38.3369ms
2025-10-12 15:33:16.610 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:33:16.614 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:33:16.615 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 5.1524ms
2025-10-12 15:33:16.617 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:33:16.620 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:33:16.624 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:33:16.628 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:33:16.629 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 12.0916ms
2025-10-12 15:33:16.631 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:33:16'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:33:16.632 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:33:16.637 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:33:16'.
2025-10-12 15:33:16.641 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:33:16.643 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:33:16.644 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:33:16'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:33:16.645 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:33:16.647 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:33:16'.
2025-10-12 15:33:16.651 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:33:16.652 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:33:16.652 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:33:16.655 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:33:16.660 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.0849ms
2025-10-12 15:33:16.660 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:33:16.662 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:33:16.665 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:33:16.666 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 45.8285ms
2025-10-12 15:33:16.667 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.5423ms
2025-10-12 15:33:16.673 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:33:16.674 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 41.7608ms
2025-10-12 15:33:18.545 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:33:18.545 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:33:18.549 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:33:18.552 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:33:18.553 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:33:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:33:18.554 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:33:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:33:18.556 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:33:18'.
2025-10-12 15:33:18.557 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:33:18'.
2025-10-12 15:33:18.558 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:33:18.560 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:33:18.561 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:33:18.562 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:33:18.566 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:33:18.567 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:33:18.569 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:33:18.571 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:33:18.572 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 7.7151ms
2025-10-12 15:33:18.573 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 6.5222ms
2025-10-12 15:33:18.574 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:33:18.575 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:33:18.577 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 31.7987ms
2025-10-12 15:33:18.578 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 32.5383ms
2025-10-12 15:33:35.068 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:33:35.070 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:33:35.073 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:33:35.076 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:33:35.077 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 9.1131ms
2025-10-12 15:33:35.078 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 8.0784ms
2025-10-12 15:33:35.080 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:33:35.080 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:33:35.089 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:33:35.091 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:33:35.093 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:33:35'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:33:35.093 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:33:35'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:33:35.095 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:33:35'.
2025-10-12 15:33:35.096 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:33:35'.
2025-10-12 15:33:35.098 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:33:35.099 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:33:35.100 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:33:35.101 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:33:35.105 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:33:35.106 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:33:35.108 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:33:35.110 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:33:35.112 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.8255ms
2025-10-12 15:33:35.113 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.3066ms
2025-10-12 15:33:35.115 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:33:35.116 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:33:35.118 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 38.4091ms
2025-10-12 15:33:35.119 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 39.0415ms
2025-10-12 15:33:35.147 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:33:35.147 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:33:35.148 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 15:33:35.149 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:33:35.152 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:33:35.153 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:33:35.154 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:33:35'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:33:35.155 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:33:35'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:33:35.155 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 6.6292ms
2025-10-12 15:33:35.157 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:33:35'.
2025-10-12 15:33:35.157 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 15:33:35.158 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:33:35.164 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:33:35'.
2025-10-12 15:33:35.167 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:33:35.168 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:33:35.169 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:33:35.170 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:33:35.173 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:33:35.174 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:33:35.175 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 15:33:35.179 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:33:35.180 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:33:35.184 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 15:33:35.184 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:33:35.186 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 14.1793ms
2025-10-12 15:33:35.189 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:33:35.190 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.3259ms
2025-10-12 15:33:35.191 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:33:35.193 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 11.2598ms
2025-10-12 15:33:35.195 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:33:35.196 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 49.5352ms
2025-10-12 15:33:35.198 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:33:35.199 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 52.2769ms
2025-10-12 15:33:35.204 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 47.4533ms
2025-10-12 15:33:35.248 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 15:33:35.252 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:33:35.253 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 4.6551ms
2025-10-12 15:33:35.255 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 15:33:35.260 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:33:35.262 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:33:35'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:33:35.264 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:33:35'.
2025-10-12 15:33:35.265 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:33:35.266 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 15:33:35.272 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 15:33:35.275 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 15:33:35.276 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 7.744ms
2025-10-12 15:33:35.278 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:33:35.280 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 24.8026ms
2025-10-12 15:33:45.772 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:33:45.772 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:33:45.775 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:33:45.778 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:33:45.779 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 6.9834ms
2025-10-12 15:33:45.780 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 7.862ms
2025-10-12 15:33:45.780 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:33:45.781 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:33:45.790 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:33:45.794 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:33:45.794 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:33:45'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:33:45.795 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:33:45'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:33:45.797 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:33:45'.
2025-10-12 15:33:45.799 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:33:45'.
2025-10-12 15:33:45.800 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:33:45.801 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:33:45.802 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:33:45.804 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:33:45.821 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:33:45.821 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:33:45.825 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:33:45.827 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:33:45.829 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 20.2856ms
2025-10-12 15:33:45.830 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 24.1326ms
2025-10-12 15:33:45.832 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:33:45.834 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:33:45.835 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 53.9488ms
2025-10-12 15:33:45.837 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 56.292ms
2025-10-12 15:33:49.227 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 15:33:49.232 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:33:49.233 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 5.6227ms
2025-10-12 15:33:49.234 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 15:33:49.240 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:33:49.241 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:33:49.243 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 15:33:49.256 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 15:33:49.260 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:33:49.262 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 16.3458ms
2025-10-12 15:33:49.264 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:33:49.265 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 30.8014ms
2025-10-12 15:33:49.268 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 15:33:49.271 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:33:49.272 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 4.7737ms
2025-10-12 15:33:49.274 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 15:33:49.280 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:33:49.281 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:33:49'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:33:49.283 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:33:49'.
2025-10-12 15:33:49.284 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:33:49.286 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 15:33:49.297 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 15:33:49.300 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 15:33:49.302 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 14.3626ms
2025-10-12 15:33:49.303 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:33:49.307 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 33.3027ms
2025-10-12 15:33:50.747 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 15:33:50.752 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:33:50.753 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:33:50.754 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 15:33:50.759 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 15:33:50.763 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:33:50.765 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 8.2659ms
2025-10-12 15:33:50.767 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:33:50.768 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 21.2331ms
2025-10-12 15:33:50.775 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 15:33:50.779 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:33:50.780 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:33:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:33:50.782 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:33:50'.
2025-10-12 15:33:50.783 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:33:50.784 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 15:33:50.788 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 15:33:50.791 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 15:33:50.793 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 6.5959ms
2025-10-12 15:33:50.795 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:33:50.802 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 26.886ms
2025-10-12 15:35:00.535 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:35:00.535 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:35:00.540 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:35:00.543 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:35:00.544 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 9.3572ms
2025-10-12 15:35:00.545 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 10.2285ms
2025-10-12 15:35:00.549 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:35:00.549 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:35:00.556 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:35:00.559 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:35:00.560 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:35:00'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:35:00.561 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:35:00'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:35:00.563 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:35:00'.
2025-10-12 15:35:00.565 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:35:00'.
2025-10-12 15:35:00.566 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:35:00.567 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:35:00.569 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:35:00.570 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:35:00.578 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:35:00.578 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:35:00.582 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:35:00.584 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:35:00.586 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 11.5045ms
2025-10-12 15:35:00.587 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 14.967ms
2025-10-12 15:35:00.589 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:35:00.590 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:35:00.592 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 42.1164ms
2025-10-12 15:35:00.593 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 43.4151ms
2025-10-12 15:35:00.594 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:35:00.595 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:35:00.597 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 15:35:00.604 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:35:00.607 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:35:00.610 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:35:00.611 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:35:00'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:35:00.612 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:35:00'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:35:00.612 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 15.811ms
2025-10-12 15:35:00.614 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:35:00'.
2025-10-12 15:35:00.615 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 15:35:00.616 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:35:00'.
2025-10-12 15:35:00.622 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:35:00.625 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:35:00.626 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:35:00.627 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:35:00.628 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:35:00.629 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:35:00.632 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 15:35:00.633 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:35:00.635 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:35:00.639 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:35:00.642 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:35:00.643 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.1288ms
2025-10-12 15:35:00.644 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 15:35:00.644 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 10.0814ms
2025-10-12 15:35:00.646 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:35:00.650 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:35:00.650 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:35:00.652 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 57.3029ms
2025-10-12 15:35:00.653 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 17.0329ms
2025-10-12 15:35:00.655 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 59.6009ms
2025-10-12 15:35:00.660 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:35:00.665 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 50.138ms
2025-10-12 15:35:00.709 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 15:35:00.713 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:35:00.714 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 4.4138ms
2025-10-12 15:35:00.717 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 15:35:00.720 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:35:00.721 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:35:00'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:35:00.723 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:35:00'.
2025-10-12 15:35:00.724 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:35:00.726 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 15:35:00.742 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 15:35:00.746 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 15:35:00.747 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 19.5499ms
2025-10-12 15:35:00.749 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:35:00.750 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 33.7692ms
2025-10-12 15:35:18.782 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:35:18.782 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:35:18.787 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:35:18.791 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:35:18.792 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 9.3459ms
2025-10-12 15:35:18.793 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 10.2467ms
2025-10-12 15:35:18.793 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:35:18.794 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:35:18.801 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:35:18.804 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:35:18.806 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:35:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:35:18.807 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:35:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:35:18.808 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:35:18'.
2025-10-12 15:35:18.810 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:35:18'.
2025-10-12 15:35:18.811 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:35:18.812 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:35:18.813 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:35:18.815 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:35:18.819 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:35:18.821 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:35:18.822 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:35:18.824 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:35:18.826 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.9119ms
2025-10-12 15:35:18.828 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.3227ms
2025-10-12 15:35:18.829 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:35:18.830 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:35:18.832 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 38.606ms
2025-10-12 15:35:18.833 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 39.1105ms
2025-10-12 15:35:18.850 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:35:18.850 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:35:18.852 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 15:35:18.854 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:35:18.858 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:35:18.861 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:35:18.863 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:35:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:35:18.864 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:35:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:35:18.865 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 12.8893ms
2025-10-12 15:35:18.866 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 15:35:18.867 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:35:18'.
2025-10-12 15:35:18.869 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:35:18'.
2025-10-12 15:35:18.876 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:35:18.877 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:35:18.879 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:35:18.880 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:35:18.881 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:35:18.883 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:35:18.884 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 15:35:18.889 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:35:18.890 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:35:18.893 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 15:35:18.894 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:35:18.897 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:35:18.900 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:35:18.902 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 15.1543ms
2025-10-12 15:35:18.903 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 13.5691ms
2025-10-12 15:35:18.905 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 12.813ms
2025-10-12 15:35:18.906 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:35:18.908 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:35:18.909 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:35:18.911 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 60.3498ms
2025-10-12 15:35:18.912 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 61.7058ms
2025-10-12 15:35:18.915 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 48.4746ms
2025-10-12 15:35:18.947 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 15:35:18.951 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:35:18.952 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 4.9106ms
2025-10-12 15:35:18.954 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 15:35:18.960 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:35:18.961 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:35:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:35:18.963 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:35:18'.
2025-10-12 15:35:18.964 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:35:18.966 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 15:35:18.969 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 15:35:18.972 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 15:35:18.974 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 6.2425ms
2025-10-12 15:35:18.976 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:35:18.977 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 22.952ms
2025-10-12 15:36:01.921 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:36:01.921 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:36:01.924 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:01.928 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:01.929 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 8.2497ms
2025-10-12 15:36:01.930 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 9.4327ms
2025-10-12 15:36:01.932 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:36:01.932 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:36:01.942 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:01.945 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:01.946 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:01'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:36:01.947 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:01'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:36:01.949 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:01'.
2025-10-12 15:36:01.950 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:01'.
2025-10-12 15:36:01.952 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:36:01.953 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:36:01.954 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:36:01.956 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:36:01.965 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:36:01.965 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:36:01.970 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:36:01.974 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:36:01.976 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 17.619ms
2025-10-12 15:36:01.977 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 16.3495ms
2025-10-12 15:36:01.979 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:36:01.981 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:36:01.982 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 50.5199ms
2025-10-12 15:36:01.983 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 51.2023ms
2025-10-12 15:36:12.986 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:36:12.986 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:36:12.991 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:12.995 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:12.996 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 9.5172ms
2025-10-12 15:36:12.996 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 10.3589ms
2025-10-12 15:36:12.998 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:36:12.999 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:36:13.008 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:13.011 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:13.012 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:36:13.013 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:36:13.015 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:13'.
2025-10-12 15:36:13.017 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:13'.
2025-10-12 15:36:13.018 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:36:13.020 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:36:13.021 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:36:13.022 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:36:13.028 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:36:13.028 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:36:13.031 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:36:13.034 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:36:13.036 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 11.426ms
2025-10-12 15:36:13.037 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 10.8552ms
2025-10-12 15:36:13.039 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:36:13.040 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:36:13.042 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 43.7057ms
2025-10-12 15:36:13.043 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 43.8794ms
2025-10-12 15:36:13.057 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:36:13.057 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:36:13.058 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 15:36:13.060 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:13.064 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:13.067 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:13.068 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:36:13.069 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:36:13.070 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 11.4569ms
2025-10-12 15:36:13.072 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:13'.
2025-10-12 15:36:13.072 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 15:36:13.074 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:13'.
2025-10-12 15:36:13.078 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:36:13.081 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:13.083 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:36:13.084 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:36:13.086 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:36:13.087 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:36:13.090 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 15:36:13.091 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:36:13.094 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:36:13.097 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:36:13.099 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:36:13.100 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 11.1894ms
2025-10-12 15:36:13.102 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.3556ms
2025-10-12 15:36:13.104 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:36:13.104 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 15:36:13.105 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:36:13.106 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 48.9372ms
2025-10-12 15:36:13.109 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:36:13.110 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 52.9937ms
2025-10-12 15:36:13.116 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 22.0883ms
2025-10-12 15:36:13.122 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:36:13.123 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 51.0281ms
2025-10-12 15:36:13.134 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 15:36:13.136 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:13.137 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 3.7376ms
2025-10-12 15:36:13.141 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 15:36:13.144 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:13.146 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:36:13.149 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:13'.
2025-10-12 15:36:13.150 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:36:13.152 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 15:36:13.163 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 15:36:13.165 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 15:36:13.168 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 13.9259ms
2025-10-12 15:36:13.169 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:36:13.170 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 29.2266ms
2025-10-12 15:36:17.976 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:36:17.976 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:36:17.981 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:17.985 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:17.987 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:17'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:36:17.989 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:17'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:36:17.991 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:17'.
2025-10-12 15:36:17.995 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:17'.
2025-10-12 15:36:17.996 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:36:17.997 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 15:36:17.998 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:36:17.999 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:36:18.003 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:18.004 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:36:18.008 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:36:18.008 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:36:18.011 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:36:18.011 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 15:36:18.015 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:36:18.018 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:36:18.022 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 15:36:18.022 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 15.146ms
2025-10-12 15:36:18.023 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:36:18.024 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 13.5795ms
2025-10-12 15:36:18.024 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:36:18.027 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:36:18.028 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:36:18.031 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:18.033 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:36:18.037 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:18.038 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 18.3011ms
2025-10-12 15:36:18.040 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 63.9249ms
2025-10-12 15:36:18.041 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:36:18.042 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 66.5073ms
2025-10-12 15:36:18.043 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:36:18.045 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:36:18.050 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:18'.
2025-10-12 15:36:18.055 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:18'.
2025-10-12 15:36:18.057 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 59.6285ms
2025-10-12 15:36:18.058 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:36:18.060 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:36:18.060 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 15:36:18.066 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:36:18.068 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:36:18.071 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:18.074 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:36:18.076 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:36:18.076 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:36:18.079 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:36:18.081 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:36:18.083 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:18'.
2025-10-12 15:36:18.085 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.2965ms
2025-10-12 15:36:18.087 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 11.84ms
2025-10-12 15:36:18.088 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:36:18.089 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:36:18.091 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:36:18.092 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 15:36:18.093 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 70.3384ms
2025-10-12 15:36:18.094 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 69.9231ms
2025-10-12 15:36:18.099 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 15:36:18.106 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 15:36:18.108 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 10.7658ms
2025-10-12 15:36:18.109 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:36:18.110 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 49.8208ms
2025-10-12 15:36:20.844 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:36:20.845 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:36:20.848 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:20.851 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:20.852 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 7.2615ms
2025-10-12 15:36:20.853 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 8.2419ms
2025-10-12 15:36:20.853 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:36:20.854 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:36:20.863 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:20.866 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:20.867 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:36:20.868 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:36:20.870 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:20'.
2025-10-12 15:36:20.872 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:20'.
2025-10-12 15:36:20.873 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 15:36:20.874 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:36:20.875 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:36:20.878 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:20.880 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:36:20.881 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:36:20.882 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 8.9118ms
2025-10-12 15:36:20.883 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 15:36:20.885 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:36:20.887 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:36:20.892 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:20.895 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:36:20.898 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:36:20.899 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:36:20.900 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 16.7037ms
2025-10-12 15:36:20.901 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:36:20.902 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 16.7104ms
2025-10-12 15:36:20.903 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:36:20.903 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 15:36:20.905 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:36:20.909 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:20.910 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:36:20.914 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:20.917 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 64.3424ms
2025-10-12 15:36:20.918 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 15:36:20.918 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:36:20.919 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 64.5503ms
2025-10-12 15:36:20.920 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:36:20.926 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:36:20.927 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:20'.
2025-10-12 15:36:20.932 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:20'.
2025-10-12 15:36:20.934 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 18.1276ms
2025-10-12 15:36:20.935 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:36:20.936 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:36:20.938 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:36:20.939 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:36:20.940 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:36:20.941 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 57.3615ms
2025-10-12 15:36:20.942 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 15:36:20.945 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:36:20.947 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:36:20.952 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:20.955 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:36:20.957 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:36:20.958 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 15.8037ms
2025-10-12 15:36:20.960 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 15:36:20.960 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 16.9136ms
2025-10-12 15:36:20.961 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 15.5672ms
2025-10-12 15:36:20.968 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:20.970 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:36:20.971 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:36:20.972 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:36:20.973 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 72.1814ms
2025-10-12 15:36:20.975 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 71.6439ms
2025-10-12 15:36:20.976 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:20'.
2025-10-12 15:36:20.985 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:36:20.987 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 15:36:20.990 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 15:36:20.994 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 15:36:20.995 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 5.8332ms
2025-10-12 15:36:20.997 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:36:20.998 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 38.3929ms
2025-10-12 15:36:23.958 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:36:23.958 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:36:23.961 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:23.964 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:23.965 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:36:23.966 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:36:23.967 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:23'.
2025-10-12 15:36:23.969 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:23'.
2025-10-12 15:36:23.970 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:36:23.972 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:36:23.973 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:36:23.974 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:36:23.977 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:36:23.980 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:36:23.980 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:36:23.983 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:36:23.985 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.9466ms
2025-10-12 15:36:23.986 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:36:23.987 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.604ms
2025-10-12 15:36:23.987 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:36:23.988 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:36:23.990 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:23.992 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:36:23.995 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:23.996 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 37.8757ms
2025-10-12 15:36:23.997 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:36:24.000 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 41.3238ms
2025-10-12 15:36:24.001 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:24'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:36:24.006 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:23'.
2025-10-12 15:36:24.012 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:24'.
2025-10-12 15:36:24.013 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:36:24.014 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:36:24.015 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:36:24.016 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:36:24.019 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:36:24.020 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:36:24.022 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:36:24.024 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:36:24.025 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.3929ms
2025-10-12 15:36:24.026 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:36:24.026 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 7.5775ms
2025-10-12 15:36:24.028 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:36:24.030 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:24.031 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:36:24.033 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 46.0696ms
2025-10-12 15:36:24.034 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:24'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:36:24.035 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 47.3867ms
2025-10-12 15:36:24.040 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:24'.
2025-10-12 15:36:24.045 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:36:24.046 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:36:24.050 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:36:24.053 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:36:24.056 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.0748ms
2025-10-12 15:36:24.056 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:36:24.057 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:36:24.060 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:24.061 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 35.7843ms
2025-10-12 15:36:24.063 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:24'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:36:24.068 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:24'.
2025-10-12 15:36:24.069 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:36:24.071 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:36:24.074 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:36:24.077 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:36:24.080 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 6.8751ms
2025-10-12 15:36:24.081 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:36:24.083 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 26.8171ms
2025-10-12 15:36:34.132 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:36:34.132 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:36:34.132 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:36:34.132 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:36:34.136 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:34.140 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:34.144 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:34.148 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:34.149 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 17.3661ms
2025-10-12 15:36:34.151 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 18.9523ms
2025-10-12 15:36:34.152 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 19.7983ms
2025-10-12 15:36:34.153 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 21.1456ms
2025-10-12 15:36:34.154 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:36:34.154 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:36:34.177 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:34.181 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:34.182 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:34'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:36:34.183 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:34'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:36:34.185 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:34'.
2025-10-12 15:36:34.187 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:34'.
2025-10-12 15:36:34.189 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:36:34.191 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:36:34.192 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:36:34.194 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:36:34.199 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:36:34.200 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:36:34.204 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:36:34.207 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:36:34.209 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.2488ms
2025-10-12 15:36:34.210 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.8933ms
2025-10-12 15:36:34.210 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:36:34.211 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:36:34.212 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:36:34.213 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:36:34.218 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:34.219 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 64.5281ms
2025-10-12 15:36:34.222 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:36:34.223 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 68.6612ms
2025-10-12 15:36:34.225 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:34'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:36:34.230 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:34'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:36:34.236 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:34'.
2025-10-12 15:36:34.238 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:36:34'.
2025-10-12 15:36:34.239 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:36:34.241 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:36:34.242 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:36:34.243 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:36:34.247 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:36:34.249 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:36:34.250 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:36:34.252 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:36:34.254 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.3557ms
2025-10-12 15:36:34.255 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 7.6447ms
2025-10-12 15:36:34.257 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:36:34.258 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:36:34.260 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 49.1879ms
2025-10-12 15:36:34.261 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 49.476ms
2025-10-12 15:37:18.266 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:37:18.266 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:37:18.269 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:37:18.273 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:37:18.273 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 7.6917ms
2025-10-12 15:37:18.274 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 8.0494ms
2025-10-12 15:37:18.275 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:37:18.276 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:37:18.287 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:37:18.290 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:37:18.291 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:37:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:37:18.292 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:37:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:37:18.294 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:37:18'.
2025-10-12 15:37:18.297 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:37:18'.
2025-10-12 15:37:18.298 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:37:18.300 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:37:18.301 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:37:18.302 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:37:18.312 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:37:18.312 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:37:18.316 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:37:18.319 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:37:18.320 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 15.4673ms
2025-10-12 15:37:18.322 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 14.9018ms
2025-10-12 15:37:18.324 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:37:18.326 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:37:18.327 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 52.0166ms
2025-10-12 15:37:18.329 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 52.1409ms
2025-10-12 15:37:45.512 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:37:45.512 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:37:45.514 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:37:45.517 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:37:45.517 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 5.4934ms
2025-10-12 15:37:45.518 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 6.0802ms
2025-10-12 15:37:45.521 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:37:45.521 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:37:45.531 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:37:45.533 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:37:45.534 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:37:45'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:37:45.535 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:37:45'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:37:45.536 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 15:37:45.537 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:37:45'.
2025-10-12 15:37:45.539 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:37:45'.
2025-10-12 15:37:45.542 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:37:45.543 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:37:45.545 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:37:45.546 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 9.8774ms
2025-10-12 15:37:45.547 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:37:45.548 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 15:37:45.549 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:37:45.557 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:37:45.558 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:37:45.563 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:37:45.564 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:37:45.564 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:37:45.567 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:37:45.569 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 13.8373ms
2025-10-12 15:37:45.570 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:37:45.570 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 15:37:45.572 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 11.2703ms
2025-10-12 15:37:45.573 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:37:45.573 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:37:45.576 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:37:45.580 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:37:45.583 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:37:45.584 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 62.9325ms
2025-10-12 15:37:45.585 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:37:45'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:37:45.586 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 64.8741ms
2025-10-12 15:37:45.586 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 15:37:45.587 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:37:45'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:37:45.593 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:37:45'.
2025-10-12 15:37:45.599 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:37:45.601 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:37:45'.
2025-10-12 15:37:45.602 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:37:45.604 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 25.2083ms
2025-10-12 15:37:45.605 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:37:45.606 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:37:45.607 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:37:45.608 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:37:45.611 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 63.0612ms
2025-10-12 15:37:45.614 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:37:45.614 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 15:37:45.615 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:37:45.621 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:37:45.623 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:37:45.626 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:37:45.627 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 16.3208ms
2025-10-12 15:37:45.628 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 13.5511ms
2025-10-12 15:37:45.629 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 15:37:45.630 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 16.0334ms
2025-10-12 15:37:45.631 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:37:45.637 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:37:45.639 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:37:45.640 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 70.8403ms
2025-10-12 15:37:45.642 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:37:45'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:37:45.643 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 69.8395ms
2025-10-12 15:37:45.648 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:37:45'.
2025-10-12 15:37:45.653 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:37:45.654 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 15:37:45.667 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 15:37:45.670 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 15:37:45.671 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 14.8323ms
2025-10-12 15:37:45.673 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:37:45.675 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 46.1078ms
2025-10-12 15:38:59.223 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:38:59.224 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:38:59.227 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:38:59.232 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:38:59.233 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 9.225ms
2025-10-12 15:38:59.234 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 9.8045ms
2025-10-12 15:38:59.237 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:38:59.238 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:38:59.246 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:38:59.250 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:38:59.251 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:38:59'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:38:59.252 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:38:59'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:38:59.254 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:38:59'.
2025-10-12 15:38:59.256 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:38:59'.
2025-10-12 15:38:59.257 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:38:59.258 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:38:59.259 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:38:59.261 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:38:59.269 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:38:59.269 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:38:59.272 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:38:59.275 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:38:59.276 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 13.5197ms
2025-10-12 15:38:59.278 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.5138ms
2025-10-12 15:38:59.280 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:38:59.281 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:38:59.283 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 45.97ms
2025-10-12 15:38:59.284 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 45.9778ms
2025-10-12 15:38:59.415 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:38:59.417 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:38:59.419 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:38:59.421 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 15:38:59.422 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:38:59.423 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:38:59'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:38:59.425 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:38:59.426 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:38:59'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:38:59.429 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:38:59'.
2025-10-12 15:38:59.431 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 9.3099ms
2025-10-12 15:38:59.433 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:38:59'.
2025-10-12 15:38:59.433 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 15:38:59.435 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:38:59.441 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:38:59.445 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:38:59.446 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:38:59.448 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:38:59.450 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:38:59.454 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:38:59.457 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:38:59.457 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 15:38:59.460 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:38:59.464 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:38:59.469 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 16.3577ms
2025-10-12 15:38:59.471 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 15.0507ms
2025-10-12 15:38:59.473 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:38:59.475 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:38:59.477 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 61.2991ms
2025-10-12 15:38:59.479 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 61.8143ms
2025-10-12 15:38:59.483 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 15:38:59.494 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:38:59.496 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 29.626ms
2025-10-12 15:38:59.498 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:38:59.500 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 67.1076ms
2025-10-12 15:38:59.672 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 15:38:59.677 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:38:59.679 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 7.1504ms
2025-10-12 15:38:59.683 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 15:38:59.688 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:38:59.690 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:38:59'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:38:59.693 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:38:59'.
2025-10-12 15:38:59.695 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:38:59.697 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 15:38:59.713 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 15:38:59.719 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 15:38:59.722 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 22.2659ms
2025-10-12 15:38:59.724 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:38:59.727 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 43.7858ms
2025-10-12 15:39:10.035 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:39:10.036 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:39:10.040 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:39:10.044 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:39:10.046 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 10.95ms
2025-10-12 15:39:10.047 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 11.369ms
2025-10-12 15:39:10.050 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:39:10.052 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:39:10.061 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:39:10.065 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:39:10.066 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:39:10'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:39:10.067 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:39:10'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:39:10.069 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:39:10'.
2025-10-12 15:39:10.071 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:39:10'.
2025-10-12 15:39:10.073 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:39:10.074 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:39:10.075 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:39:10.076 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:39:10.080 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:39:10.082 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:39:10.083 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:39:10.086 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:39:10.087 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.8964ms
2025-10-12 15:39:10.089 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.3608ms
2025-10-12 15:39:10.091 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:39:10.093 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:39:10.094 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 44.6238ms
2025-10-12 15:39:10.096 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 44.4535ms
2025-10-12 15:39:11.694 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:39:11.694 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:39:11.698 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:39:11.703 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:39:11.704 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:39:11'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:39:11.705 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:39:11'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:39:11.707 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:39:11'.
2025-10-12 15:39:11.709 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:39:11'.
2025-10-12 15:39:11.711 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:39:11.713 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:39:11.714 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:39:11.716 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:39:11.721 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:39:11.722 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:39:11.723 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:39:11.725 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:39:11.727 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.7655ms
2025-10-12 15:39:11.728 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.9946ms
2025-10-12 15:39:11.730 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:39:11.731 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:39:11.733 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 38.4207ms
2025-10-12 15:39:11.734 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 39.7078ms
2025-10-12 15:39:14.406 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:39:14.406 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:39:14.410 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:39:14.413 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:39:14.415 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:39:14'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:39:14.416 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:39:14'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:39:14.417 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:39:14'.
2025-10-12 15:39:14.419 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:39:14'.
2025-10-12 15:39:14.421 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:39:14.422 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:39:14.423 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:39:14.425 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:39:14.432 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:39:14.433 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:39:14.435 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:39:14.438 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:39:14.439 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.0557ms
2025-10-12 15:39:14.441 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 11.7129ms
2025-10-12 15:39:14.442 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:39:14.444 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:39:14.446 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 40.2569ms
2025-10-12 15:39:14.447 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 41.2746ms
2025-10-12 15:39:14.462 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:39:14.462 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:39:14.464 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 15:39:14.465 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:39:14.468 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:39:14.472 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:39:14.473 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:39:14'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:39:14.474 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:39:14'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:39:14.475 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 10.7586ms
2025-10-12 15:39:14.476 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:39:14'.
2025-10-12 15:39:14.477 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 15:39:14.478 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:39:14'.
2025-10-12 15:39:14.483 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:39:14.487 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:39:14.488 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:39:14.490 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:39:14.490 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:39:14.491 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:39:14.495 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 15:39:14.495 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:39:14.498 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:39:14.502 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:39:14.504 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:39:14.506 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.1936ms
2025-10-12 15:39:14.508 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 10.4774ms
2025-10-12 15:39:14.509 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:39:14.510 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:39:14.511 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 15:39:14.512 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 49.8102ms
2025-10-12 15:39:14.513 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 50.9737ms
2025-10-12 15:39:14.516 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:39:14.524 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 25.2293ms
2025-10-12 15:39:14.526 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:39:14.527 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 50.2083ms
2025-10-12 15:39:14.552 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 15:39:14.557 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:39:14.558 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 5.7966ms
2025-10-12 15:39:14.559 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 15:39:14.565 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:39:14.566 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:39:14'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:39:14.567 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:39:14'.
2025-10-12 15:39:14.569 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:39:14.570 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 15:39:14.584 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 15:39:14.587 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 15:39:14.589 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 16.5231ms
2025-10-12 15:39:14.592 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:39:14.593 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 33.7074ms
2025-10-12 15:40:52.758 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:40:52.761 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:40:52.762 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:40:52.768 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:40:52.769 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 10.8539ms
2025-10-12 15:40:52.771 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 9.6666ms
2025-10-12 15:40:52.773 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:40:52.773 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:40:52.784 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:40:52.788 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:40:52.789 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:40:52'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:40:52.790 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:40:52'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:40:52.792 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:40:52'.
2025-10-12 15:40:52.795 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:40:52'.
2025-10-12 15:40:52.797 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:40:52.798 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:40:52.799 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:40:52.801 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:40:52.813 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:40:52.813 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:40:52.817 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:40:52.821 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:40:52.823 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 19.3144ms
2025-10-12 15:40:52.826 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 18.708ms
2025-10-12 15:40:52.827 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:40:52.829 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:40:52.831 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 57.2539ms
2025-10-12 15:40:52.832 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 58.792ms
2025-10-12 15:40:56.559 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:40:56.559 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:40:56.563 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:40:56.566 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:40:56.567 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:40:56'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:40:56.568 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:40:56'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:40:56.569 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:40:56'.
2025-10-12 15:40:56.571 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:40:56'.
2025-10-12 15:40:56.572 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:40:56.574 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:40:56.575 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:40:56.576 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:40:56.581 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:40:56.582 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:40:56.583 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:40:56.586 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:40:56.587 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 7.6518ms
2025-10-12 15:40:56.588 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.304ms
2025-10-12 15:40:56.590 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:40:56.591 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:40:56.592 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 33.0489ms
2025-10-12 15:40:56.593 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 34.0486ms
2025-10-12 15:41:32.761 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:41:32.765 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:41:32.767 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:41:32.770 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:41:32.772 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 10.9337ms
2025-10-12 15:41:32.773 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 7.6845ms
2025-10-12 15:41:32.778 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:41:32.778 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:41:32.789 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:41:32.794 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:41:32.795 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:41:32'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:41:32.796 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:41:32'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:41:32.798 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:41:32'.
2025-10-12 15:41:32.801 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:41:32'.
2025-10-12 15:41:32.803 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:41:32.804 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:41:32.806 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:41:32.808 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:41:32.819 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:41:32.819 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:41:32.824 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:41:32.827 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:41:32.829 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 17.1435ms
2025-10-12 15:41:32.831 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 16.2118ms
2025-10-12 15:41:32.832 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:41:32.834 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:41:32.836 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 58.2756ms
2025-10-12 15:41:32.838 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 59.9588ms
2025-10-12 15:41:33.727 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:41:33.728 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:41:33.731 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:41:33.735 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:41:33.737 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:41:33'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:41:33.738 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:41:33'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:41:33.740 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:41:33'.
2025-10-12 15:41:33.742 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:41:33'.
2025-10-12 15:41:33.743 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:41:33.745 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:41:33.746 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:41:33.748 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:41:33.752 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:41:33.754 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:41:33.756 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:41:33.759 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:41:33.760 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.5568ms
2025-10-12 15:41:33.762 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.7869ms
2025-10-12 15:41:33.764 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:41:33.766 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:41:33.767 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 39.3099ms
2025-10-12 15:41:33.768 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 40.6738ms
2025-10-12 15:41:44.857 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:41:44.859 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:41:44.862 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:41:44.866 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:41:44.867 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 9.8909ms
2025-10-12 15:41:44.868 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 9.522ms
2025-10-12 15:41:44.869 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:41:44.871 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:41:44.879 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:41:44.883 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:41:44.884 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:41:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:41:44.884 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:41:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:41:44.886 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:41:44'.
2025-10-12 15:41:44.888 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:41:44'.
2025-10-12 15:41:44.889 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:41:44.890 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:41:44.892 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:41:44.893 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:41:44.896 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:41:44.898 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:41:44.900 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:41:44.903 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:41:44.905 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.6456ms
2025-10-12 15:41:44.906 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.5757ms
2025-10-12 15:41:44.907 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:41:44.908 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:41:44.910 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 41.2993ms
2025-10-12 15:41:44.911 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 40.5777ms
2025-10-12 15:41:44.915 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:41:44.915 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:41:44.917 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 15:41:44.922 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:41:44.925 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:41:44.927 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:41:44.929 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:41:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:41:44.930 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:41:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:41:44.931 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 13.2284ms
2025-10-12 15:41:44.933 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:41:44'.
2025-10-12 15:41:44.933 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 15:41:44.934 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:41:44'.
2025-10-12 15:41:44.940 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:41:44.942 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:41:44.944 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:41:44.945 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:41:44.947 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:41:44.948 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:41:44.951 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 15:41:44.952 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:41:44.955 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:41:44.958 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:41:44.961 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:41:44.962 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.2418ms
2025-10-12 15:41:44.964 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.4396ms
2025-10-12 15:41:44.964 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 15:41:44.966 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:41:44.967 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:41:44.970 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:41:44.971 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 55.7171ms
2025-10-12 15:41:44.972 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 57.165ms
2025-10-12 15:41:44.974 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 18.685ms
2025-10-12 15:41:44.983 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:41:44.984 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 51.2052ms
2025-10-12 15:41:45.004 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 15:41:45.008 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:41:45.009 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 5.1259ms
2025-10-12 15:41:45.010 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 15:41:45.018 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:41:45.019 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:41:45'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:41:45.020 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:41:45'.
2025-10-12 15:41:45.022 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:41:45.023 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 15:41:45.035 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 15:41:45.038 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 15:41:45.040 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 14.685ms
2025-10-12 15:41:45.042 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:41:45.043 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 32.8153ms
2025-10-12 15:43:54.860 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-12 15:43:54.865 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:43:54.867 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 6.4682ms
2025-10-12 15:43:54.870 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-12 15:43:54.875 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:43:54.877 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:43:54.880 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:43:54.892 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:43:54.896 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:43:54.901 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 18.6752ms
2025-10-12 15:43:54.903 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:43:54.906 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 35.2171ms
2025-10-12 15:43:54.993 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:43:54.995 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:43:55.000 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:43:55.004 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:43:55.005 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 12.1369ms
2025-10-12 15:43:55.006 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 11.7043ms
2025-10-12 15:43:55.011 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:43:55.012 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:43:55.019 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:43:55.022 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:43:55.024 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:43:55'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:43:55.025 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:43:55'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:43:55.028 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:43:55'.
2025-10-12 15:43:55.030 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:43:55'.
2025-10-12 15:43:55.031 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:43:55.033 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:43:55.035 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:43:55.036 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:43:55.044 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:43:55.044 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:43:55.048 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:43:55.050 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:43:55.052 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 11.2052ms
2025-10-12 15:43:55.054 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 15.516ms
2025-10-12 15:43:55.056 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:43:55.058 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:43:55.059 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 47.5428ms
2025-10-12 15:43:55.061 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 50.0901ms
2025-10-12 15:43:59.822 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:43:59.822 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:43:59.825 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:43:59.828 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:43:59.829 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:43:59'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:43:59.830 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:43:59'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:43:59.832 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:43:59'.
2025-10-12 15:43:59.833 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:43:59'.
2025-10-12 15:43:59.835 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:43:59.836 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:43:59.838 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:43:59.839 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:43:59.843 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:43:59.845 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:43:59.846 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:43:59.849 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:43:59.851 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.1707ms
2025-10-12 15:43:59.854 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.5802ms
2025-10-12 15:43:59.855 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:43:59.857 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:43:59.858 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 36.8907ms
2025-10-12 15:43:59.860 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 38.1787ms
2025-10-12 15:44:02.529 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:44:02.529 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:44:02.531 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:44:02.533 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:44:02.534 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 4.7464ms
2025-10-12 15:44:02.535 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 6.0235ms
2025-10-12 15:44:02.536 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:44:02.537 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:44:02.545 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:44:02.548 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:44:02.549 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:44:02'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:44:02.549 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:44:02'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:44:02.551 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:44:02'.
2025-10-12 15:44:02.552 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:44:02'.
2025-10-12 15:44:02.552 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:44:02.553 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:44:02.554 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:44:02.555 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:44:02.557 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:44:02.559 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:44:02.561 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:44:02.562 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:44:02.564 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.7302ms
2025-10-12 15:44:02.565 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 6.8217ms
2025-10-12 15:44:02.566 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:44:02.568 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:44:02.569 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 33.3438ms
2025-10-12 15:44:02.571 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 34.0035ms
2025-10-12 15:45:30.184 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:45:30.185 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:45:30.188 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:45:30.190 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:45:30.191 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 6.9015ms
2025-10-12 15:45:30.192 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 6.7631ms
2025-10-12 15:45:30.193 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:45:30.193 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:45:30.204 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:45:30.206 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:45:30.208 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:45:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:45:30.209 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:45:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:45:30.211 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:45:30'.
2025-10-12 15:45:30.213 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:45:30'.
2025-10-12 15:45:30.214 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:45:30.215 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:45:30.217 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:45:30.219 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:45:30.226 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:45:30.226 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:45:30.229 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:45:30.231 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:45:30.233 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.5499ms
2025-10-12 15:45:30.235 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 13.1546ms
2025-10-12 15:45:30.237 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:45:30.239 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:45:30.240 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 47ms
2025-10-12 15:45:30.242 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 48.5886ms
2025-10-12 15:46:01.857 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:46:01.858 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:46:01.862 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:46:01.865 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:46:01.866 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 9.2725ms
2025-10-12 15:46:01.867 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 9.8632ms
2025-10-12 15:46:01.871 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:46:01.871 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:46:01.879 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:46:01.883 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:46:01.884 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:46:01'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:46:01.885 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:46:01'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:46:01.887 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:46:01'.
2025-10-12 15:46:01.890 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:46:01'.
2025-10-12 15:46:01.891 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:46:01.893 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:46:01.894 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:46:01.896 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:46:01.903 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:46:01.903 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:46:01.906 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:46:01.909 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:46:01.910 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.7917ms
2025-10-12 15:46:01.912 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.3989ms
2025-10-12 15:46:01.914 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:46:01.915 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:46:01.916 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 45.3639ms
2025-10-12 15:46:01.917 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 46.6857ms
2025-10-12 15:51:49.922 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:51:49.922 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:51:49.927 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:51:49.931 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:51:49.932 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 10.79ms
2025-10-12 15:51:49.933 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 11.7655ms
2025-10-12 15:51:49.941 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:51:49.942 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:51:49.947 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:51:49.951 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:51:49.953 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:51:49'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:51:49.954 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:51:49'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:51:49.956 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:51:49'.
2025-10-12 15:51:49.959 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:51:49'.
2025-10-12 15:51:49.961 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:51:49.962 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:51:49.963 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:51:49.965 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:51:50.056 +04:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:51:50.056 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:51:50.061 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:51:50.065 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:51:50.066 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 99.1325ms
2025-10-12 15:51:50.068 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 98.2309ms
2025-10-12 15:51:50.070 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:51:50.072 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:51:50.074 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 132.179ms
2025-10-12 15:51:50.075 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 133.4005ms
2025-10-12 15:51:51.573 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:51:51.573 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:51:51.577 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:51:51.579 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:51:51.580 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:51:51'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:51:51.581 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:51:51'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:51:51.583 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:51:51'.
2025-10-12 15:51:51.586 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:51:51'.
2025-10-12 15:51:51.588 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:51:51.589 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:51:51.591 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:51:51.592 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:51:51.596 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:51:51.598 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:51:51.599 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:51:51.602 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:51:51.603 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.4737ms
2025-10-12 15:51:51.605 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.9364ms
2025-10-12 15:51:51.607 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:51:51.609 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:51:51.610 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 37.4506ms
2025-10-12 15:51:51.612 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 39.0823ms
2025-10-12 15:55:19.389 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:55:19.390 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:55:19.394 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:55:19.398 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:55:19.401 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 11.0767ms
2025-10-12 15:55:19.402 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 12.2095ms
2025-10-12 15:55:19.407 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:55:19.407 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:55:19.413 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:55:19.416 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:55:19.418 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:55:19'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:55:19.419 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:55:19'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:55:19.421 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:55:19'.
2025-10-12 15:55:19.424 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:55:19'.
2025-10-12 15:55:19.425 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:55:19.426 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:55:19.428 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:55:19.429 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:55:19.443 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:55:19.443 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:55:19.446 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:55:19.449 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:55:19.451 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 17.6573ms
2025-10-12 15:55:19.453 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 21.5278ms
2025-10-12 15:55:19.455 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:55:19.457 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:55:19.458 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 51.1506ms
2025-10-12 15:55:19.460 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 52.5496ms
2025-10-12 15:55:20.658 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:55:20.658 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:55:20.663 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:55:20.667 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:55:20.668 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:55:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:55:20.670 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:55:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:55:20.672 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:55:20'.
2025-10-12 15:55:20.674 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:55:20'.
2025-10-12 15:55:20.676 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:55:20.677 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:55:20.679 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:55:20.680 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:55:20.684 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:55:20.686 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:55:20.687 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:55:20.690 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:55:20.692 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.4776ms
2025-10-12 15:55:20.693 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.6576ms
2025-10-12 15:55:20.695 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:55:20.697 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:55:20.698 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 39.3404ms
2025-10-12 15:55:20.699 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 40.9596ms
2025-10-12 15:55:24.929 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:55:24.930 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:55:24.932 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-12 15:55:24.933 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:55:24.937 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:55:24.941 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:55:24.942 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 13.3878ms
2025-10-12 15:55:24.943 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 13.7944ms
2025-10-12 15:55:24.944 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 12.6207ms
2025-10-12 15:55:24.946 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:55:24.946 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:55:24.947 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-12 15:55:24.960 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:55:24.963 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:55:24.966 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:55:24.967 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:55:24'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:55:24.968 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:55:24'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:55:24.969 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:55:24.971 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:55:24'.
2025-10-12 15:55:24.973 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:55:24'.
2025-10-12 15:55:24.974 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:55:24.976 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:55:24.977 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:55:24.981 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:55:24.981 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:55:24.982 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:55:24.986 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:55:24.988 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:55:24.989 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 15:55:24.992 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:55:24.993 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:55:24.995 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 15.1465ms
2025-10-12 15:55:24.998 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:55:25.000 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:55:25.002 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 16.6129ms
2025-10-12 15:55:25.003 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:55:25.003 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:55:25.005 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 15.2212ms
2025-10-12 15:55:25.007 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 17.2255ms
2025-10-12 15:55:25.008 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 15:55:25.008 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:55:25.008 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:55:25.012 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:55:25.013 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 66.2808ms
2025-10-12 15:55:25.019 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:55:25.023 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:55:25.026 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:55:25.027 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 80.8882ms
2025-10-12 15:55:25.028 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:55:25'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:55:25.034 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 87.7054ms
2025-10-12 15:55:25.035 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:55:25.036 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:55:25'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:55:25.043 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:55:25'.
2025-10-12 15:55:25.049 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 15:55:25.051 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:55:25'.
2025-10-12 15:55:25.052 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:55:25.056 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:55:25.057 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:55:25.058 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:55:25.063 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:55:25.066 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:55:25.068 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 7.1672ms
2025-10-12 15:55:25.070 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:55:25.070 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:55:25.070 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 15:55:25.071 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 68.5014ms
2025-10-12 15:55:25.074 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:55:25.077 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:55:25.083 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 20.2592ms
2025-10-12 15:55:25.084 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 29.9292ms
2025-10-12 15:55:25.086 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:55:25.087 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:55:25.089 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 80.6193ms
2025-10-12 15:55:25.090 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 82.0526ms
2025-10-12 15:55:25.150 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 15:55:25.153 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:55:25.155 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 5.1259ms
2025-10-12 15:55:25.157 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 15:55:25.162 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:55:25.163 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:55:25'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:55:25.166 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:55:25'.
2025-10-12 15:55:25.168 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:55:25.170 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 15:55:25.184 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 15:55:25.188 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 15:55:25.190 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 17.6147ms
2025-10-12 15:55:25.192 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:55:25.194 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 36.8957ms
2025-10-12 15:56:05.216 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:56:05.216 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:56:05.223 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:56:05.227 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:56:05.228 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 12.2652ms
2025-10-12 15:56:05.229 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 12.5281ms
2025-10-12 15:56:05.230 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:56:05.230 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:56:05.241 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:56:05.243 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:56:05.244 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:56:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:56:05.245 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:56:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:56:05.247 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:56:05'.
2025-10-12 15:56:05.249 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:56:05'.
2025-10-12 15:56:05.251 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:56:05.252 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:56:05.253 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:56:05.254 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:56:05.262 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:56:05.263 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:56:05.265 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:56:05.268 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:56:05.269 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 13.0304ms
2025-10-12 15:56:05.270 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 11.3746ms
2025-10-12 15:56:05.272 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:56:05.274 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:56:05.275 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 44.8047ms
2025-10-12 15:56:05.276 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 46.0728ms
2025-10-12 15:56:08.516 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:56:08.516 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:56:08.521 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:56:08.524 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:56:08.526 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:56:08'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:56:08.527 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:56:08'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:56:08.529 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:56:08'.
2025-10-12 15:56:08.531 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:56:08'.
2025-10-12 15:56:08.532 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:56:08.534 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:56:08.535 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:56:08.537 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:56:08.539 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:56:08.543 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:56:08.543 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:56:08.546 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:56:08.548 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.3666ms
2025-10-12 15:56:08.549 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:56:08.550 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.7141ms
2025-10-12 15:56:08.551 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:56:08.552 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:56:08.555 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:56:08.557 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:56:08.560 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:56:08.562 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 46.268ms
2025-10-12 15:56:08.563 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:56:08'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:56:08.565 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 49.0879ms
2025-10-12 15:56:08.566 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:56:08'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:56:08.573 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:56:08'.
2025-10-12 15:56:08.579 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:56:08'.
2025-10-12 15:56:08.581 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:56:08.582 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:56:08.584 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:56:08.585 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:56:08.589 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:56:08.592 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:56:08.593 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:56:08.596 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:56:08.598 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 10.1868ms
2025-10-12 15:56:08.599 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:56:08.599 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.9095ms
2025-10-12 15:56:08.601 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:56:08.604 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:56:08.606 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:56:08.608 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 58.421ms
2025-10-12 15:56:08.609 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:56:08'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:56:08.610 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 59.097ms
2025-10-12 15:56:08.616 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:56:08'.
2025-10-12 15:56:08.620 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:56:08.621 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:56:08.625 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:56:08.627 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:56:08.629 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 5.6726ms
2025-10-12 15:56:08.630 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:56:08.631 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:56:08.634 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:56:08.635 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 36.5068ms
2025-10-12 15:56:08.636 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:56:08'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:56:08.641 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:56:08'.
2025-10-12 15:56:08.642 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:56:08.644 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:56:08.647 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:56:08.649 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:56:08.650 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 4.56ms
2025-10-12 15:56:08.652 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:56:08.654 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 23.5879ms
2025-10-12 15:56:42.672 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:56:42.679 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:56:42.679 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:56:42.680 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:56:42.682 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:56:42.683 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 11.0384ms
2025-10-12 15:56:42.686 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:56:42.687 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:56:42.688 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 9.947ms
2025-10-12 15:56:42.691 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:56:42.697 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:56:42.698 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 18.4447ms
2025-10-12 15:56:42.706 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:56:42.708 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:56:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:56:42.713 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:56:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:56:42.715 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:56:42'.
2025-10-12 15:56:42.717 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:56:42'.
2025-10-12 15:56:42.719 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:56:42.721 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:56:42.722 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:56:42.724 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:56:42.730 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:56:42.732 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:56:42.734 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:56:42.737 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:56:42.739 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 11.2642ms
2025-10-12 15:56:42.741 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 10.3473ms
2025-10-12 15:56:42.742 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:56:42.742 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:56:42.745 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:56:42.749 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:56:42.752 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 65.4181ms
2025-10-12 15:56:42.754 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 62.9682ms
2025-10-12 15:56:42.756 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:56:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:56:42.768 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:56:42'.
2025-10-12 15:56:42.769 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:56:42.771 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:56:42.776 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:56:42.779 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:56:42.781 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 6.6246ms
2025-10-12 15:56:42.783 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:56:42.785 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 42.1314ms
2025-10-12 15:56:43.619 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:56:43.619 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:56:43.622 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:56:43.626 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:56:43.627 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:56:43'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:56:43.628 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:56:43'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:56:43.630 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:56:43'.
2025-10-12 15:56:43.632 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:56:43'.
2025-10-12 15:56:43.633 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:56:43.635 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:56:43.636 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:56:43.637 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:56:43.640 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:56:43.641 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:56:43.644 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:56:43.647 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:56:43.648 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.5725ms
2025-10-12 15:56:43.650 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.8953ms
2025-10-12 15:56:43.650 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:56:43.651 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:56:43.652 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 33.3966ms
2025-10-12 15:56:43.655 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:56:43.656 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:56:43.661 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:56:43'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:56:43.662 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 43.0899ms
2025-10-12 15:56:43.663 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:56:43'.
2025-10-12 15:56:43.668 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:56:43.669 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:56:43.672 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:56:43.674 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:56:43.676 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 5.3924ms
2025-10-12 15:56:43.677 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:56:43.679 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 28.1646ms
2025-10-12 15:56:46.864 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:56:46.864 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:56:46.867 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:56:46.870 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:56:46.871 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:56:46'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:56:46.872 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:56:46'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:56:46.874 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:56:46'.
2025-10-12 15:56:46.875 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:56:46'.
2025-10-12 15:56:46.878 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:56:46.879 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:56:46.880 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:56:46.881 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:56:46.885 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:56:46.886 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:56:46.890 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:56:46.893 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:56:46.895 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.2143ms
2025-10-12 15:56:46.897 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.3249ms
2025-10-12 15:56:46.897 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:56:46.898 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:56:46.899 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:56:46.901 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:56:46.904 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:56:46.909 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:56:46.911 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 46.8707ms
2025-10-12 15:56:46.913 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 48.8485ms
2025-10-12 15:56:46.914 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:56:46'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:56:46.916 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:56:46'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:56:46.927 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:56:46'.
2025-10-12 15:56:46.929 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:56:46'.
2025-10-12 15:56:46.931 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:56:46.932 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:56:46.933 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:56:46.935 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:56:46.939 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:56:46.941 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:56:46.942 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:56:46.945 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:56:46.947 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.4076ms
2025-10-12 15:56:46.948 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.0938ms
2025-10-12 15:56:46.950 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:56:46.952 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:56:46.953 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 55.6137ms
2025-10-12 15:56:46.955 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 56.2548ms
2025-10-12 15:57:05.427 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:57:05.427 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-12 15:57:05.427 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:57:05.431 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:05.434 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:05.437 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:05.438 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 10.8253ms
2025-10-12 15:57:05.439 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 11.6533ms
2025-10-12 15:57:05.439 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:57:05.440 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 12.5663ms
2025-10-12 15:57:05.440 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-12 15:57:05.441 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:57:05.446 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 15:57:05.451 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:05.458 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:05.462 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:05.465 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:05.467 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:57:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:57:05.468 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:57:05.469 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:57:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:57:05.470 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 23.8291ms
2025-10-12 15:57:05.472 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 15:57:05.472 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:57:05'.
2025-10-12 15:57:05.474 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:57:05.476 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:57:05'.
2025-10-12 15:57:05.483 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:05.484 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:57:05.487 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:57:05.488 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:57:05.489 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:57:05.491 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:57:05.491 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:57:05.492 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 15:57:05.496 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:57:05.500 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:57:05.500 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:57:05.505 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:57:05.506 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 20.4285ms
2025-10-12 15:57:05.509 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:57:05.510 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 15.8078ms
2025-10-12 15:57:05.511 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 15:57:05.512 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:57:05.513 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 16.5752ms
2025-10-12 15:57:05.515 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:57:05.518 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:57:05.518 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 77.8161ms
2025-10-12 15:57:05.520 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:57:05.521 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 82.3368ms
2025-10-12 15:57:05.523 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 20.5996ms
2025-10-12 15:57:05.527 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 86.4285ms
2025-10-12 15:57:05.532 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:57:05.538 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 65.9081ms
2025-10-12 15:57:05.544 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 15:57:05.547 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:05.548 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 4.1278ms
2025-10-12 15:57:05.550 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 15:57:05.557 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:05.558 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:57:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:57:05.561 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:57:05'.
2025-10-12 15:57:05.562 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:57:05.564 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 15:57:05.577 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 15:57:05.580 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 15:57:05.582 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 15.4324ms
2025-10-12 15:57:05.584 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:57:05.586 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 35.5691ms
2025-10-12 15:57:09.234 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:57:09.234 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:57:09.234 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-12 15:57:09.238 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:09.242 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:09.245 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:09.245 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:57:09'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:57:09.246 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:57:09'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:57:09.247 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:57:09.249 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:57:09'.
2025-10-12 15:57:09.250 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:57:09'.
2025-10-12 15:57:09.252 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:57:09.253 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:57:09.254 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:57:09.257 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 15:57:09.258 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:57:09.258 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:57:09.259 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:57:09.263 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:09.266 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:57:09.268 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:57:09.272 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:57:09.272 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:57:09.274 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:57:09.276 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 19.5226ms
2025-10-12 15:57:09.278 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 15:57:09.280 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:57:09.282 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 16.6862ms
2025-10-12 15:57:09.284 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:57:09.287 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 15:57:09.287 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 16.657ms
2025-10-12 15:57:09.289 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:57:09.291 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 56.4834ms
2025-10-12 15:57:09.294 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:57:09.295 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:57:09.297 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 62.6209ms
2025-10-12 15:57:09.303 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 16.7547ms
2025-10-12 15:57:09.304 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 69.8065ms
2025-10-12 15:57:09.310 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:57:09.314 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 57.521ms
2025-10-12 15:57:09.317 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 15:57:09.322 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:09.322 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:57:09'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:57:09.324 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:57:09'.
2025-10-12 15:57:09.326 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:57:09.327 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 15:57:09.330 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 15:57:09.333 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 15:57:09.335 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 5.835ms
2025-10-12 15:57:09.336 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:57:09.337 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 20.59ms
2025-10-12 15:57:13.339 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:57:13.341 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-12 15:57:13.341 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:57:13.343 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:13.346 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:13.349 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:13.351 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 11.4364ms
2025-10-12 15:57:13.352 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 10.204ms
2025-10-12 15:57:13.352 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:57:13.353 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 11.3557ms
2025-10-12 15:57:13.353 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-12 15:57:13.354 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:57:13.361 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 15:57:13.365 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:13.373 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:13.376 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:13.379 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:13.380 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:57:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:57:13.382 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:57:13.383 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:57:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:57:13.384 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 22.6619ms
2025-10-12 15:57:13.385 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 15:57:13.386 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:57:13'.
2025-10-12 15:57:13.387 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:57:13.389 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:57:13'.
2025-10-12 15:57:13.397 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:13.399 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:57:13.403 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:57:13.403 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:57:13.404 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:57:13.406 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:57:13.409 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:57:13.410 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:57:13.412 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 15:57:13.415 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:57:13.415 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 13.8973ms
2025-10-12 15:57:13.418 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:57:13.420 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 15:57:13.422 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:57:13.424 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:57:13.427 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:57:13.430 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:57:13.431 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 17.3498ms
2025-10-12 15:57:13.432 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 79.0144ms
2025-10-12 15:57:13.434 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 16.5574ms
2025-10-12 15:57:13.435 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 15.6816ms
2025-10-12 15:57:13.437 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:57:13.443 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:57:13.444 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:57:13.445 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 92.7371ms
2025-10-12 15:57:13.447 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 92.6523ms
2025-10-12 15:57:13.448 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 63.2357ms
2025-10-12 15:57:13.460 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 15:57:13.463 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:13.464 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 4.2125ms
2025-10-12 15:57:13.466 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 15:57:13.471 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:13.473 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:57:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:57:13.475 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:57:13'.
2025-10-12 15:57:13.476 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:57:13.478 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 15:57:13.481 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 15:57:13.485 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 15:57:13.487 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 7.2998ms
2025-10-12 15:57:13.489 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:57:13.490 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 24.3026ms
2025-10-12 15:57:18.420 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - null null
2025-10-12 15:57:18.424 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:18.425 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 204 null null 5.426ms
2025-10-12 15:57:18.427 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-12 15:57:18.432 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:18.434 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:57:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:57:18.436 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:57:18'.
2025-10-12 15:57:18.437 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:57:18.439 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 15:57:18.443 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 15:57:18.447 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 5.0712ms
2025-10-12 15:57:18.448 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:57:18.451 +04:00 [ERR] An unhandled exception has occurred while executing the request.
GreenZone.Application.Exceptions.NotFoundException: Basket not found for the customer.
   at GreenZone.Application.Service.BasketService.GetBasketByCustomerAsync(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\BasketService.cs:line 75
   at GreenZone.API.Controllers.BasketController.GetBasketByCustomerId(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\BasketController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-12 15:57:18.470 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 500 null text/plain; charset=utf-8 42.8913ms
2025-10-12 15:57:19.671 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-12 15:57:19.676 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:19.678 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:57:19'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:57:19.681 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:57:19'.
2025-10-12 15:57:19.684 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:57:19.686 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 15:57:19.692 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 15:57:19.696 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 6.9503ms
2025-10-12 15:57:19.698 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:57:19.700 +04:00 [ERR] An unhandled exception has occurred while executing the request.
GreenZone.Application.Exceptions.NotFoundException: Basket not found for the customer.
   at GreenZone.Application.Service.BasketService.GetBasketByCustomerAsync(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\BasketService.cs:line 75
   at GreenZone.API.Controllers.BasketController.GetBasketByCustomerId(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\BasketController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-12 15:57:19.710 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 500 null text/plain; charset=utf-8 39.26ms
2025-10-12 15:57:19.970 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 15:57:19.971 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 15:57:19.973 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:19.977 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:19.978 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 7.8146ms
2025-10-12 15:57:19.979 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 8.1506ms
2025-10-12 15:57:19.980 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 15:57:19.991 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:19.992 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:57:19.994 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 15:57:19.997 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 15:57:20.000 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:57:20.002 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 6.5444ms
2025-10-12 15:57:20.003 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 15:57:20.004 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:57:20.008 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:20.009 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 29.3631ms
2025-10-12 15:57:20.010 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:57:20.014 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 15:57:20.014 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 15:57:20.016 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 15:57:20.019 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:20.021 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:20.025 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 10.8498ms
2025-10-12 15:57:20.025 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 15:57:20.026 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 11.7719ms
2025-10-12 15:57:20.026 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 15:57:20.033 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:57:20.039 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:20.041 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 17.002ms
2025-10-12 15:57:20.042 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:57:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:57:20.043 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:57:20.045 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:57:20'.
2025-10-12 15:57:20.046 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 43.0021ms
2025-10-12 15:57:20.048 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:57:20.052 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 15:57:20.056 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 15:57:20.059 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 15:57:20.061 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 6.5057ms
2025-10-12 15:57:20.062 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 15:57:20.063 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:57:20.067 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:20.068 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 41.8523ms
2025-10-12 15:57:20.070 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:57:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:57:20.070 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:57:20.070 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:57:20.076 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:57:20'.
2025-10-12 15:57:20.080 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:20.085 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:20.086 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:57:20.087 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 16.8826ms
2025-10-12 15:57:20.088 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 17.8429ms
2025-10-12 15:57:20.089 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:57:20.089 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:57:20.090 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 15:57:20.102 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:20.105 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:20.108 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:57:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:57:20.108 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 15:57:20.109 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:57:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:57:20.111 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:57:20'.
2025-10-12 15:57:20.117 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 15:57:20.119 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:57:20'.
2025-10-12 15:57:20.120 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:57:20.122 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 15.4504ms
2025-10-12 15:57:20.124 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:57:20.125 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:57:20.127 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:57:20.128 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:57:20.132 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:57:20.132 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 70.1424ms
2025-10-12 15:57:20.136 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:57:20.138 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:57:20.146 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:57:20.147 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 16.2401ms
2025-10-12 15:57:20.148 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:57:20.149 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 14.4609ms
2025-10-12 15:57:20.150 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:57:20.151 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-12 15:57:20.151 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:57:20.155 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:20.157 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:57:20.161 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:20.163 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:57:20.165 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 75.7041ms
2025-10-12 15:57:20.165 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:57:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:57:20.166 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 76.8694ms
2025-10-12 15:57:20.167 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:57:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:57:20.168 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:57:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:57:20.173 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:57:20'.
2025-10-12 15:57:20.180 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:57:20'.
2025-10-12 15:57:20.182 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:57:20'.
2025-10-12 15:57:20.183 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:57:20.185 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:57:20.186 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:57:20.187 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:57:20.188 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:57:20.189 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 15:57:20.193 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:57:20.196 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:57:20.198 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 15:57:20.199 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:57:20.201 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:57:20.205 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 8.2499ms
2025-10-12 15:57:20.207 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 14.8817ms
2025-10-12 15:57:20.209 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 14.0384ms
2025-10-12 15:57:20.211 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:57:20.212 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:57:20.213 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:57:20.215 +04:00 [ERR] An unhandled exception has occurred while executing the request.
GreenZone.Application.Exceptions.NotFoundException: Basket not found for the customer.
   at GreenZone.Application.Service.BasketService.GetBasketByCustomerAsync(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\BasketService.cs:line 75
   at GreenZone.API.Controllers.BasketController.GetBasketByCustomerId(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\BasketController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-12 15:57:20.216 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 67.9578ms
2025-10-12 15:57:20.218 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 67.7575ms
2025-10-12 15:57:20.225 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 500 null text/plain; charset=utf-8 73.8616ms
2025-10-12 15:58:09.047 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 15:58:09.047 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-12 15:58:09.048 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 15:58:09.049 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-12 15:58:09.052 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:09.055 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:09.059 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:09.063 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:09.064 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 17.0729ms
2025-10-12 15:58:09.065 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 17.8528ms
2025-10-12 15:58:09.066 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 17.5268ms
2025-10-12 15:58:09.067 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 17.6688ms
2025-10-12 15:58:09.067 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 15:58:09.068 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-12 15:58:09.086 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:09.090 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:09.091 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:58:09.092 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:58:09.093 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 15:58:09.095 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:58:09.106 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:58:09.109 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 15:58:09.110 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:58:09.113 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:58:09.115 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 15.5058ms
2025-10-12 15:58:09.116 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-12 15:58:09.116 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 18.9921ms
2025-10-12 15:58:09.117 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 15:58:09.119 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:09.120 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:58:09.122 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:58:09.126 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:09.127 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:58:09.128 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 60.5218ms
2025-10-12 15:58:09.129 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 62.4012ms
2025-10-12 15:58:09.131 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:58:09.132 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:58:09.144 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 15:58:09.148 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:58:09.149 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 15:58:09.149 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 15:58:09.151 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 15:58:09.153 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:58:09.156 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:09.160 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:09.165 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:58:09.166 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 19.6175ms
2025-10-12 15:58:09.167 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 17.8885ms
2025-10-12 15:58:09.168 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 18.7588ms
2025-10-12 15:58:09.170 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 20.1231ms
2025-10-12 15:58:09.171 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:58:09.181 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 15:58:09.182 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:58:09.183 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 67.4502ms
2025-10-12 15:58:09.186 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:09.188 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 70.8617ms
2025-10-12 15:58:09.200 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:09'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:58:09.207 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:09'.
2025-10-12 15:58:09.209 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:58:09.211 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 15:58:09.233 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 15:58:09.237 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 15:58:09.241 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 25.631ms
2025-10-12 15:58:09.243 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 15:58:09.243 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:58:09.247 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:09.249 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 68.2992ms
2025-10-12 15:58:09.250 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:09'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:58:09.254 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:58:09.254 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:58:09.258 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:09'.
2025-10-12 15:58:09.262 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:09.265 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:09.267 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:58:09.267 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 13.7348ms
2025-10-12 15:58:09.268 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 14.3802ms
2025-10-12 15:58:09.270 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 15:58:09.272 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:58:09.272 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:58:09.283 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 15:58:09.285 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:09.288 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:09.291 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 15:58:09.292 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:09'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:58:09.293 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:09'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:58:09.294 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 12.7715ms
2025-10-12 15:58:09.297 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:09'.
2025-10-12 15:58:09.299 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:09'.
2025-10-12 15:58:09.300 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:58:09.302 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:58:09.303 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:58:09.305 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 62.0077ms
2025-10-12 15:58:09.306 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:58:09.307 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:58:09.317 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:58:09.317 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:58:09.320 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:58:09.323 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:58:09.325 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.6503ms
2025-10-12 15:58:09.326 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:58:09.326 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.6807ms
2025-10-12 15:58:09.327 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:58:09.328 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:58:09.331 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:09.333 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:58:09.336 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:09.337 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 65.4386ms
2025-10-12 15:58:09.338 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:09'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:58:09.340 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 67.9369ms
2025-10-12 15:58:09.341 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:09'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:58:09.347 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:09'.
2025-10-12 15:58:09.353 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:09'.
2025-10-12 15:58:09.355 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:58:09.356 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:58:09.357 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:58:09.358 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:58:09.362 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:58:09.364 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:58:09.365 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:58:09.368 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:58:09.369 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.8408ms
2025-10-12 15:58:09.371 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.0012ms
2025-10-12 15:58:09.372 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:58:09.374 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:58:09.375 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 48.7914ms
2025-10-12 15:58:09.376 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 49.1377ms
2025-10-12 15:58:16.828 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-12 15:58:16.836 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:16.836 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 15:58:16.837 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 15:58:16.837 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 9.0171ms
2025-10-12 15:58:16.839 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-12 15:58:16.842 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:16.845 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:16.853 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:16.855 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 18.7045ms
2025-10-12 15:58:16.856 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 15:58:16.857 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 19.9147ms
2025-10-12 15:58:16.858 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:58:16.865 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:16.871 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:58:16.872 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:58:16.876 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:58:16.876 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 15:58:16.880 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:58:16.883 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 15:58:16.884 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.1896ms
2025-10-12 15:58:16.887 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:58:16.890 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:58:16.891 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 9.2382ms
2025-10-12 15:58:16.892 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 15:58:16.893 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 53.4356ms
2025-10-12 15:58:16.894 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:58:16.896 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:16.900 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 43.6483ms
2025-10-12 15:58:16.901 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:58:16.905 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 15:58:16.905 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 15:58:16.906 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 15:58:16.909 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:16.912 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:16.916 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 10.9526ms
2025-10-12 15:58:16.916 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 15:58:16.917 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 11.8134ms
2025-10-12 15:58:16.918 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 15:58:16.923 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:58:16.929 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:16.931 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 16.1309ms
2025-10-12 15:58:16.932 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:16'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:58:16.933 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 15:58:16.935 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:16'.
2025-10-12 15:58:16.937 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 44.7695ms
2025-10-12 15:58:16.938 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:58:16.943 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 15:58:16.947 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 15:58:16.949 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 15:58:16.951 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 5.4576ms
2025-10-12 15:58:16.951 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 15:58:16.952 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:58:16.954 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:16.955 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 37.0237ms
2025-10-12 15:58:16.957 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:16'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:58:16.957 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:58:16.957 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:58:16.962 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:16'.
2025-10-12 15:58:16.965 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:16.967 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:16.969 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:58:16.969 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 12.2193ms
2025-10-12 15:58:16.970 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 12.9992ms
2025-10-12 15:58:16.971 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 15:58:16.972 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:58:16.972 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:58:16.982 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 15:58:16.983 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:16.986 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:16.988 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 15:58:16.989 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:16'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:58:16.990 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:16'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:58:16.992 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 12.0233ms
2025-10-12 15:58:16.993 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 15:58:16.994 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:16'.
2025-10-12 15:58:16.995 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:16'.
2025-10-12 15:58:16.997 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:58:16.999 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:17.000 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:58:17.001 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:58:17.002 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 50.7969ms
2025-10-12 15:58:17.003 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:17'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:58:17.004 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:58:17.005 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:58:17.009 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:17'.
2025-10-12 15:58:17.012 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:58:17.014 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:58:17.014 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:58:17.017 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:58:17.019 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:58:17.020 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 15:58:17.021 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.1173ms
2025-10-12 15:58:17.022 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:58:17.022 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.1453ms
2025-10-12 15:58:17.023 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:58:17.025 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 15:58:17.025 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:58:17.028 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:17.030 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:58:17.032 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:17.035 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 15:58:17.036 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 64.5676ms
2025-10-12 15:58:17.037 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:17'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:58:17.038 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 66.1262ms
2025-10-12 15:58:17.039 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:17'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:58:17.040 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 16.1966ms
2025-10-12 15:58:17.046 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:17'.
2025-10-12 15:58:17.050 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:17'.
2025-10-12 15:58:17.051 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:58:17.052 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:58:17.054 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:58:17.056 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 63.2124ms
2025-10-12 15:58:17.058 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:58:17.059 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:58:17.067 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:58:17.069 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:58:17.071 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:58:17.073 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:58:17.075 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.68ms
2025-10-12 15:58:17.077 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.8503ms
2025-10-12 15:58:17.079 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:58:17.081 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:58:17.082 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 59.7163ms
2025-10-12 15:58:17.083 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 60.0135ms
2025-10-12 15:58:21.863 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - null null
2025-10-12 15:58:21.867 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:21.869 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - 204 null null 5.2282ms
2025-10-12 15:58:21.872 +04:00 [INF] Request starting HTTP/2 PUT https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - application/json 67
2025-10-12 15:58:21.876 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:21.878 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:21'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:58:21.881 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:21'.
2025-10-12 15:58:21.883 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API)'
2025-10-12 15:58:21.891 +04:00 [INF] Route matched with {action = "UpdateItemsInBasket", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateItemsInBasket(System.Guid, GreenZone.Contracts.Dtos.BasketItemsDtos.BasketItemsUpdateDto) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 15:58:21.932 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 15:58:21.953 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__productId_0='?' (DbType = Guid), @__basketId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BasketId], [b].[CreatedAt], [b].[IsDeleted], [b].[ProductId], [b].[Quantity], [b].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [BasketItems] AS [b]
INNER JOIN [Products] AS [p] ON [b].[ProductId] = [p].[Id]
WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[ProductId] = @__productId_0 AND [b].[BasketId] = @__basketId_1
2025-10-12 15:58:22.053 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@p6='?' (DbType = Guid), @p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [BasketItems] SET [BasketId] = @p0, [CreatedAt] = @p1, [IsDeleted] = @p2, [ProductId] = @p3, [Quantity] = @p4, [UpdatedAt] = @p5
OUTPUT 1
WHERE [Id] = @p6;
2025-10-12 15:58:22.064 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 15:58:22.066 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 15:58:22.067 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API) in 172.1567ms
2025-10-12 15:58:22.068 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API)'
2025-10-12 15:58:22.069 +04:00 [INF] Request finished HTTP/2 PUT https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8/items - 200 null application/json; charset=utf-8 196.9951ms
2025-10-12 15:58:22.075 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 15:58:22.077 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:22.078 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 2.3874ms
2025-10-12 15:58:22.079 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 15:58:22.083 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:22.084 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:22'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:58:22.085 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:22'.
2025-10-12 15:58:22.086 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:58:22.086 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 15:58:22.089 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 15:58:22.091 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 15:58:22.093 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 5.3249ms
2025-10-12 15:58:22.095 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 15:58:22.097 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 17.6667ms
2025-10-12 15:58:22.098 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:58:22.098 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:58:22.104 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:22.107 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:22.108 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 9.9592ms
2025-10-12 15:58:22.109 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:58:22.109 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 11.1573ms
2025-10-12 15:58:22.110 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:58:22.112 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:22.122 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:22.123 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:22'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:58:22.124 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:22'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:58:22.125 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:22'.
2025-10-12 15:58:22.127 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:22'.
2025-10-12 15:58:22.128 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:58:22.130 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:58:22.131 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:58:22.132 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:58:22.135 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:58:22.138 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:58:22.139 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:58:22.141 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:58:22.142 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.0614ms
2025-10-12 15:58:22.144 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 7.0296ms
2025-10-12 15:58:22.145 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:58:22.146 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:58:22.147 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 36.5722ms
2025-10-12 15:58:22.148 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 38.5483ms
2025-10-12 15:58:29.650 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:58:29.650 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:58:29.650 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 15:58:29.650 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:58:29.651 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:58:29.651 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 15:58:29.656 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:29.660 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:29.663 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:29.666 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:29.669 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:29.672 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:29.673 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 22.9541ms
2025-10-12 15:58:29.674 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 24.0035ms
2025-10-12 15:58:29.675 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 24.9553ms
2025-10-12 15:58:29.676 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:58:29.676 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:58:29.676 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 26.0201ms
2025-10-12 15:58:29.677 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 26.7967ms
2025-10-12 15:58:29.678 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 27.7062ms
2025-10-12 15:58:29.693 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:29.696 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:29.707 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:29'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:58:29.708 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:29'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:58:29.710 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:29'.
2025-10-12 15:58:29.712 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:29'.
2025-10-12 15:58:29.714 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:58:29.715 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:58:29.716 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:58:29.717 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:58:29.721 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:58:29.724 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:58:29.726 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 6.0323ms
2025-10-12 15:58:29.726 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:58:29.727 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:58:29.730 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:29.731 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:58:29.731 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 55.654ms
2025-10-12 15:58:29.732 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:29'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:58:29.736 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:58:29.741 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:29'.
2025-10-12 15:58:29.742 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 20.2755ms
2025-10-12 15:58:29.743 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 15:58:29.744 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:58:29.745 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:58:29.748 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:29.749 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:58:29.751 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 74.9008ms
2025-10-12 15:58:29.752 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:29'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:58:29.755 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:58:29.759 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:29'.
2025-10-12 15:58:29.761 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:58:29.762 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:58:29.764 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 10.2866ms
2025-10-12 15:58:29.765 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:58:29.765 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 15:58:29.766 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:58:29.769 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:29.772 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 15:58:29.773 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 46.3274ms
2025-10-12 15:58:29.774 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:29'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:58:29.776 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:58:29.780 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:29'.
2025-10-12 15:58:29.781 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.0621ms
2025-10-12 15:58:29.783 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:58:29.784 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 15:58:29.785 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:58:29.786 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 43.4188ms
2025-10-12 15:58:29.790 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:58:29.795 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:58:29.797 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.3946ms
2025-10-12 15:58:29.798 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 15:58:29.799 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:58:29.801 +04:00 [INF] CORS policy execution successful.
2025-10-12 15:58:29.802 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 37.6079ms
2025-10-12 15:58:29.803 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:29'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 15:58:29.809 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 11:58:29'.
2025-10-12 15:58:29.810 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:58:29.811 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 15:58:29.815 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 15:58:29.818 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 15:58:29.820 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 6.1388ms
2025-10-12 15:58:29.821 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 15:58:29.822 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 24.2561ms
2025-10-12 16:00:24.498 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 16:00:24.501 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:00:24.503 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:00:24.503 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:00:24.507 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:00:24.509 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 10.5671ms
2025-10-12 16:00:24.511 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:00:24.513 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:00:24.515 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 13.2504ms
2025-10-12 16:00:24.517 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:00:24.523 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:00:24.523 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 19.9357ms
2025-10-12 16:00:24.531 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:00:24.532 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:00:24'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:00:24.538 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:00:24'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:00:24.541 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:00:24'.
2025-10-12 16:00:24.544 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:00:24'.
2025-10-12 16:00:24.546 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:00:24.548 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:00:24.549 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:00:24.551 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:00:24.567 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:00:24.567 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:00:24.572 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:00:24.575 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:00:24.576 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 19.639ms
2025-10-12 16:00:24.578 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:00:24.579 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 24.8892ms
2025-10-12 16:00:24.581 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:00:24.585 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:00:24.587 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:00:24.589 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 71.5958ms
2025-10-12 16:00:24.590 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:00:24'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:00:24.592 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 80.1922ms
2025-10-12 16:00:24.599 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:00:24'.
2025-10-12 16:00:24.605 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:00:24.607 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:00:24.611 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:00:24.614 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:00:24.616 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 6.6352ms
2025-10-12 16:00:24.618 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:00:24.619 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 41.195ms
2025-10-12 16:00:26.963 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:00:26.963 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:00:26.967 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:00:26.971 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:00:26.972 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:00:26'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:00:26.973 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:00:26'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:00:26.976 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:00:26'.
2025-10-12 16:00:26.978 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:00:26'.
2025-10-12 16:00:26.979 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:00:26.980 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:00:26.982 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:00:26.983 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:00:26.988 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:00:26.990 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:00:26.992 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:00:26.994 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:00:26.996 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.0212ms
2025-10-12 16:00:26.998 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.9153ms
2025-10-12 16:00:26.999 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:00:27.000 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:00:27.001 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:00:27.004 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:00:27.005 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 42.0034ms
2025-10-12 16:00:27.007 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 43.2499ms
2025-10-12 16:00:27.008 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:00:27'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:00:27.018 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:00:27'.
2025-10-12 16:00:27.019 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:00:27.021 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:00:27.024 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:00:27.027 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:00:27.029 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 6.5723ms
2025-10-12 16:00:27.031 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:00:27.032 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 32.9053ms
2025-10-12 16:00:30.260 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 16:00:30.260 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:00:30.261 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:00:30.261 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-12 16:00:30.266 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:00:30.270 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:00:30.273 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:00:30.276 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:00:30.277 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 17.3752ms
2025-10-12 16:00:30.279 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 18.5605ms
2025-10-12 16:00:30.280 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:00:30.280 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 19.2617ms
2025-10-12 16:00:30.281 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 19.7077ms
2025-10-12 16:00:30.281 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:00:30.282 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-12 16:00:30.294 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:00:30.307 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:00:30.311 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:00:30.312 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:00:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:00:30.314 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:00:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:00:30.315 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:00:30.317 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:00:30'.
2025-10-12 16:00:30.321 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:00:30'.
2025-10-12 16:00:30.323 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:00:30.324 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:00:30.325 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:00:30.330 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:00:30.330 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:00:30.331 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:00:30.335 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:00:30.339 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:00:30.341 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:00:30.342 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 13.0674ms
2025-10-12 16:00:30.345 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:00:30.348 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:00:30.349 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:00:30.349 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 16:00:30.351 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 13.3556ms
2025-10-12 16:00:30.353 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 13.1562ms
2025-10-12 16:00:30.354 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:00:30.355 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 72.5109ms
2025-10-12 16:00:30.358 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:00:30.360 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:00:30.362 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:00:30.365 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:00:30.370 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 20.3784ms
2025-10-12 16:00:30.371 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 91.3193ms
2025-10-12 16:00:30.372 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 16:00:30.372 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 90.7146ms
2025-10-12 16:00:30.373 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:00:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:00:30.384 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:00:30.390 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:00:30'.
2025-10-12 16:00:30.391 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:00:30.393 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:00:30.394 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 16:00:30.395 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:00:30.401 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:00:30.404 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:00:30.406 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 6.3839ms
2025-10-12 16:00:30.408 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:00:30.409 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 16:00:30.410 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 55.0452ms
2025-10-12 16:00:30.414 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:00:30.419 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 21.8638ms
2025-10-12 16:00:30.421 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:00:30.423 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 51.6131ms
2025-10-12 16:00:30.507 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 16:00:30.511 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:00:30.514 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 6.5641ms
2025-10-12 16:00:30.517 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 16:00:30.523 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:00:30.524 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:00:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:00:30.526 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:00:30'.
2025-10-12 16:00:30.527 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:00:30.529 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 16:00:30.543 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 16:00:30.547 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 16:00:30.550 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 17.7033ms
2025-10-12 16:00:30.551 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:00:30.553 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 36.1691ms
2025-10-12 16:00:33.831 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:00:33.832 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:00:33.837 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:00:33.842 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:00:33.844 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:00:33'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:00:33.845 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:00:33'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:00:33.847 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:00:33'.
2025-10-12 16:00:33.849 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:00:33'.
2025-10-12 16:00:33.851 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:00:33.852 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:00:33.854 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:00:33.856 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:00:33.864 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:00:33.865 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:00:33.868 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:00:33.870 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:00:33.872 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.9021ms
2025-10-12 16:00:33.874 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 11.7774ms
2025-10-12 16:00:33.875 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:00:33.875 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:00:33.877 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:00:33.881 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:00:33.882 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 50.9916ms
2025-10-12 16:00:33.884 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 51.5137ms
2025-10-12 16:00:33.885 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:00:33'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:00:33.895 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:00:33'.
2025-10-12 16:00:33.897 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:00:33.898 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:00:33.902 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:00:33.905 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:00:33.907 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 6.3957ms
2025-10-12 16:00:33.908 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:00:33.911 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 35.555ms
2025-10-12 16:00:37.457 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 16:00:37.458 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:00:37.458 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:00:37.460 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:00:37.463 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:00:37.466 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:00:37.468 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 10.5418ms
2025-10-12 16:00:37.469 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 11.1593ms
2025-10-12 16:00:37.469 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:00:37.470 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 11.9934ms
2025-10-12 16:00:37.472 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:00:37.481 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:00:37.488 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:00:37.489 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:00:37'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:00:37.490 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:00:37'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:00:37.492 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:00:37'.
2025-10-12 16:00:37.495 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:00:37'.
2025-10-12 16:00:37.496 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:00:37.498 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:00:37.499 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:00:37.500 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:00:37.504 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:00:37.507 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:00:37.507 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:00:37.510 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:00:37.512 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.8504ms
2025-10-12 16:00:37.513 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.2051ms
2025-10-12 16:00:37.514 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:00:37.515 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:00:37.517 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:00:37.520 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:00:37.522 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 52.1701ms
2025-10-12 16:00:37.523 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 51.7769ms
2025-10-12 16:00:37.524 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:00:37'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:00:37.534 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:00:37'.
2025-10-12 16:00:37.536 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:00:37.537 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:00:37.542 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:00:37.546 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:00:37.548 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.939ms
2025-10-12 16:00:37.549 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:00:37.551 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 36.4826ms
2025-10-12 16:03:00.613 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 16:03:00.613 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:03:00.614 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:03:00.617 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:03:00.619 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:03:00.622 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:03:00.623 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 9.1693ms
2025-10-12 16:03:00.623 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 10.0825ms
2025-10-12 16:03:00.624 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 10.7984ms
2025-10-12 16:03:00.630 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:03:00.630 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:03:00.640 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:03:00.642 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:03:00.644 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:03:00'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:03:00.645 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:03:00'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:03:00.647 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:03:00'.
2025-10-12 16:03:00.650 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:03:00'.
2025-10-12 16:03:00.652 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:03:00.653 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:03:00.654 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:03:00.656 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:03:00.672 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:03:00.672 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:03:00.676 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:03:00.679 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:03:00.681 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 22.0495ms
2025-10-12 16:03:00.682 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:03:00.682 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 21.1447ms
2025-10-12 16:03:00.684 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:03:00.689 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:03:00.691 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:03:00.692 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 62.4022ms
2025-10-12 16:03:00.693 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:03:00'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:03:00.694 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 64.3997ms
2025-10-12 16:03:00.700 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:03:00'.
2025-10-12 16:03:00.706 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:03:00.707 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:03:00.711 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:03:00.715 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:03:00.717 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.1163ms
2025-10-12 16:03:00.718 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:03:00.719 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 37.5255ms
2025-10-12 16:03:02.226 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:03:02.226 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:03:02.229 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:03:02.231 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:03:02.232 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:03:02'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:03:02.233 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:03:02'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:03:02.235 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:03:02'.
2025-10-12 16:03:02.237 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:03:02'.
2025-10-12 16:03:02.238 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:03:02.239 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:03:02.240 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:03:02.242 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:03:02.245 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:03:02.247 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:03:02.249 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:03:02.252 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:03:02.253 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.325ms
2025-10-12 16:03:02.254 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.2713ms
2025-10-12 16:03:02.255 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:03:02.256 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:03:02.257 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:03:02.261 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:03:02.262 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 35.9103ms
2025-10-12 16:03:02.263 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 36.8148ms
2025-10-12 16:03:02.264 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:03:02'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:03:02.271 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:03:02'.
2025-10-12 16:03:02.272 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:03:02.273 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:03:02.276 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:03:02.279 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:03:02.280 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 4.6701ms
2025-10-12 16:03:02.281 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:03:02.283 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 27.4417ms
2025-10-12 16:03:30.081 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 16:03:30.081 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:03:30.082 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:03:30.086 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:03:30.091 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:03:30.096 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:03:30.097 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 15.7398ms
2025-10-12 16:03:30.098 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 16.7068ms
2025-10-12 16:03:30.099 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 17.0004ms
2025-10-12 16:03:30.100 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:03:30.100 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:03:30.115 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:03:30.118 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:03:30.119 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:03:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:03:30.119 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:03:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:03:30.121 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:03:30'.
2025-10-12 16:03:30.123 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:03:30'.
2025-10-12 16:03:30.124 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:03:30.125 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:03:30.127 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:03:30.128 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:03:30.134 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:03:30.135 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:03:30.138 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:03:30.140 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:03:30.141 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.3286ms
2025-10-12 16:03:30.143 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.0123ms
2025-10-12 16:03:30.143 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:03:30.144 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:03:30.146 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:03:30.149 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:03:30.150 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 50.2814ms
2025-10-12 16:03:30.152 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 51.9172ms
2025-10-12 16:03:30.153 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:03:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:03:30.161 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:03:30'.
2025-10-12 16:03:30.163 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:03:30.164 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:03:30.167 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:03:30.169 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:03:30.171 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 5.2613ms
2025-10-12 16:03:30.172 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:03:30.173 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 29.8079ms
2025-10-12 16:03:38.609 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 16:03:38.612 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:03:38.615 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:03:38.615 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:03:38.618 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:03:38.622 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:03:38.623 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 13.5432ms
2025-10-12 16:03:38.624 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 12.128ms
2025-10-12 16:03:38.626 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 11.1977ms
2025-10-12 16:03:38.628 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:03:38.631 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:03:38.642 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:03:38.644 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:03:38.646 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:03:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:03:38.647 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:03:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:03:38.649 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:03:38'.
2025-10-12 16:03:38.651 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:03:38'.
2025-10-12 16:03:38.653 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:03:38.654 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:03:38.656 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:03:38.657 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:03:38.662 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:03:38.665 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:03:38.665 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:03:38.668 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:03:38.670 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.0785ms
2025-10-12 16:03:38.671 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.9056ms
2025-10-12 16:03:38.673 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:03:38.674 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:03:38.676 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:03:38.679 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:03:38.680 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 52.072ms
2025-10-12 16:03:38.682 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 50.8412ms
2025-10-12 16:03:38.683 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:03:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:03:38.693 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:03:38'.
2025-10-12 16:03:38.695 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:03:38.697 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:03:38.701 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:03:38.705 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:03:38.707 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.7983ms
2025-10-12 16:03:38.709 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:03:38.710 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 37.663ms
2025-10-12 16:03:39.984 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:03:39.987 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:03:39.988 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:03:39.990 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:03:39.991 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:03:39'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:03:39.993 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:03:39'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:03:39.994 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:03:39'.
2025-10-12 16:03:39.996 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:03:39'.
2025-10-12 16:03:39.998 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:03:39.999 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:03:40.000 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:03:40.002 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:03:40.008 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:03:40.008 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:03:40.010 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:03:40.013 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:03:40.014 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.5239ms
2025-10-12 16:03:40.016 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.2721ms
2025-10-12 16:03:40.017 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:03:40.019 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:03:40.020 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:03:40.022 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:03:40.024 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 39.6343ms
2025-10-12 16:03:40.024 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 37.3962ms
2025-10-12 16:03:40.025 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:03:40'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:03:40.030 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:03:40'.
2025-10-12 16:03:40.031 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:03:40.032 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:03:40.034 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:03:40.036 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:03:40.037 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 3.9454ms
2025-10-12 16:03:40.038 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:03:40.039 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 21.6796ms
2025-10-12 16:03:47.819 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 16:03:47.819 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:03:47.820 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:03:47.823 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:03:47.826 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:03:47.829 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:03:47.829 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 9.9577ms
2025-10-12 16:03:47.831 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 11.3612ms
2025-10-12 16:03:47.831 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:03:47.831 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 11.8287ms
2025-10-12 16:03:47.832 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:03:47.842 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:03:47.850 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:03:47.851 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:03:47'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:03:47.852 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:03:47'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:03:47.854 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:03:47'.
2025-10-12 16:03:47.856 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:03:47'.
2025-10-12 16:03:47.857 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:03:47.858 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:03:47.859 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:03:47.860 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:03:47.863 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:03:47.865 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:03:47.867 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:03:47.870 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:03:47.871 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.9692ms
2025-10-12 16:03:47.873 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.1223ms
2025-10-12 16:03:47.873 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:03:47.874 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:03:47.876 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:03:47.879 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:03:47.880 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 48.5173ms
2025-10-12 16:03:47.881 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 48.6443ms
2025-10-12 16:03:47.882 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:03:47'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:03:47.892 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:03:47'.
2025-10-12 16:03:47.893 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:03:47.894 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:03:47.899 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:03:47.901 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:03:47.902 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 6.9273ms
2025-10-12 16:03:47.903 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:03:47.904 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 30.4918ms
2025-10-12 16:04:23.708 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 16:04:23.711 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:04:23.712 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:04:23.712 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:23.716 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:23.720 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:23.721 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 13.3729ms
2025-10-12 16:04:23.723 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 12.1624ms
2025-10-12 16:04:23.724 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 12.1336ms
2025-10-12 16:04:23.728 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:04:23.731 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:04:23.744 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:23.749 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:23.750 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:04:23.752 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:04:23.754 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:23'.
2025-10-12 16:04:23.756 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:23'.
2025-10-12 16:04:23.758 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:04:23.759 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:23.761 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:04:23.765 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:04:23.769 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:04:23.769 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:04:23.772 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:04:23.775 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:04:23.778 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.6789ms
2025-10-12 16:04:23.780 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.2076ms
2025-10-12 16:04:23.781 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:04:23.782 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:04:23.784 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:23.788 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:23.790 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 62.3663ms
2025-10-12 16:04:23.792 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 61.0028ms
2025-10-12 16:04:23.793 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:04:23.804 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:23'.
2025-10-12 16:04:23.805 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:23.807 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:04:23.811 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:04:23.815 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:04:23.817 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.3737ms
2025-10-12 16:04:23.819 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:23.821 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 39.8663ms
2025-10-12 16:04:26.006 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:04:26.006 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:04:26.009 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:26.012 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:26.013 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:26'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:04:26.014 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:26'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:04:26.016 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:26'.
2025-10-12 16:04:26.018 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:26'.
2025-10-12 16:04:26.019 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:04:26.021 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:26.022 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:04:26.023 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:04:26.027 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:04:26.029 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:04:26.031 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:04:26.034 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:04:26.035 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.4651ms
2025-10-12 16:04:26.036 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.2026ms
2025-10-12 16:04:26.038 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:04:26.038 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:04:26.040 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:26.043 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:26.045 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 38.892ms
2025-10-12 16:04:26.046 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 40.1798ms
2025-10-12 16:04:26.047 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:26'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:04:26.057 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:26'.
2025-10-12 16:04:26.059 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:26.060 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:04:26.064 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:04:26.067 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:04:26.069 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 6.8001ms
2025-10-12 16:04:26.071 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:26.072 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 34.8503ms
2025-10-12 16:04:26.530 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:04:26.530 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:04:26.536 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:26.539 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:26.541 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:26'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:04:26.542 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:26'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:04:26.544 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:26'.
2025-10-12 16:04:26.546 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:26'.
2025-10-12 16:04:26.548 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:04:26.550 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:26.551 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:04:26.553 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:04:26.556 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:04:26.559 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:04:26.560 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:04:26.562 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:04:26.564 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.1278ms
2025-10-12 16:04:26.565 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.4569ms
2025-10-12 16:04:26.566 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:04:26.567 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:04:26.568 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:26.571 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:26.573 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 42.3828ms
2025-10-12 16:04:26.574 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 43.4092ms
2025-10-12 16:04:26.575 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:26'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:04:26.586 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:26'.
2025-10-12 16:04:26.587 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:26.588 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:04:26.594 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:04:26.597 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:04:26.600 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.5437ms
2025-10-12 16:04:26.602 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:26.604 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 37.1523ms
2025-10-12 16:04:28.933 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 16:04:28.933 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:04:28.933 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:04:28.938 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:28.941 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:28.945 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:28.946 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 12.4016ms
2025-10-12 16:04:28.947 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 13.3053ms
2025-10-12 16:04:28.948 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 14.1895ms
2025-10-12 16:04:28.949 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:04:28.949 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:04:28.963 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:28.968 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:28.969 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:28'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:04:28.970 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:28'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:04:28.972 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:28'.
2025-10-12 16:04:28.974 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:28'.
2025-10-12 16:04:28.975 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:28.977 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:04:28.978 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:04:28.980 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:04:28.983 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:04:28.986 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:04:28.987 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:04:28.990 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:04:28.990 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.8225ms
2025-10-12 16:04:28.991 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:04:28.992 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 7.5456ms
2025-10-12 16:04:28.993 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:28.996 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:28.998 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:04:29.000 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 51.0364ms
2025-10-12 16:04:29.001 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:29'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:04:29.002 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 53.2122ms
2025-10-12 16:04:29.009 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:29'.
2025-10-12 16:04:29.015 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:29.017 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:04:29.020 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:04:29.024 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:04:29.026 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.4913ms
2025-10-12 16:04:29.028 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:29.029 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 37.9753ms
2025-10-12 16:04:35.731 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 16:04:35.732 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:04:35.732 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:04:35.735 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:35.738 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:35.741 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:35.742 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 10.3264ms
2025-10-12 16:04:35.743 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 11.3101ms
2025-10-12 16:04:35.744 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 12.0291ms
2025-10-12 16:04:35.745 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:04:35.746 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:04:35.759 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:35.763 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:35.765 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:35'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:04:35.766 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:35'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:04:35.768 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:35'.
2025-10-12 16:04:35.770 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:35'.
2025-10-12 16:04:35.771 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:04:35.772 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:35.774 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:04:35.775 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:04:35.782 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:04:35.783 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:04:35.786 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:04:35.788 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:04:35.790 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.447ms
2025-10-12 16:04:35.792 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.1806ms
2025-10-12 16:04:35.793 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:04:35.793 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:04:35.795 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:35.798 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:35.799 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 53.8402ms
2025-10-12 16:04:35.801 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 54.9547ms
2025-10-12 16:04:35.802 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:35'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:04:35.811 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:35'.
2025-10-12 16:04:35.813 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:35.814 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:04:35.817 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:04:35.820 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:04:35.822 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 5.6091ms
2025-10-12 16:04:35.823 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:35.824 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 31.5737ms
2025-10-12 16:04:37.133 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:04:37.133 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:04:37.136 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:37.141 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:37.142 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:37'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:04:37.143 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:37'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:04:37.145 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:37'.
2025-10-12 16:04:37.147 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:37'.
2025-10-12 16:04:37.149 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:04:37.150 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:37.152 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:04:37.153 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:04:37.157 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:04:37.159 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:04:37.161 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:04:37.164 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:04:37.165 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.1942ms
2025-10-12 16:04:37.167 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.5373ms
2025-10-12 16:04:37.167 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:04:37.168 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:04:37.169 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:37.172 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:37.174 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 40.1878ms
2025-10-12 16:04:37.175 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 41.4838ms
2025-10-12 16:04:37.176 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:37'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:04:37.186 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:37'.
2025-10-12 16:04:37.187 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:37.189 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:04:37.192 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:04:37.195 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:04:37.197 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 6.2053ms
2025-10-12 16:04:37.200 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:37.202 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 34.2826ms
2025-10-12 16:04:38.568 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:04:38.571 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:04:38.573 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:38.576 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:38.577 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:04:38.577 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:04:38.579 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:38'.
2025-10-12 16:04:38.581 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:38'.
2025-10-12 16:04:38.582 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:04:38.584 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:38.585 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:04:38.586 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:04:38.589 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:04:38.593 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:04:38.593 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:04:38.596 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:04:38.598 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.4292ms
2025-10-12 16:04:38.599 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:04:38.599 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.3481ms
2025-10-12 16:04:38.600 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:38.603 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:38.604 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:04:38.606 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 35.2579ms
2025-10-12 16:04:38.607 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:04:38.608 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 40.0495ms
2025-10-12 16:04:38.615 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:38'.
2025-10-12 16:04:38.621 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:38.622 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:04:38.626 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:04:38.629 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:04:38.631 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 5.9944ms
2025-10-12 16:04:38.632 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:38.634 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 35.4613ms
2025-10-12 16:04:40.084 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:04:40.086 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:04:40.088 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:40.091 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:40.092 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:40'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:04:40.093 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:40'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:04:40.095 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:40'.
2025-10-12 16:04:40.097 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:40'.
2025-10-12 16:04:40.099 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:04:40.100 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:40.101 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:04:40.102 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:04:40.106 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:04:40.107 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:04:40.109 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:04:40.111 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:04:40.112 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 7.446ms
2025-10-12 16:04:40.113 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 6.7551ms
2025-10-12 16:04:40.114 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:04:40.115 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:04:40.116 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:40.119 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:40.121 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 36.5966ms
2025-10-12 16:04:40.122 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 35.4078ms
2025-10-12 16:04:40.123 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:40'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:04:40.131 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:40'.
2025-10-12 16:04:40.132 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:40.134 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:04:40.137 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:04:40.139 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:04:40.141 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 5.1947ms
2025-10-12 16:04:40.142 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:40.143 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 29.4467ms
2025-10-12 16:04:41.393 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 16:04:41.393 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:04:41.393 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:04:41.393 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-12 16:04:41.396 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:41.398 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:41.401 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:41.402 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:41.404 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 10.3244ms
2025-10-12 16:04:41.404 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 11.0335ms
2025-10-12 16:04:41.405 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 11.5698ms
2025-10-12 16:04:41.406 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 12.741ms
2025-10-12 16:04:41.407 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:04:41.407 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-12 16:04:41.408 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:04:41.423 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:41.426 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:41.429 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:41.431 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:41'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:04:41.432 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:41.432 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:41'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:04:41.435 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:41'.
2025-10-12 16:04:41.436 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:04:41.438 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:41'.
2025-10-12 16:04:41.439 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:41.441 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 16:04:41.443 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:04:41.444 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:41.446 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:04:41.447 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:04:41.449 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:04:41.450 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 8.6322ms
2025-10-12 16:04:41.452 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:04:41.452 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 16:04:41.455 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:04:41.455 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 13.5141ms
2025-10-12 16:04:41.462 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:04:41.463 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:41.466 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:04:41.467 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:41.470 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:04:41.470 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:04:41.472 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 18.2987ms
2025-10-12 16:04:41.473 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:04:41.473 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 66.5721ms
2025-10-12 16:04:41.475 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 14.2298ms
2025-10-12 16:04:41.476 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 16:04:41.477 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:41.481 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:41.487 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:04:41.490 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 83.1062ms
2025-10-12 16:04:41.491 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:41'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:04:41.492 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 84.3586ms
2025-10-12 16:04:41.497 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:41'.
2025-10-12 16:04:41.502 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 16:04:41.502 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:41.505 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:04:41.506 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:04:41.507 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 18.4022ms
2025-10-12 16:04:41.510 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:04:41.510 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:04:41.513 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:04:41.514 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 61.6257ms
2025-10-12 16:04:41.515 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 6.1437ms
2025-10-12 16:04:41.516 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 16:04:41.519 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:04:41.521 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:41.522 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 49.5147ms
2025-10-12 16:04:41.523 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 7.1414ms
2025-10-12 16:04:41.524 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 16:04:41.532 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:04:41.534 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:41'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:04:41.537 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:04:41'.
2025-10-12 16:04:41.538 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:04:41.540 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 16:04:41.552 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 16:04:41.555 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 16:04:41.556 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 14.457ms
2025-10-12 16:04:41.558 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:04:41.559 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 35.1119ms
2025-10-12 16:05:42.343 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 16:05:42.344 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:05:42.345 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-12 16:05:42.345 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:05:42.347 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:05:42.349 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:05:42.352 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:05:42.355 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:05:42.356 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 12.9178ms
2025-10-12 16:05:42.357 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:05:42.358 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 13.4356ms
2025-10-12 16:05:42.359 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:05:42.359 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 14.3506ms
2025-10-12 16:05:42.360 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 15.4236ms
2025-10-12 16:05:42.362 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-12 16:05:42.366 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:05:42.373 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:05:42.383 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 16:05:42.384 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:05:42.385 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:05:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:05:42.386 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:05:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:05:42.389 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:05:42.391 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:05:42.393 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:05:42'.
2025-10-12 16:05:42.395 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:05:42'.
2025-10-12 16:05:42.396 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 12.8816ms
2025-10-12 16:05:42.397 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:05:42.397 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 16:05:42.398 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:05:42.400 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:05:42.410 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:05:42.411 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:05:42.412 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:05:42.413 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:05:42.413 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:05:42.419 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:05:42.419 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 16:05:42.421 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:05:42.423 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:05:42.425 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:05:42.426 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 19.241ms
2025-10-12 16:05:42.427 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.0504ms
2025-10-12 16:05:42.430 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:05:42.431 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:05:42.432 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:05:42.434 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 16:05:42.434 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 76.6137ms
2025-10-12 16:05:42.436 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 73.67ms
2025-10-12 16:05:42.437 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 19.3989ms
2025-10-12 16:05:42.438 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:05:42.440 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:05:42.448 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:05:42.451 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:05:42.453 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 28.7111ms
2025-10-12 16:05:42.454 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 95.4433ms
2025-10-12 16:05:42.456 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:05:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:05:42.457 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:05:42.462 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:05:42'.
2025-10-12 16:05:42.464 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 66.8982ms
2025-10-12 16:05:42.465 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:05:42.466 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 16:05:42.472 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:05:42.476 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:05:42.480 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:05:42.480 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 14.2933ms
2025-10-12 16:05:42.481 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 16:05:42.483 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:05:42.490 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:05:42.492 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:05:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:05:42.492 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 13.0131ms
2025-10-12 16:05:42.494 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:05:42'.
2025-10-12 16:05:42.495 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:05:42.496 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:05:42.497 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 59.4076ms
2025-10-12 16:05:42.499 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 16:05:42.513 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 16:05:42.516 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 16:05:42.518 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 13.6025ms
2025-10-12 16:05:42.520 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:05:42.521 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 39.3789ms
2025-10-12 16:06:32.967 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 16:06:32.968 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:06:32.973 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:06:32.977 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:06:32.979 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 11.6538ms
2025-10-12 16:06:32.981 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:06:32.981 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 12.8796ms
2025-10-12 16:06:32.985 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:06:32.985 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:06:32.992 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:06:33.000 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:06:33.004 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:06:33.006 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 24.489ms
2025-10-12 16:06:33.010 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:06:33'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:06:33.010 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:06:33'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:06:33.017 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:06:33'.
2025-10-12 16:06:33.020 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:06:33'.
2025-10-12 16:06:33.022 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:06:33.023 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:06:33.025 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:06:33.027 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:06:33.039 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:06:33.041 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:06:33.045 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:06:33.050 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:06:33.052 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 20.4729ms
2025-10-12 16:06:33.054 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 17.4876ms
2025-10-12 16:06:33.056 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:06:33.058 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:06:33.058 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:06:33.060 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 74.1713ms
2025-10-12 16:06:33.063 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:06:33.066 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 80.0396ms
2025-10-12 16:06:33.072 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:06:33'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:06:33.083 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:06:33'.
2025-10-12 16:06:33.086 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:06:33.088 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:06:33.095 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:06:33.098 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:06:33.100 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.2565ms
2025-10-12 16:06:33.102 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:06:33.104 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 46.0415ms
2025-10-12 16:06:36.044 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:06:36.045 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:06:36.048 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:06:36.052 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:06:36.053 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:06:36'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:06:36.054 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:06:36'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:06:36.056 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:06:36'.
2025-10-12 16:06:36.058 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:06:36'.
2025-10-12 16:06:36.059 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:06:36.062 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:06:36.060 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:06:36.066 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:06:36.066 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:06:36.069 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:06:36.071 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:06:36.073 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:06:36.075 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.3557ms
2025-10-12 16:06:36.076 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.3602ms
2025-10-12 16:06:36.077 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:06:36.078 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:06:36.080 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:06:36.083 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:06:36.084 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 40.4312ms
2025-10-12 16:06:36.085 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 40.1944ms
2025-10-12 16:06:36.087 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:06:36'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:06:36.095 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:06:36'.
2025-10-12 16:06:36.096 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:06:36.097 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:06:36.100 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:06:36.103 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:06:36.105 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 5.3651ms
2025-10-12 16:06:36.106 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:06:36.108 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 30.4095ms
2025-10-12 16:06:43.538 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:06:43.538 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 16:06:43.538 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:06:43.538 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-12 16:06:43.542 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:06:43.545 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:06:43.549 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:06:43.552 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:06:43.553 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 15.1143ms
2025-10-12 16:06:43.554 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 16.2389ms
2025-10-12 16:06:43.556 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 17.5806ms
2025-10-12 16:06:43.556 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:06:43.557 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 18.0656ms
2025-10-12 16:06:43.557 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:06:43.559 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-12 16:06:43.573 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:06:43.580 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:06:43.583 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:06:43.584 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:06:43'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:06:43.585 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:06:43'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:06:43.586 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:06:43.588 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:06:43'.
2025-10-12 16:06:43.590 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:06:43'.
2025-10-12 16:06:43.592 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:06:43.593 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:06:43.594 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:06:43.599 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:06:43.600 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:06:43.603 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:06:43.604 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:06:43.608 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:06:43.609 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:06:43.611 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:06:43.612 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 14.4548ms
2025-10-12 16:06:43.614 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:06:43.616 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 13.3954ms
2025-10-12 16:06:43.617 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:06:43.618 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:06:43.620 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 14.9808ms
2025-10-12 16:06:43.622 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:06:43.622 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 16:06:43.625 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:06:43.627 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 68.1113ms
2025-10-12 16:06:43.628 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:06:43.629 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 73.3332ms
2025-10-12 16:06:43.633 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:06:43.634 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:06:43'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:06:43.639 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 82.5772ms
2025-10-12 16:06:43.644 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 21.7236ms
2025-10-12 16:06:43.646 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:06:43'.
2025-10-12 16:06:43.647 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 16:06:43.656 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:06:43.659 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:06:43.660 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:06:43.661 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:06:43.664 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:06:43.665 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 16:06:43.669 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:06:43.673 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.4267ms
2025-10-12 16:06:43.674 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:06:43.676 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 58.9479ms
2025-10-12 16:06:43.682 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 16:06:43.686 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:06:43.689 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 17.8252ms
2025-10-12 16:06:43.690 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:06:43.691 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 44.8164ms
2025-10-12 16:06:43.807 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 16:06:43.812 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:06:43.813 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 6.461ms
2025-10-12 16:06:43.816 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 16:06:43.821 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:06:43.822 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:06:43'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:06:43.824 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:06:43'.
2025-10-12 16:06:43.826 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:06:43.828 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 16:06:43.840 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 16:06:43.843 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 16:06:43.845 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 15.0255ms
2025-10-12 16:06:43.848 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:06:43.850 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 33.9772ms
2025-10-12 16:08:06.917 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 16:08:06.919 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:08:06.920 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:08:06.921 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:08:06.924 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:08:06.927 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:08:06.929 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 11.7643ms
2025-10-12 16:08:06.930 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 11.5831ms
2025-10-12 16:08:06.932 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 11.9073ms
2025-10-12 16:08:06.933 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:08:06.933 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:08:06.948 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:08:06.951 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:08:06.952 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:08:06'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:08:06.953 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:08:06'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:08:06.956 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:08:06'.
2025-10-12 16:08:06.958 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:08:06'.
2025-10-12 16:08:06.959 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:08:06.961 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:08:06.962 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:08:06.964 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:08:06.973 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:08:06.973 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:08:06.976 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:08:06.978 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:08:06.980 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 14.0186ms
2025-10-12 16:08:06.981 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:08:06.982 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 13.834ms
2025-10-12 16:08:06.984 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:08:06.988 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:08:06.989 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:08:06.990 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 57.2646ms
2025-10-12 16:08:06.992 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:08:06'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:08:06.993 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 59.9526ms
2025-10-12 16:08:07.000 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:08:06'.
2025-10-12 16:08:07.006 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:08:07.007 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:08:07.011 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:08:07.014 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:08:07.016 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 6.4202ms
2025-10-12 16:08:07.018 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:08:07.020 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 39.3976ms
2025-10-12 16:08:08.271 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:08:08.271 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:08:08.273 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:08:08.276 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:08:08.278 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:08:08'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:08:08.280 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:08:08'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:08:08.282 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:08:08'.
2025-10-12 16:08:08.284 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:08:08'.
2025-10-12 16:08:08.286 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:08:08.287 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:08:08.289 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:08:08.290 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:08:08.294 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:08:08.297 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:08:08.299 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:08:08.301 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:08:08.303 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 10.117ms
2025-10-12 16:08:08.304 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:08:08.304 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.0403ms
2025-10-12 16:08:08.307 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:08:08.310 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:08:08.312 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:08:08.313 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 42.411ms
2025-10-12 16:08:08.314 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:08:08'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:08:08.315 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 44.8397ms
2025-10-12 16:08:08.321 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:08:08'.
2025-10-12 16:08:08.327 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:08:08.328 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:08:08.335 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:08:08.338 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:08:08.341 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.3209ms
2025-10-12 16:08:08.342 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:08:08.344 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 40.0453ms
2025-10-12 16:08:21.721 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:08:21.721 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:08:21.721 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 16:08:21.724 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:08:21.727 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:08:21.731 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:08:21.732 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 11.0249ms
2025-10-12 16:08:21.733 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 11.7935ms
2025-10-12 16:08:21.734 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 12.5022ms
2025-10-12 16:08:21.734 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:08:21.734 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:08:21.748 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:08:21.751 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:08:21.752 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:08:21'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:08:21.753 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:08:21'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:08:21.754 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:08:21'.
2025-10-12 16:08:21.757 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:08:21'.
2025-10-12 16:08:21.758 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:08:21.759 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:08:21.761 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:08:21.762 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:08:21.766 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:08:21.770 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:08:21.771 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:08:21.772 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.3378ms
2025-10-12 16:08:21.772 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:08:21.774 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:08:21.775 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:08:21.778 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:08:21.779 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 11.9828ms
2025-10-12 16:08:21.780 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 46.228ms
2025-10-12 16:08:21.781 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:08:21'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:08:21.782 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:08:21.788 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:08:21'.
2025-10-12 16:08:21.790 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 55.1336ms
2025-10-12 16:08:21.791 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:08:21.795 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:08:21.798 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:08:21.801 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:08:21.802 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 5.4633ms
2025-10-12 16:08:21.803 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:08:21.805 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 32.3518ms
2025-10-12 16:08:23.558 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:08:23.558 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:08:23.562 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:08:23.564 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:08:23.565 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:08:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:08:23.566 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:08:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:08:23.568 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:08:23'.
2025-10-12 16:08:23.570 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:08:23'.
2025-10-12 16:08:23.572 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:08:23.573 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:08:23.574 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:08:23.575 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:08:23.578 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:08:23.580 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:08:23.582 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:08:23.584 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:08:23.586 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.5554ms
2025-10-12 16:08:23.587 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:08:23.587 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 7.9352ms
2025-10-12 16:08:23.589 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:08:23.592 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:08:23.593 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:08:23.595 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 36.3539ms
2025-10-12 16:08:23.596 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:08:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:08:23.597 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 38.8559ms
2025-10-12 16:08:23.602 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:08:23'.
2025-10-12 16:08:23.608 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:08:23.610 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:08:23.614 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:08:23.617 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:08:23.618 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 6.2032ms
2025-10-12 16:08:23.620 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:08:23.621 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 34.4236ms
2025-10-12 16:09:04.858 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 16:09:04.863 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:09:04.863 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:09:04.864 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:09:04.866 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:09:04.868 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 9.8919ms
2025-10-12 16:09:04.871 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:09:04.871 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:09:04.872 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 9.7516ms
2025-10-12 16:09:04.875 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:09:04.880 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:09:04.882 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 17.7898ms
2025-10-12 16:09:04.888 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:09:04.890 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:09:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:09:04.895 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:09:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:09:04.897 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:09:04'.
2025-10-12 16:09:04.899 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:09:04'.
2025-10-12 16:09:04.901 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:09:04.902 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:09:04.904 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:09:04.905 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:09:04.915 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:09:04.915 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:09:04.919 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:09:04.922 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:09:04.924 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 16.4467ms
2025-10-12 16:09:04.926 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 16.0455ms
2025-10-12 16:09:04.927 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:09:04.928 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:09:04.929 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:09:04.933 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:09:04.935 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 64.0297ms
2025-10-12 16:09:04.936 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 61.4395ms
2025-10-12 16:09:04.937 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:09:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:09:04.947 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:09:04'.
2025-10-12 16:09:04.948 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:09:04.949 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:09:04.953 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:09:04.956 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:09:04.959 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.0683ms
2025-10-12 16:09:04.961 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:09:04.962 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 35.303ms
2025-10-12 16:09:06.922 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:09:06.922 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:09:06.927 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:09:06.931 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:09:06.933 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:09:06'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:09:06.934 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:09:06'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:09:06.935 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:09:06'.
2025-10-12 16:09:06.937 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:09:06'.
2025-10-12 16:09:06.939 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:09:06.940 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:09:06.941 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:09:06.942 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:09:06.946 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:09:06.949 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:09:06.950 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:09:06.953 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:09:06.955 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.0814ms
2025-10-12 16:09:06.957 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.875ms
2025-10-12 16:09:06.958 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:09:06.958 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:09:06.960 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:09:06.963 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:09:06.966 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:09:06'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:09:06.968 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 46.5808ms
2025-10-12 16:09:06.970 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 48.2785ms
2025-10-12 16:09:06.973 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:09:06'.
2025-10-12 16:09:06.983 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:09:06.985 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:09:06.991 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:09:06.995 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:09:06.997 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.4907ms
2025-10-12 16:09:06.998 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:09:07.000 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 42.4073ms
2025-10-12 16:09:10.864 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 16:09:10.864 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:09:10.864 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:09:10.865 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-12 16:09:10.868 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:09:10.872 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:09:10.875 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:09:10.878 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:09:10.879 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 14.7192ms
2025-10-12 16:09:10.880 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 15.4835ms
2025-10-12 16:09:10.880 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 15.9808ms
2025-10-12 16:09:10.881 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:09:10.881 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:09:10.882 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 16.9755ms
2025-10-12 16:09:10.883 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-12 16:09:10.896 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:09:10.899 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:09:10.907 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:09:10.908 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:09:10'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:09:10.909 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:09:10'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:09:10.910 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:09:10.912 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:09:10'.
2025-10-12 16:09:10.914 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:09:10'.
2025-10-12 16:09:10.915 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:09:10.916 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:09:10.918 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:09:10.921 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:09:10.921 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:09:10.922 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:09:10.926 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:09:10.927 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:09:10.929 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:09:10.931 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:09:10.933 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.8359ms
2025-10-12 16:09:10.935 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:09:10.937 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.5447ms
2025-10-12 16:09:10.938 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:09:10.940 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 11.3983ms
2025-10-12 16:09:10.941 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:09:10.941 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:09:10.943 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 59.186ms
2025-10-12 16:09:10.944 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:09:10.946 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:09:10.948 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 67.0151ms
2025-10-12 16:09:10.952 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 16:09:10.955 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 73.4133ms
2025-10-12 16:09:10.956 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:09:10'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:09:10.962 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:09:10.968 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:09:10'.
2025-10-12 16:09:10.969 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 16.7759ms
2025-10-12 16:09:10.970 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:09:10.971 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 16:09:10.975 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:09:10.978 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:09:10.981 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:09:10.981 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:09:10.982 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 16:09:10.984 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:09:10.988 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.9801ms
2025-10-12 16:09:10.989 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:09:10.990 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 49.9608ms
2025-10-12 16:09:10.996 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 16:09:11.000 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:09:11.001 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 15.4083ms
2025-10-12 16:09:11.003 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:09:11.004 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 33.4018ms
2025-10-12 16:09:11.134 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 16:09:11.136 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:09:11.137 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 3.5445ms
2025-10-12 16:09:11.139 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 16:09:11.143 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:09:11.147 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:09:11'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:09:11.149 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:09:11'.
2025-10-12 16:09:11.150 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:09:11.151 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 16:09:11.163 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 16:09:11.167 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 16:09:11.169 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 15.2425ms
2025-10-12 16:09:11.170 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:09:11.171 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 31.791ms
2025-10-12 16:09:35.844 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 16:09:35.845 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:09:35.845 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:09:35.848 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:09:35.851 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:09:35.855 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:09:35.857 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 12.5345ms
2025-10-12 16:09:35.858 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 13.5427ms
2025-10-12 16:09:35.858 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:09:35.859 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:09:35.859 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 14.0052ms
2025-10-12 16:09:35.869 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:09:35.872 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:09:35.877 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:09:35'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:09:35.879 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:09:35'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:09:35.880 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:09:35'.
2025-10-12 16:09:35.882 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:09:35'.
2025-10-12 16:09:35.884 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:09:35.885 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:09:35.887 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:09:35.888 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:09:35.892 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:09:35.893 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:09:35.895 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:09:35.897 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:09:35.899 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.4464ms
2025-10-12 16:09:35.900 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.8869ms
2025-10-12 16:09:35.901 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:09:35.902 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:09:35.903 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:09:35.906 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:09:35.908 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 49.3823ms
2025-10-12 16:09:35.909 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 50.2163ms
2025-10-12 16:09:35.911 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:09:35'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:09:35.919 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:09:35'.
2025-10-12 16:09:35.920 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:09:35.922 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:09:35.926 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:09:35.928 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:09:35.930 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 5.5762ms
2025-10-12 16:09:35.932 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:09:35.933 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 31.9021ms
2025-10-12 16:10:05.246 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - null null
2025-10-12 16:10:05.251 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:05.252 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 204 null null 5.8901ms
2025-10-12 16:10:05.254 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-12 16:10:05.259 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:05.260 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:10:05.262 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:05'.
2025-10-12 16:10:05.264 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:10:05.265 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 16:10:05.277 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 16:10:05.280 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 12.9023ms
2025-10-12 16:10:05.282 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:10:05.284 +04:00 [ERR] An unhandled exception has occurred while executing the request.
GreenZone.Application.Exceptions.NotFoundException: Basket not found for the customer.
   at GreenZone.Application.Service.BasketService.GetBasketByCustomerAsync(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\BasketService.cs:line 75
   at GreenZone.API.Controllers.BasketController.GetBasketByCustomerId(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\BasketController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-12 16:10:05.291 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 500 null text/plain; charset=utf-8 37.501ms
2025-10-12 16:10:05.419 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 16:10:05.425 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:05.426 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 7.457ms
2025-10-12 16:10:05.427 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 16:10:05.434 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 16:10:05.437 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:05.440 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:05.442 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 14.5737ms
2025-10-12 16:10:05.443 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:10:05.450 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 16:10:05.466 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 16:10:05.472 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:10:05.476 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 23.0896ms
2025-10-12 16:10:05.477 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 16:10:05.479 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:10:05.483 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:05.485 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 51.0674ms
2025-10-12 16:10:05.486 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:10:05.493 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 16:10:05.498 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 16:10:05.499 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 16:10:05.500 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 16:10:05.502 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:10:05.505 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:05.508 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:05.510 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 14.5043ms
2025-10-12 16:10:05.512 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 13.1584ms
2025-10-12 16:10:05.513 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 12.9153ms
2025-10-12 16:10:05.514 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 16:10:05.515 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:10:05.527 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:05.529 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 51.6937ms
2025-10-12 16:10:05.530 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:10:05.535 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:05'.
2025-10-12 16:10:05.537 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:10:05.538 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 16:10:05.543 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 16:10:05.546 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 16:10:05.547 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 7.1125ms
2025-10-12 16:10:05.549 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 16:10:05.549 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:10:05.551 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:05.552 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 38.6134ms
2025-10-12 16:10:05.554 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:10:05.554 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 16:10:05.554 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:10:05.559 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:05'.
2025-10-12 16:10:05.561 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:05.564 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:05.565 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:10:05.566 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 12.2023ms
2025-10-12 16:10:05.567 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 12.9934ms
2025-10-12 16:10:05.567 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:10:05.568 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:10:05.568 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 16:10:05.578 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:05.581 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:05.584 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:10:05.585 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 16:10:05.585 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:10:05.587 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:05'.
2025-10-12 16:10:05.590 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 16:10:05.592 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:05'.
2025-10-12 16:10:05.593 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:10:05.594 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 10.9257ms
2025-10-12 16:10:05.595 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:10:05.597 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:10:05.598 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:10:05.599 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:10:05.603 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 54.1311ms
2025-10-12 16:10:05.606 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:10:05.609 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:10:05.611 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:10:05.614 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:10:05.615 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 13.3185ms
2025-10-12 16:10:05.615 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:10:05.617 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 11.0756ms
2025-10-12 16:10:05.618 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:10:05.618 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:10:05.621 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:05.622 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:10:05.625 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:05.627 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 59.2168ms
2025-10-12 16:10:05.628 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:10:05.629 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 60.762ms
2025-10-12 16:10:05.630 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:10:05.635 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:05'.
2025-10-12 16:10:05.641 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:05'.
2025-10-12 16:10:05.642 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:10:05.644 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:10:05.645 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:10:05.646 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:10:05.650 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:10:05.651 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:10:05.653 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:10:05.655 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:10:05.657 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.2228ms
2025-10-12 16:10:05.658 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.3841ms
2025-10-12 16:10:05.660 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:10:05.661 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:10:05.662 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 46.8708ms
2025-10-12 16:10:05.664 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 46.1642ms
2025-10-12 16:10:35.185 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 16:10:35.185 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-12 16:10:35.186 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 16:10:35.187 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-12 16:10:35.189 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:35.192 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:35.195 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:35.198 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:35.199 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 13.7545ms
2025-10-12 16:10:35.199 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 14.1013ms
2025-10-12 16:10:35.200 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 14.0936ms
2025-10-12 16:10:35.201 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 14.6054ms
2025-10-12 16:10:35.202 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 16:10:35.202 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-12 16:10:35.220 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:35.224 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:35.224 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:10:35.225 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:10:35.226 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 16:10:35.228 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:10:35.232 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 16:10:35.233 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:10:35.236 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:10:35.238 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:10:35.239 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 8.6253ms
2025-10-12 16:10:35.240 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 16:10:35.240 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.9825ms
2025-10-12 16:10:35.241 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-12 16:10:35.242 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:10:35.245 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:35.247 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:10:35.250 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:35.252 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 49.812ms
2025-10-12 16:10:35.253 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:10:35.254 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 51.8525ms
2025-10-12 16:10:35.255 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:10:35.258 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 16:10:35.258 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 16:10:35.261 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 16:10:35.267 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:10:35.271 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:35.275 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:35.279 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 16:10:35.281 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 22.7734ms
2025-10-12 16:10:35.281 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:10:35.282 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 23.5119ms
2025-10-12 16:10:35.283 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 16:10:35.285 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:10:35.292 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:10:35.299 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:35.300 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 22.7865ms
2025-10-12 16:10:35.302 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 22.0114ms
2025-10-12 16:10:35.303 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:35'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:10:35.304 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:10:35.306 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:10:35.308 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:35'.
2025-10-12 16:10:35.310 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 69.6764ms
2025-10-12 16:10:35.311 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 70.3448ms
2025-10-12 16:10:35.313 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:10:35.322 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 16:10:35.325 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 16:10:35.328 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 16:10:35.330 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 6.5475ms
2025-10-12 16:10:35.332 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 16:10:35.332 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:10:35.336 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:35.337 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 54.0782ms
2025-10-12 16:10:35.339 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:35'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:10:35.340 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 16:10:35.340 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:10:35.346 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:35'.
2025-10-12 16:10:35.349 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:35.352 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:35.354 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:10:35.355 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 15.4758ms
2025-10-12 16:10:35.356 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 16.3229ms
2025-10-12 16:10:35.357 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:10:35.357 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 16:10:35.357 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:10:35.368 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:35.371 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 16:10:35.372 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:35.373 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:35'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:10:35.376 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 16:10:35.376 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:35'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:10:35.378 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:35'.
2025-10-12 16:10:35.379 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 9.3508ms
2025-10-12 16:10:35.381 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:35'.
2025-10-12 16:10:35.382 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:10:35.383 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:10:35.384 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:10:35.385 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:10:35.387 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 55.0846ms
2025-10-12 16:10:35.388 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:10:35.391 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:10:35.396 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:10:35.396 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:10:35.398 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.2705ms
2025-10-12 16:10:35.399 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:10:35.399 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:10:35.400 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:10:35.402 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:35.403 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.6545ms
2025-10-12 16:10:35.404 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 46.6342ms
2025-10-12 16:10:35.404 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:10:35.404 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:35'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:10:35.405 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:10:35.410 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:35.411 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:35'.
2025-10-12 16:10:35.411 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 54.0296ms
2025-10-12 16:10:35.412 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:35'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:10:35.413 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:10:35.417 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:35'.
2025-10-12 16:10:35.417 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:10:35.418 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:10:35.420 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:10:35.420 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:10:35.422 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:10:35.423 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:10:35.424 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:10:35.425 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 6.1529ms
2025-10-12 16:10:35.427 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 5.233ms
2025-10-12 16:10:35.428 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:10:35.429 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:10:35.430 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 31.3076ms
2025-10-12 16:10:35.431 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 26.6578ms
2025-10-12 16:10:41.509 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - null null
2025-10-12 16:10:41.515 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:41.515 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 204 null null 6.8734ms
2025-10-12 16:10:41.517 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-12 16:10:41.522 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:41.523 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:41'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:10:41.526 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:41'.
2025-10-12 16:10:41.528 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:10:41.530 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 16:10:41.533 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 16:10:41.536 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 3.7436ms
2025-10-12 16:10:41.538 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:10:41.539 +04:00 [ERR] An unhandled exception has occurred while executing the request.
GreenZone.Application.Exceptions.NotFoundException: Basket not found for the customer.
   at GreenZone.Application.Service.BasketService.GetBasketByCustomerAsync(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\BasketService.cs:line 75
   at GreenZone.API.Controllers.BasketController.GetBasketByCustomerId(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\BasketController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-12 16:10:41.545 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 500 null text/plain; charset=utf-8 28.6051ms
2025-10-12 16:10:42.733 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 16:10:42.734 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:10:42.734 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 16:10:42.734 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:10:42.737 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:42.740 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:42.743 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:42.747 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:42.748 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 14.5317ms
2025-10-12 16:10:42.750 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 16.055ms
2025-10-12 16:10:42.751 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 17.3891ms
2025-10-12 16:10:42.752 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 18.4152ms
2025-10-12 16:10:42.752 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:10:42.753 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:10:42.772 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:42.776 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:42.777 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:10:42.778 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:10:42.779 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:42'.
2025-10-12 16:10:42.781 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:42'.
2025-10-12 16:10:42.783 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:10:42.784 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:10:42.786 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:10:42.787 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:10:42.791 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:10:42.793 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:10:42.794 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:10:42.797 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:10:42.799 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.278ms
2025-10-12 16:10:42.799 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:10:42.800 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.5665ms
2025-10-12 16:10:42.801 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:10:42.802 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:10:42.805 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:42.807 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:10:42.810 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:42.811 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 58.7896ms
2025-10-12 16:10:42.813 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:10:42.814 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 60.7705ms
2025-10-12 16:10:42.815 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:10:42.821 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:42'.
2025-10-12 16:10:42.827 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:42'.
2025-10-12 16:10:42.828 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:10:42.829 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:10:42.831 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:10:42.832 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:10:42.836 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:10:42.837 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:10:42.839 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:10:42.841 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:10:42.843 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.4469ms
2025-10-12 16:10:42.844 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.9444ms
2025-10-12 16:10:42.846 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:10:42.847 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:10:42.848 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 48.9572ms
2025-10-12 16:10:42.850 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 48.8359ms
2025-10-12 16:10:46.130 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:10:46.131 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-12 16:10:46.131 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:10:46.134 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:46.136 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:46.139 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:46.141 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:46'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:10:46.142 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 10.9764ms
2025-10-12 16:10:46.143 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:46'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:10:46.144 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-12 16:10:46.146 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:46'.
2025-10-12 16:10:46.153 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:46'.
2025-10-12 16:10:46.156 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:46.156 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 16:10:46.157 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:10:46.159 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:10:46.160 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:10:46.163 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:46.164 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:10:46.165 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:10:46.167 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:10:46.168 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 11.4779ms
2025-10-12 16:10:46.169 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 16:10:46.171 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:10:46.174 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:10:46.176 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:10:46.182 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:46.185 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:10:46.188 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:10:46.190 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:10:46.191 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:10:46.193 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 22.6728ms
2025-10-12 16:10:46.194 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:10:46.195 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 22.3447ms
2025-10-12 16:10:46.196 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:10:46.197 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 21.8983ms
2025-10-12 16:10:46.198 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 16:10:46.200 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:10:46.203 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:46.204 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:10:46.207 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:46.209 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:10:46.212 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 81.8827ms
2025-10-12 16:10:46.213 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 16:10:46.213 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:46'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:10:46.215 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 83.5128ms
2025-10-12 16:10:46.216 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:46'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:10:46.217 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 73.7977ms
2025-10-12 16:10:46.224 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:10:46.226 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:46'.
2025-10-12 16:10:46.233 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:46'.
2025-10-12 16:10:46.238 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 26.9069ms
2025-10-12 16:10:46.239 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:10:46.240 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:10:46.242 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:10:46.243 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:10:46.244 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:10:46.245 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 75.5333ms
2025-10-12 16:10:46.247 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 16:10:46.248 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:10:46.250 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:10:46.255 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:46.257 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:10:46.260 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:10:46.261 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 13.8338ms
2025-10-12 16:10:46.262 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 16:10:46.263 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 15.5789ms
2025-10-12 16:10:46.265 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 15.6023ms
2025-10-12 16:10:46.271 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:10:46.272 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:10:46.273 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:10:46.274 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:46'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:10:46.275 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 81.316ms
2025-10-12 16:10:46.277 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 80.9224ms
2025-10-12 16:10:46.279 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:10:46'.
2025-10-12 16:10:46.287 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:10:46.288 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 16:10:46.292 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 16:10:46.294 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 16:10:46.296 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 5.548ms
2025-10-12 16:10:46.297 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:10:46.299 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 36.86ms
2025-10-12 16:11:39.432 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 16:11:39.433 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-12 16:11:39.433 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:11:39.440 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 16:11:39.440 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:39.440 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:11:39.440 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-12 16:11:39.443 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:39.447 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 16:11:39.447 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 16:11:39.447 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:39.451 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:39.455 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:39.457 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 24.1948ms
2025-10-12 16:11:39.461 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:39.461 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:11:39.465 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:39.466 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 33.3601ms
2025-10-12 16:11:39.468 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:39.469 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 36.6879ms
2025-10-12 16:11:39.470 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-12 16:11:39.470 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 23.7363ms
2025-10-12 16:11:39.472 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 32.0485ms
2025-10-12 16:11:39.473 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:11:39.476 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 16:11:39.478 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 37.3629ms
2025-10-12 16:11:39.481 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:39.482 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 42.1263ms
2025-10-12 16:11:39.488 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 41.258ms
2025-10-12 16:11:39.497 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:39.510 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:39.513 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:39.519 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:39'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:39.528 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:39.530 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:39'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:39.530 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:11:39.532 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:39'.
2025-10-12 16:11:39.534 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:11:39.535 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:39'.
2025-10-12 16:11:39.537 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 16:11:39.538 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:11:39.542 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:39.546 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:11:39.547 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:11:39.547 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:11:39.552 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:39.554 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 16:11:39.555 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:11:39.557 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:11:39.558 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 17.1062ms
2025-10-12 16:11:39.559 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-12 16:11:39.561 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:39.563 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:39.566 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:39.568 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:39.571 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:39.573 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 28.3628ms
2025-10-12 16:11:39.574 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 16:11:39.576 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 26.3773ms
2025-10-12 16:11:39.577 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:11:39.577 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 21.669ms
2025-10-12 16:11:39.579 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:11:39.579 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 108.9413ms
2025-10-12 16:11:39.579 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:39.581 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:11:39.585 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:39.587 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:11:39.590 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:39.592 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:39.595 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:39.600 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:11:39.601 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 125.0546ms
2025-10-12 16:11:39.603 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:11:39.603 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 16:11:39.604 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 142.5701ms
2025-10-12 16:11:39.605 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:39'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:39.606 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 132.9269ms
2025-10-12 16:11:39.607 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:39'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:39.610 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:11:39.614 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 16:11:39.617 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:39.623 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:39'.
2025-10-12 16:11:39.629 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:39'.
2025-10-12 16:11:39.632 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:39.636 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 32.8118ms
2025-10-12 16:11:39.636 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 16:11:39.637 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:11:39.637 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 16:11:39.638 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:39.639 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 30.8484ms
2025-10-12 16:11:39.646 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:39.647 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:11:39.650 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:39.651 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:11:39.652 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:39.654 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 19.7252ms
2025-10-12 16:11:39.657 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:39'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:39.658 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:11:39.661 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 101.5135ms
2025-10-12 16:11:39.661 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:11:39.662 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:11:39.664 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:39'.
2025-10-12 16:11:39.667 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:39.673 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:39.675 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 100.3529ms
2025-10-12 16:11:39.676 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:11:39.678 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 21.7698ms
2025-10-12 16:11:39.679 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:11:39.680 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 20.6605ms
2025-10-12 16:11:39.681 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:11:39.686 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 16:11:39.687 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:11:39.690 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:39.692 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:39.695 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:39.699 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 122.439ms
2025-10-12 16:11:39.701 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:39'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:39.702 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 123.4988ms
2025-10-12 16:11:39.704 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:39'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:39.708 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 16:11:39.710 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:39'.
2025-10-12 16:11:39.718 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:39'.
2025-10-12 16:11:39.721 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 16:11:39.723 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:11:39.724 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:39.726 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 28.232ms
2025-10-12 16:11:39.727 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 16:11:39.727 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:11:39.729 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:11:39.730 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:11:39.735 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:39.740 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:11:39.741 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:11:39.741 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 104.2276ms
2025-10-12 16:11:39.743 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:39'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:39.746 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:39.749 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:39.756 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:39'.
2025-10-12 16:11:39.758 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:11:39.760 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 20.3385ms
2025-10-12 16:11:39.762 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 24.9273ms
2025-10-12 16:11:39.764 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 16:11:39.766 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:39.767 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:11:39.771 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 90.0819ms
2025-10-12 16:11:39.771 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 16:11:39.773 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 93.8229ms
2025-10-12 16:11:39.781 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 16:11:39.787 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 17.4136ms
2025-10-12 16:11:39.790 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:11:39.792 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 64.9137ms
2025-10-12 16:11:41.358 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:11:41.358 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:11:41.358 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-12 16:11:41.361 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:41.362 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 16:11:41.364 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:41.366 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:41.366 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:41'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:41.370 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:41.371 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:41'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:41.372 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:41.375 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:41'.
2025-10-12 16:11:41.376 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:11:41.377 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:41'.
2025-10-12 16:11:41.379 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:11:41.380 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:11:41.381 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 16:11:41.382 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:41.385 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:11:41.386 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:11:41.390 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 16:11:41.390 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:11:41.393 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:41.396 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:11:41.399 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:41.402 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:11:41.403 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 18.9279ms
2025-10-12 16:11:41.404 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-12 16:11:41.406 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:41.408 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 19.4525ms
2025-10-12 16:11:41.409 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 16:11:41.411 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:41.412 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:41.415 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:41.417 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 22.2142ms
2025-10-12 16:11:41.418 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:11:41.418 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:11:41.422 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:41.424 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 23.3656ms
2025-10-12 16:11:41.425 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:11:41.426 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 67.3128ms
2025-10-12 16:11:41.427 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:41.429 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:11:41.432 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:41.433 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 70.9122ms
2025-10-12 16:11:41.435 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:11:41.435 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:41.436 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 16:11:41.438 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:41.443 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:11:41.444 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 86.0836ms
2025-10-12 16:11:41.445 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:41'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:41.449 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 16:11:41.450 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 91.4052ms
2025-10-12 16:11:41.453 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:41.453 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:41'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:41.456 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:11:41.460 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:41'.
2025-10-12 16:11:41.463 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 16:11:41.467 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:41'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:41.468 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:41'.
2025-10-12 16:11:41.471 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:41.472 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:11:41.475 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:41.476 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:41'.
2025-10-12 16:11:41.477 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:41.479 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 24.0542ms
2025-10-12 16:11:41.481 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:11:41.482 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 20.4279ms
2025-10-12 16:11:41.484 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:11:41.485 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:11:41.486 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:41.489 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:11:41.489 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:11:41.490 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 16:11:41.494 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:11:41.494 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 90.5287ms
2025-10-12 16:11:41.496 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 86.7917ms
2025-10-12 16:11:41.498 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:41.502 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 16:11:41.503 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:41.511 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 22.5451ms
2025-10-12 16:11:41.512 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:11:41.513 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 16:11:41.515 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 22.2269ms
2025-10-12 16:11:41.516 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:11:41.516 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:11:41.519 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:41.521 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 20.2388ms
2025-10-12 16:11:41.521 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 16:11:41.522 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:41.525 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:41.526 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 108.2197ms
2025-10-12 16:11:41.527 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:41'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:41.529 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:11:41.532 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:41.533 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 107.9495ms
2025-10-12 16:11:41.535 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:41'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:41.540 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:41'.
2025-10-12 16:11:41.541 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 105.1974ms
2025-10-12 16:11:41.543 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:41'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:41.548 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:41'.
2025-10-12 16:11:41.549 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:11:41.555 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:41'.
2025-10-12 16:11:41.556 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:41.558 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:11:41.559 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:11:41.560 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:11:41.563 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:11:41.563 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 16:11:41.567 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:11:41.568 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:41.571 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 16:11:41.572 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:41.574 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 11.9706ms
2025-10-12 16:11:41.576 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 16:11:41.577 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 11.9253ms
2025-10-12 16:11:41.579 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:11:41.581 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 10.9799ms
2025-10-12 16:11:41.582 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:41.583 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 71.1827ms
2025-10-12 16:11:41.584 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:11:41.585 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 69.6771ms
2025-10-12 16:11:41.590 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 68.8586ms
2025-10-12 16:11:44.199 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:11:44.199 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:11:44.200 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-12 16:11:44.204 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:44.205 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 16:11:44.208 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:44.212 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:44.213 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:44.217 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:44.218 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:44.219 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:44.221 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:44'.
2025-10-12 16:11:44.223 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:11:44.225 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:44'.
2025-10-12 16:11:44.227 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:11:44.228 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:44.229 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 16:11:44.231 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:11:44.235 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:11:44.235 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:11:44.238 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:11:44.238 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 16:11:44.242 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:11:44.243 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:44.248 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:11:44.250 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:44.253 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:44.255 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 21.8921ms
2025-10-12 16:11:44.256 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-12 16:11:44.259 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:44.260 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 23.4952ms
2025-10-12 16:11:44.261 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 16:11:44.263 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 22.3056ms
2025-10-12 16:11:44.264 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:11:44.265 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:44.268 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:44.271 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 24.4572ms
2025-10-12 16:11:44.272 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:11:44.273 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:11:44.276 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:44.278 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:44.282 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:44.283 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 83.3716ms
2025-10-12 16:11:44.284 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:44.286 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:11:44.290 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:44.292 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 86.5675ms
2025-10-12 16:11:44.293 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:11:44.294 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 94.8207ms
2025-10-12 16:11:44.295 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:44.295 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 16:11:44.301 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:11:44.303 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 103.8052ms
2025-10-12 16:11:44.304 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:44.310 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 16:11:44.317 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:44'.
2025-10-12 16:11:44.321 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:44.325 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:11:44.330 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:44'.
2025-10-12 16:11:44.334 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:44.334 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 16:11:44.335 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:44.338 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:44.339 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:11:44.340 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:11:44.344 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:44.346 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:44'.
2025-10-12 16:11:44.348 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 24.2433ms
2025-10-12 16:11:44.349 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:11:44.353 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:11:44.354 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 21.6254ms
2025-10-12 16:11:44.355 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:11:44.357 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:44.362 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:11:44.364 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:44.366 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:11:44.368 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 16:11:44.369 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 112.6608ms
2025-10-12 16:11:44.371 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:44.373 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 21.5063ms
2025-10-12 16:11:44.375 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 113.3516ms
2025-10-12 16:11:44.379 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 16:11:44.383 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 23.3084ms
2025-10-12 16:11:44.385 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:44.393 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 16:11:44.394 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:11:44.395 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 131.3208ms
2025-10-12 16:11:44.397 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 19.3973ms
2025-10-12 16:11:44.398 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 16:11:44.398 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 125.875ms
2025-10-12 16:11:44.404 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:11:44.407 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:44.414 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 118.5277ms
2025-10-12 16:11:44.415 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:44.422 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:44'.
2025-10-12 16:11:44.423 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:11:44.424 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 16:11:44.428 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 16:11:44.431 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 16:11:44.433 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 6.0326ms
2025-10-12 16:11:44.434 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:11:44.436 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 38.0997ms
2025-10-12 16:11:44.494 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 16:11:44.494 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:11:44.498 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:44.502 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:44.503 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 8.6399ms
2025-10-12 16:11:44.504 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:11:44.504 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 9.8231ms
2025-10-12 16:11:44.505 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:11:44.512 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:44.519 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:44.520 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:44.521 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:44.523 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:44'.
2025-10-12 16:11:44.525 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:44'.
2025-10-12 16:11:44.527 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:11:44.528 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:44.529 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:11:44.531 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:11:44.534 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:11:44.535 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:11:44.536 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:44.537 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:44.538 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 5.1525ms
2025-10-12 16:11:44.539 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 5.0087ms
2025-10-12 16:11:44.540 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:11:44.541 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:44.541 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 37.1377ms
2025-10-12 16:11:44.542 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 36.797ms
2025-10-12 16:11:48.254 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:11:48.254 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-12 16:11:48.255 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:11:48.255 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-12 16:11:48.255 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 16:11:48.256 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 16:11:48.259 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:48.261 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:48.264 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:48.267 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:48.269 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:48.272 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:48.273 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:48'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:48.273 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 19.156ms
2025-10-12 16:11:48.274 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:48'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:48.275 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-12 16:11:48.275 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 20.3367ms
2025-10-12 16:11:48.276 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 21.1467ms
2025-10-12 16:11:48.277 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 21.3623ms
2025-10-12 16:11:48.277 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 16:11:48.279 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:48'.
2025-10-12 16:11:48.284 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:48'.
2025-10-12 16:11:48.288 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:48.302 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:48.303 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:11:48.305 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:48.306 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:48.307 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:11:48.308 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:11:48.310 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:11:48.312 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:11:48.313 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 16:11:48.316 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:11:48.318 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:11:48.320 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:11:48.325 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:48.327 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:48.329 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 16:11:48.330 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:48.331 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 15.7532ms
2025-10-12 16:11:48.332 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:11:48.332 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 15.1959ms
2025-10-12 16:11:48.333 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:11:48.335 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:48.337 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 17.5974ms
2025-10-12 16:11:48.338 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-12 16:11:48.338 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:11:48.342 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:48.343 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:48.347 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:48.348 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 26.2347ms
2025-10-12 16:11:48.349 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 16:11:48.350 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:48.354 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:48.356 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 101.2151ms
2025-10-12 16:11:48.357 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:48'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:48.359 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 104.0261ms
2025-10-12 16:11:48.360 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:48'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:48.362 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:11:48.365 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:48.367 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 92.27ms
2025-10-12 16:11:48.368 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:48.376 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:48'.
2025-10-12 16:11:48.383 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:48'.
2025-10-12 16:11:48.384 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 106.7216ms
2025-10-12 16:11:48.386 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:11:48.386 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 16:11:48.392 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:11:48.393 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:11:48.395 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:48.400 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 16:11:48.404 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:48.407 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:11:48.408 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:11:48.409 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:11:48.413 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 16:11:48.413 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 26.8871ms
2025-10-12 16:11:48.414 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 16:11:48.416 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:48.420 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:11:48.422 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:48.423 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:11:48.428 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:48.430 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 23.9046ms
2025-10-12 16:11:48.433 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:48.435 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 23.1079ms
2025-10-12 16:11:48.438 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:48.439 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:48'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:48.441 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:48.442 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 23.9316ms
2025-10-12 16:11:48.443 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:11:48.444 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:11:48.446 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 24.7244ms
2025-10-12 16:11:48.447 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:11:48.448 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:48'.
2025-10-12 16:11:48.449 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 111.4919ms
2025-10-12 16:11:48.451 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:11:48.455 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:48.456 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 107.1643ms
2025-10-12 16:11:48.458 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:48.461 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:48.463 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:11:48.468 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 135.8137ms
2025-10-12 16:11:48.469 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:48'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:48.474 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 140.6874ms
2025-10-12 16:11:48.475 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:48'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:48.476 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 16:11:48.482 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:48'.
2025-10-12 16:11:48.488 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:48'.
2025-10-12 16:11:48.492 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:11:48.492 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 16:11:48.493 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:48.494 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:11:48.497 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 16:11:48.498 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:11:48.502 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:11:48.502 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 11.8916ms
2025-10-12 16:11:48.503 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 16:11:48.506 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:11:48.507 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:48.509 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:11:48.512 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:48.515 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:48.516 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 15.0627ms
2025-10-12 16:11:48.518 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 103.1377ms
2025-10-12 16:11:48.519 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:48'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:48.521 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 16.2257ms
2025-10-12 16:11:48.522 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:11:48.529 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:48'.
2025-10-12 16:11:48.531 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:48.533 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 89.6005ms
2025-10-12 16:11:48.535 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:11:48.536 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 89.4238ms
2025-10-12 16:11:48.542 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 16:11:48.553 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 16:11:48.557 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 16:11:48.560 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 8.3035ms
2025-10-12 16:11:48.562 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:11:48.563 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 60.0912ms
2025-10-12 16:11:54.547 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 16:11:54.547 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-12 16:11:54.547 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:11:54.549 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 16:11:54.549 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:11:54.549 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-12 16:11:54.551 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 16:11:54.551 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 16:11:54.552 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:54.556 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:54.559 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:54.563 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:54.566 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:54.570 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:54.573 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:54.576 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:54.577 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 30.2377ms
2025-10-12 16:11:54.578 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 31.0517ms
2025-10-12 16:11:54.579 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 32.068ms
2025-10-12 16:11:54.580 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:11:54.580 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 31.4675ms
2025-10-12 16:11:54.581 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-12 16:11:54.582 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:11:54.582 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 32.5713ms
2025-10-12 16:11:54.585 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:54.586 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 36.6565ms
2025-10-12 16:11:54.587 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 36.3912ms
2025-10-12 16:11:54.588 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 37.1336ms
2025-10-12 16:11:54.589 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 16:11:54.604 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:54.611 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:54.616 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:54'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:54.632 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:54.633 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:54'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:54.634 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:54.636 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:54'.
2025-10-12 16:11:54.637 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:11:54.639 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:54'.
2025-10-12 16:11:54.640 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:11:54.641 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:54.643 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 16:11:54.644 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:11:54.648 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:11:54.649 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:11:54.652 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 16:11:54.652 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:11:54.655 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:54.658 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:11:54.661 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:54.664 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 16.9008ms
2025-10-12 16:11:54.664 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:11:54.665 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-12 16:11:54.666 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:54.667 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 16.4421ms
2025-10-12 16:11:54.668 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 16:11:54.669 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:54.672 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:54.675 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:54.677 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 20.2118ms
2025-10-12 16:11:54.678 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:11:54.679 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:11:54.681 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:54.683 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 102.1028ms
2025-10-12 16:11:54.685 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 22.5326ms
2025-10-12 16:11:54.685 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:11:54.685 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:54.687 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:54.689 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:54.691 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 102.1935ms
2025-10-12 16:11:54.692 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:11:54.693 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 16:11:54.697 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:11:54.701 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:54.702 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:11:54.704 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 122.0159ms
2025-10-12 16:11:54.705 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:54'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:54.710 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 16:11:54.713 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:54.715 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 134.827ms
2025-10-12 16:11:54.716 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:54'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:54.720 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:11:54.723 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:54'.
2025-10-12 16:11:54.727 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 33.9462ms
2025-10-12 16:11:54.727 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 16:11:54.729 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 16:11:54.733 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:54'.
2025-10-12 16:11:54.736 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:54.737 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:54.744 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:54.746 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:54.748 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:11:54.749 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 31.7005ms
2025-10-12 16:11:54.750 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:11:54.752 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 25.5516ms
2025-10-12 16:11:54.753 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:54'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:54.754 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:11:54.755 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:54.759 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:11:54.759 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:11:54.762 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:54'.
2025-10-12 16:11:54.765 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:11:54.765 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 100.2935ms
2025-10-12 16:11:54.768 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:54.769 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 100.6222ms
2025-10-12 16:11:54.770 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:11:54.773 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:54.778 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 20.1092ms
2025-10-12 16:11:54.779 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:11:54.783 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 16:11:54.785 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 21.0375ms
2025-10-12 16:11:54.786 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:11:54.786 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:54.790 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:54.793 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:11:54.793 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 16:11:54.797 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:54.798 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 119.9058ms
2025-10-12 16:11:54.799 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:54'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:54.800 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 114.9791ms
2025-10-12 16:11:54.804 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 16:11:54.804 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:54'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:54.811 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:54'.
2025-10-12 16:11:54.816 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 24.5641ms
2025-10-12 16:11:54.817 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 16:11:54.818 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:54'.
2025-10-12 16:11:54.819 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:54.821 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:11:54.824 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:54.826 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:11:54.827 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 98.5104ms
2025-10-12 16:11:54.828 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:11:54.828 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:54'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:54.832 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:11:54.836 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:11:54.838 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:54'.
2025-10-12 16:11:54.841 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:54.845 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:11:54.845 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:11:54.847 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 15.9202ms
2025-10-12 16:11:54.848 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 16:11:54.850 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:54.851 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:54.855 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 11.3916ms
2025-10-12 16:11:54.855 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 16:11:54.856 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 76.5027ms
2025-10-12 16:11:54.858 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:11:54.861 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 16:11:54.867 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 80.7587ms
2025-10-12 16:11:54.869 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 15.0363ms
2025-10-12 16:11:54.874 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:11:54.876 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 58.3834ms
2025-10-12 16:11:58.364 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:11:58.364 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:11:58.364 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-12 16:11:58.365 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 16:11:58.369 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:58.372 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:58.375 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:58.377 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:58.379 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:58'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:58.380 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:58'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:58.381 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:58.382 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:11:58.384 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:58'.
2025-10-12 16:11:58.386 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:58'.
2025-10-12 16:11:58.387 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:11:58.388 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 16:11:58.389 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:11:58.390 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:58.394 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:11:58.396 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 16:11:58.397 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:11:58.398 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:11:58.402 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:58.405 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:58.409 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:11:58.412 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:11:58.413 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 20.8963ms
2025-10-12 16:11:58.415 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 19.7749ms
2025-10-12 16:11:58.415 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-12 16:11:58.415 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 16:11:58.417 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:58.420 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:58.422 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:58.424 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:11:58.428 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:58.431 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:58.433 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 25.8765ms
2025-10-12 16:11:58.435 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:11:58.436 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 24.6279ms
2025-10-12 16:11:58.436 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:11:58.437 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 73.3705ms
2025-10-12 16:11:58.438 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 72.4659ms
2025-10-12 16:11:58.439 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:58.439 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:11:58.441 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:11:58.442 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 16:11:58.443 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:58.444 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:58.447 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:58.454 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:11:58.455 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 16:11:58.456 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 92.7949ms
2025-10-12 16:11:58.459 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:58.460 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:58'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:58.461 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 97.4289ms
2025-10-12 16:11:58.462 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:58'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:58.465 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:11:58.467 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 16:11:58.469 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:58'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:58.472 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:58'.
2025-10-12 16:11:58.477 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:58'.
2025-10-12 16:11:58.479 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:58.482 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:58.484 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:58'.
2025-10-12 16:11:58.485 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:11:58.486 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:58.488 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 23.7011ms
2025-10-12 16:11:58.490 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 23.5251ms
2025-10-12 16:11:58.491 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:11:58.492 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:11:58.493 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:11:58.494 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:58.496 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:11:58.497 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 16:11:58.501 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:11:58.502 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:11:58.502 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 87.7141ms
2025-10-12 16:11:58.504 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 88.2727ms
2025-10-12 16:11:58.507 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 16:11:58.508 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:58.511 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:58.520 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 16:11:58.522 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 22.3921ms
2025-10-12 16:11:58.523 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:11:58.523 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 21.8557ms
2025-10-12 16:11:58.524 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:11:58.524 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 18.4925ms
2025-10-12 16:11:58.525 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 16:11:58.526 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:11:58.528 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:58.529 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:58.532 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:58.533 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:11:58.535 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 92.1619ms
2025-10-12 16:11:58.536 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 101.3137ms
2025-10-12 16:11:58.537 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:58'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:58.538 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 101.3552ms
2025-10-12 16:11:58.539 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:58'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:58.542 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:11:58.552 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:58'.
2025-10-12 16:11:58.557 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:58'.
2025-10-12 16:11:58.558 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:58'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:11:58.559 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:11:58.560 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:58.562 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:11:58'.
2025-10-12 16:11:58.564 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:11:58.565 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:11:58.566 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:11:58.569 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:11:58.571 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:11:58.571 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 16:11:58.574 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:58.577 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:11:58.581 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 16:11:58.581 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 11.362ms
2025-10-12 16:11:58.583 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 15.4572ms
2025-10-12 16:11:58.585 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 16:11:58.587 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:11:58.589 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:11:58.591 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 11.3828ms
2025-10-12 16:11:58.591 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 67.7702ms
2025-10-12 16:11:58.592 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 69.4672ms
2025-10-12 16:11:58.594 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:11:58.605 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 79.5388ms
2025-10-12 16:12:01.201 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 16:12:01.202 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-12 16:12:01.202 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:12:01.203 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 16:12:01.203 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:12:01.203 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-12 16:12:01.204 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 16:12:01.204 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 16:12:01.206 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:01.209 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:01.213 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:01.216 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:01.219 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:01.223 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:01.226 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:01.229 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:01.231 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 29.6521ms
2025-10-12 16:12:01.232 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 29.7155ms
2025-10-12 16:12:01.233 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 30.6479ms
2025-10-12 16:12:01.234 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 31.2376ms
2025-10-12 16:12:01.234 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:12:01.235 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 32.1284ms
2025-10-12 16:12:01.236 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 33.0379ms
2025-10-12 16:12:01.236 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-12 16:12:01.236 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:12:01.237 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 33.0864ms
2025-10-12 16:12:01.238 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 33.7796ms
2025-10-12 16:12:01.238 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 16:12:01.256 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:01.266 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:01.269 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:01.280 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:01.282 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:01'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:12:01.282 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:01.283 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:01'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:12:01.284 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:12:01.287 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:01'.
2025-10-12 16:12:01.288 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:12:01.290 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:01'.
2025-10-12 16:12:01.291 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 16:12:01.293 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:12:01.296 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:12:01.296 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:01.300 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 16:12:01.300 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:12:01.303 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:01.304 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:12:01.307 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:01.310 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:12:01.310 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 15.1876ms
2025-10-12 16:12:01.311 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-12 16:12:01.312 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:12:01.313 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 14.5263ms
2025-10-12 16:12:01.314 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 16:12:01.315 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:01.316 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:01.318 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:01.320 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:01.321 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:12:01.324 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:01.326 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 16.9751ms
2025-10-12 16:12:01.326 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:12:01.327 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 90.5016ms
2025-10-12 16:12:01.328 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:01.329 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 17.5393ms
2025-10-12 16:12:01.330 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:12:01.330 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 91.7922ms
2025-10-12 16:12:01.331 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:12:01.332 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 16:12:01.333 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:12:01.336 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:01.341 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:12:01.343 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:01.346 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:01.351 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 16:12:01.354 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:01.355 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 120.6356ms
2025-10-12 16:12:01.356 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:01'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:12:01.359 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:12:01.359 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 123.1893ms
2025-10-12 16:12:01.361 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:01'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:12:01.363 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 31.4146ms
2025-10-12 16:12:01.363 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 16:12:01.365 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 16:12:01.367 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:01'.
2025-10-12 16:12:01.368 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:01.372 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:01'.
2025-10-12 16:12:01.378 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:01.380 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:01.382 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:12:01.383 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 24.7911ms
2025-10-12 16:12:01.384 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:01.385 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 23.0834ms
2025-10-12 16:12:01.386 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:01'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:12:01.387 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:12:01.388 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:01.389 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:12:01.391 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:12:01.393 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:01'.
2025-10-12 16:12:01.396 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 84.7621ms
2025-10-12 16:12:01.396 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:12:01.398 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:12:01.398 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 84.3869ms
2025-10-12 16:12:01.399 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:12:01.406 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:01.408 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:01.412 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 16:12:01.413 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 18.703ms
2025-10-12 16:12:01.414 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:12:01.415 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 18.2329ms
2025-10-12 16:12:01.416 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:12:01.419 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 16:12:01.419 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:12:01.422 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:01.423 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:01.427 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:01.429 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 16:12:01.431 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 104.1973ms
2025-10-12 16:12:01.432 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:01'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:12:01.433 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 102.985ms
2025-10-12 16:12:01.434 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:01'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:12:01.435 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 17.7181ms
2025-10-12 16:12:01.436 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 16:12:01.439 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:01'.
2025-10-12 16:12:01.444 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:01'.
2025-10-12 16:12:01.446 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:12:01.450 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:01.451 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:12:01.452 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:01.453 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 88.7139ms
2025-10-12 16:12:01.454 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:01'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:12:01.455 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:12:01.457 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:12:01.462 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:01'.
2025-10-12 16:12:01.466 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:12:01.468 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:12:01.468 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:12:01.471 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:01.474 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:01.476 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 16:12:01.477 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.6302ms
2025-10-12 16:12:01.479 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.1767ms
2025-10-12 16:12:01.482 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:12:01.482 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 16:12:01.483 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:01.487 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 72.5956ms
2025-10-12 16:12:01.490 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 16:12:01.492 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 75.5259ms
2025-10-12 16:12:01.497 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 16.9764ms
2025-10-12 16:12:01.503 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:12:01.505 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 68.7004ms
2025-10-12 16:12:04.814 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:12:04.814 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:12:04.815 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 16:12:04.815 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-12 16:12:04.819 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:04.822 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:04.826 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:04.829 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:04.830 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:12:04.831 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:12:04.832 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:12:04.833 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:04.835 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:04'.
2025-10-12 16:12:04.837 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:04'.
2025-10-12 16:12:04.839 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 16:12:04.840 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:12:04.842 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:12:04.843 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:04.847 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 16:12:04.849 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:12:04.849 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:12:04.850 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:12:04.854 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:04.858 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:12:04.859 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:04.864 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 18.2866ms
2025-10-12 16:12:04.864 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:12:04.865 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 16:12:04.866 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:04.868 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 20.8072ms
2025-10-12 16:12:04.870 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:12:04.871 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-12 16:12:04.873 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:04.876 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:04.878 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 21.6645ms
2025-10-12 16:12:04.879 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:04.879 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:12:04.881 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 65.5726ms
2025-10-12 16:12:04.884 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:04.886 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 24.3702ms
2025-10-12 16:12:04.887 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:12:04.887 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:12:04.889 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:12:04.891 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 75.5632ms
2025-10-12 16:12:04.894 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 16:12:04.894 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:04.901 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:04.903 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:04.905 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 16:12:04.909 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:04.911 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 95.9451ms
2025-10-12 16:12:04.919 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:04.921 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:12:04.922 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:12:04.924 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 109.2071ms
2025-10-12 16:12:04.927 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:12:04.928 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 16:12:04.933 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:12:04.935 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:04'.
2025-10-12 16:12:04.940 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:12:04.944 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:04'.
2025-10-12 16:12:04.948 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:04.949 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:04'.
2025-10-12 16:12:04.951 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:12:04.954 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:04.955 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:04.957 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 30.8498ms
2025-10-12 16:12:04.958 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:12:04.960 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:12:04.962 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 24.0905ms
2025-10-12 16:12:04.963 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:12:04.965 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:12:04.966 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 16:12:04.970 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:04.970 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:12:04.974 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 109.0759ms
2025-10-12 16:12:04.976 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:12:04.978 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 107.7854ms
2025-10-12 16:12:04.981 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 16:12:04.981 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:04.989 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:04.997 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 16:12:04.998 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 29.6287ms
2025-10-12 16:12:05.000 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 27.1918ms
2025-10-12 16:12:05.000 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:12:05.002 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 24.9706ms
2025-10-12 16:12:05.002 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:12:05.003 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:12:05.003 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 16:12:05.005 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:05.009 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:05.011 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:12:05.014 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:05.017 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 137.2511ms
2025-10-12 16:12:05.021 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:05.022 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 134.9769ms
2025-10-12 16:12:05.024 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:12:05.026 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 131.7611ms
2025-10-12 16:12:05.027 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:12:05.034 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:12:05.040 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:05'.
2025-10-12 16:12:05.047 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:05'.
2025-10-12 16:12:05.050 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:05'.
2025-10-12 16:12:05.051 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:12:05.053 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:05.054 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:12:05.056 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:12:05.057 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:12:05.059 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 16:12:05.065 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:12:05.066 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:12:05.069 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:05.070 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 16:12:05.072 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:05.073 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.5257ms
2025-10-12 16:12:05.077 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 16:12:05.079 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 14.9407ms
2025-10-12 16:12:05.080 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:12:05.082 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 16.0907ms
2025-10-12 16:12:05.084 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:05.086 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 85.7242ms
2025-10-12 16:12:05.087 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:12:05.089 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 86.5815ms
2025-10-12 16:12:05.094 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 90.1492ms
2025-10-12 16:12:08.178 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 16:12:08.178 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:12:08.182 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:08.185 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:08.187 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 8.8173ms
2025-10-12 16:12:08.188 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 9.3368ms
2025-10-12 16:12:08.190 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:12:08.190 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:12:08.198 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:08.201 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:08.202 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:08'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:12:08.202 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:08'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:12:08.204 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:08'.
2025-10-12 16:12:08.206 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:08'.
2025-10-12 16:12:08.208 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:08.209 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:12:08.210 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:12:08.211 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:12:08.214 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:12:08.217 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:12:08.217 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:08.220 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:08.222 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.3618ms
2025-10-12 16:12:08.224 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.1916ms
2025-10-12 16:12:08.226 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:08.227 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:12:08.229 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 39.1475ms
2025-10-12 16:12:08.230 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 40.1732ms
2025-10-12 16:12:10.956 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:12:10.956 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:12:10.959 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:10.963 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:10.965 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:10'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:12:10.966 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:10'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:12:10.968 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:10'.
2025-10-12 16:12:10.970 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:10'.
2025-10-12 16:12:10.971 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:12:10.973 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:10.974 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:12:10.975 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:12:10.984 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:12:10.985 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:12:10.987 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:10.991 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:10.992 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 14.6133ms
2025-10-12 16:12:10.994 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 13.9352ms
2025-10-12 16:12:10.996 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:12:10.997 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:10.999 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 42.8186ms
2025-10-12 16:12:11.000 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 44.1719ms
2025-10-12 16:12:14.914 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 16:12:14.915 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:12:14.920 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:14.924 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:14.926 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 12.1157ms
2025-10-12 16:12:14.928 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 13.165ms
2025-10-12 16:12:14.928 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:12:14.929 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:12:14.938 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:14.941 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:14.942 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:14'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:12:14.943 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:14'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:12:14.944 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:14'.
2025-10-12 16:12:14.946 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:14'.
2025-10-12 16:12:14.947 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:12:14.948 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:14.949 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:12:14.950 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:12:14.958 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:12:14.959 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:12:14.962 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:14.964 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:14.965 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.4443ms
2025-10-12 16:12:14.967 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 11.9412ms
2025-10-12 16:12:14.969 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:12:14.970 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:14.972 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 43.5658ms
2025-10-12 16:12:14.973 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 44.0614ms
2025-10-12 16:12:18.157 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:12:18.157 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:12:18.157 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-12 16:12:18.159 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:18.161 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:18.164 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:18.166 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:12:18.166 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:12:18.168 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 10.1732ms
2025-10-12 16:12:18.169 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-12 16:12:18.170 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:18'.
2025-10-12 16:12:18.172 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:18'.
2025-10-12 16:12:18.173 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:18.177 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:18.177 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:12:18.181 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 16:12:18.184 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:12:18.185 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:18.187 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:12:18.191 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:18.195 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:12:18.198 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 16.8233ms
2025-10-12 16:12:18.199 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:12:18.200 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 16:12:18.202 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:12:18.202 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:12:18.207 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:18.210 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:18.212 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:18.215 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:18.216 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 22.9137ms
2025-10-12 16:12:18.217 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:12:18.217 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:12:18.220 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 22.5587ms
2025-10-12 16:12:18.221 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:12:18.222 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 21.3498ms
2025-10-12 16:12:18.223 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:18.226 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:18.227 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 16:12:18.229 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:12:18.232 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:18.233 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:18.235 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 77.9563ms
2025-10-12 16:12:18.236 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:12:18.240 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 83.0824ms
2025-10-12 16:12:18.241 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:12:18.242 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 72.3902ms
2025-10-12 16:12:18.247 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 16:12:18.247 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:18'.
2025-10-12 16:12:18.254 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:18'.
2025-10-12 16:12:18.261 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:18.262 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:18.263 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:12:18.264 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 25.9427ms
2025-10-12 16:12:18.266 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:12:18.267 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:12:18.268 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:12:18.272 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:12:18.275 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 75.2371ms
2025-10-12 16:12:18.275 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:12:18.277 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 16:12:18.278 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:18.284 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:18.287 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:18.288 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 17.5151ms
2025-10-12 16:12:18.290 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 16.2273ms
2025-10-12 16:12:18.291 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 14.1885ms
2025-10-12 16:12:18.292 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 16:12:18.292 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:18.295 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:18.300 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:12:18.302 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 84.3508ms
2025-10-12 16:12:18.303 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:12:18.304 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 83.2551ms
2025-10-12 16:12:18.309 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:18'.
2025-10-12 16:12:18.315 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:12:18.316 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 16:12:18.327 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 16:12:18.331 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 16:12:18.333 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 14.8244ms
2025-10-12 16:12:18.335 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:12:18.336 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 43.9706ms
2025-10-12 16:12:38.282 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-12 16:12:38.285 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:38.286 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 4.6453ms
2025-10-12 16:12:38.288 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-12 16:12:38.293 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:38.294 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:38.296 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:12:38.296 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 16:12:38.300 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:12:38.302 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:38.304 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:38.305 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 8.8812ms
2025-10-12 16:12:38.307 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 16:12:38.307 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.1832ms
2025-10-12 16:12:38.314 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:38.316 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:38.317 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:12:38.319 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 30.8606ms
2025-10-12 16:12:38.320 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 16:12:38.329 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 16:12:38.333 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:38.335 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 7.1942ms
2025-10-12 16:12:38.336 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:12:38.337 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 30.453ms
2025-10-12 16:12:38.339 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-12 16:12:38.345 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:38.346 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 6.6729ms
2025-10-12 16:12:38.348 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-12 16:12:38.353 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:38.355 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:12:38.357 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:38'.
2025-10-12 16:12:38.358 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:12:38.360 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-12 16:12:38.363 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-12 16:12:38.366 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-12 16:12:38.368 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 5.9128ms
2025-10-12 16:12:38.370 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-12 16:12:38.371 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 23.4051ms
2025-10-12 16:12:38.407 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 16:12:38.407 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:12:38.407 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 16:12:38.407 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 16:12:38.412 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:38.416 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:38.420 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:38.424 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:38.426 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 19.0284ms
2025-10-12 16:12:38.427 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 20.3888ms
2025-10-12 16:12:38.427 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:12:38.428 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:12:38.428 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 21.7227ms
2025-10-12 16:12:38.430 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 22.9227ms
2025-10-12 16:12:38.444 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:38.447 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:38.458 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:12:38.459 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:12:38.460 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:38'.
2025-10-12 16:12:38.463 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:38'.
2025-10-12 16:12:38.464 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:12:38.465 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:38.466 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:12:38.468 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:12:38.472 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:12:38.474 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:12:38.476 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:38.479 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:38.481 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.474ms
2025-10-12 16:12:38.482 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 16:12:38.483 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.7946ms
2025-10-12 16:12:38.484 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 16:12:38.484 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:12:38.488 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:38.490 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:38.494 +04:00 [INF] CORS policy execution successful.
2025-10-12 16:12:38.495 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 67.5383ms
2025-10-12 16:12:38.496 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:12:38.498 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 69.3777ms
2025-10-12 16:12:38.499 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:38'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 16:12:38.506 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:38'.
2025-10-12 16:12:38.511 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 12:12:38'.
2025-10-12 16:12:38.513 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:12:38.514 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:38.516 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 16:12:38.517 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-12 16:12:38.522 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 16:12:38.523 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-12 16:12:38.525 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:38.528 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:12:38.529 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.7588ms
2025-10-12 16:12:38.531 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.1988ms
2025-10-12 16:12:38.533 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 16:12:38.534 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-12 16:12:38.536 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 53.6675ms
2025-10-12 16:12:38.537 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 52.976ms
2025-10-12 16:42:31.284 +04:00 [WRN] No store type was specified for the decimal property 'Quantity' on entity type 'OrderItem'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-10-12 16:42:31.659 +04:00 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-12 16:42:31.697 +04:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-12 16:42:31.703 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-12 16:42:31.706 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-12 16:42:31.727 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-10-12 16:42:31.742 +04:00 [INF] No migrations were applied. The database is already up to date.
2025-10-12 16:42:31.745 +04:00 [INF] Migrations applied
2025-10-12 16:42:31.910 +04:00 [INF] Executed DbCommand (17ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-12 16:42:31.938 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-12 16:42:31.942 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-12 16:42:31.954 +04:00 [INF] User profile is available. Using 'C:\Users\ASUS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-12 16:42:31.967 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-10-12 16:42:31.994 +04:00 [INF] Admin user already exists: admin@greenzone.com
2025-10-12 16:42:32.191 +04:00 [INF] Now listening on: https://localhost:7100
2025-10-12 16:42:32.228 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-12 16:42:32.230 +04:00 [INF] Hosting environment: Development
2025-10-12 16:42:32.231 +04:00 [INF] Content root path: C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API
2025-10-12 16:42:32.401 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/index.html - null null
2025-10-12 16:42:32.530 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/index.html - 200 null text/html;charset=utf-8 130.189ms
2025-10-12 16:42:32.562 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - null null
2025-10-12 16:42:32.563 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_vs/browserLink - null null
2025-10-12 16:42:32.571 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - 200 16511 application/javascript; charset=utf-8 8.3215ms
2025-10-12 16:42:32.595 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_vs/browserLink - 200 null text/javascript; charset=UTF-8 32.9356ms
2025-10-12 16:42:32.804 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - null null
2025-10-12 16:42:32.845 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 40.8656ms
2025-10-12 16:48:13.767 +04:00 [WRN] No store type was specified for the decimal property 'Quantity' on entity type 'OrderItem'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-10-12 16:48:14.035 +04:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-12 16:48:14.063 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-12 16:48:14.068 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-12 16:48:14.072 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-12 16:48:14.090 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-10-12 16:48:14.102 +04:00 [INF] No migrations were applied. The database is already up to date.
2025-10-12 16:48:14.104 +04:00 [INF] Migrations applied
2025-10-12 16:48:14.226 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-12 16:48:14.254 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-12 16:48:14.257 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-12 16:48:14.267 +04:00 [INF] User profile is available. Using 'C:\Users\ASUS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-12 16:48:14.279 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-10-12 16:48:14.303 +04:00 [INF] Admin user already exists: admin@greenzone.com
2025-10-12 16:48:14.407 +04:00 [INF] Now listening on: https://localhost:7100
2025-10-12 16:48:14.433 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-12 16:48:14.435 +04:00 [INF] Hosting environment: Development
2025-10-12 16:48:14.437 +04:00 [INF] Content root path: C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API
2025-10-12 16:48:14.577 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/index.html - null null
2025-10-12 16:48:14.661 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/index.html - 200 null text/html;charset=utf-8 84.3367ms
2025-10-12 16:48:14.706 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - null null
2025-10-12 16:48:14.706 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_vs/browserLink - null null
2025-10-12 16:48:14.713 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - 200 16511 application/javascript; charset=utf-8 6.713ms
2025-10-12 16:48:14.727 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_vs/browserLink - 200 null text/javascript; charset=UTF-8 21.3741ms
2025-10-12 16:48:14.883 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - null null
2025-10-12 16:48:14.902 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 19.1584ms
2025-10-12 16:55:21.482 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer - null null
2025-10-12 16:55:21.518 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:55:21.529 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 16:55:21.741 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-10-12 16:55:21.817 +04:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-12 16:55:21.854 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 16:55:21.865 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 328.9257ms
2025-10-12 16:55:21.867 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-12 16:55:21.872 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer - 200 null application/json; charset=utf-8 390.0196ms
2025-10-12 16:55:35.508 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/3486dcc1-b727-4d45-8c60-5f7bcf9f6ddd - null null
2025-10-12 16:55:35.517 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerById (GreenZone.API)'
2025-10-12 16:55:35.534 +04:00 [INF] Route matched with {action = "GetCustomerById", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerById(System.Guid) on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-12 16:55:35.642 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t0].[Id], [t0].[CreatedAt], [t0].[CustomerId], [t0].[IsDeleted], [t0].[OrderDate], [t0].[OrderStatusId], [t0].[ShippingAddress], [t0].[TotalAmount], [t0].[UpdatedAt], [t0].[Id0], [t0].[CreatedAt0], [t0].[IsDeleted0], [t0].[Name], [t0].[StatusName], [t0].[UpdatedAt0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[Id] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [o0].[Id] AS [Id0], [o0].[CreatedAt] AS [CreatedAt0], [o0].[IsDeleted] AS [IsDeleted0], [o0].[Name], [o0].[StatusName], [o0].[UpdatedAt] AS [UpdatedAt0]
    FROM [Orders] AS [o]
    INNER JOIN [OrderStatuses] AS [o0] ON [o].[OrderStatusId] = [o0].[Id]
) AS [t0] ON [t].[Id] = [t0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id]
2025-10-12 16:55:35.648 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto'.
2025-10-12 16:55:35.650 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetCustomerById (GreenZone.API) in 110.4328ms
2025-10-12 16:55:35.651 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerById (GreenZone.API)'
2025-10-12 16:55:35.652 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/3486dcc1-b727-4d45-8c60-5f7bcf9f6ddd - 200 null application/json; charset=utf-8 144.1304ms
2025-10-12 16:56:29.836 +04:00 [WRN] No store type was specified for the decimal property 'Quantity' on entity type 'OrderItem'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-10-12 16:56:30.108 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-12 16:56:30.134 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-12 16:56:30.139 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-12 16:56:30.143 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-12 16:56:30.162 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-10-12 16:56:30.173 +04:00 [INF] No migrations were applied. The database is already up to date.
2025-10-12 16:56:30.175 +04:00 [INF] Migrations applied
2025-10-12 16:56:30.297 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-12 16:56:30.321 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-12 16:56:30.325 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-12 16:56:30.334 +04:00 [INF] User profile is available. Using 'C:\Users\ASUS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-12 16:56:30.345 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-10-12 16:56:30.368 +04:00 [INF] Admin user already exists: admin@greenzone.com
2025-10-12 16:56:30.465 +04:00 [INF] Now listening on: https://localhost:7100
2025-10-12 16:56:30.493 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-12 16:56:30.495 +04:00 [INF] Hosting environment: Development
2025-10-12 16:56:30.497 +04:00 [INF] Content root path: C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API
2025-10-12 16:56:30.645 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/index.html - null null
2025-10-12 16:56:30.724 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/index.html - 200 null text/html;charset=utf-8 79.93ms
2025-10-12 16:56:30.770 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_vs/browserLink - null null
2025-10-12 16:56:30.770 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - null null
2025-10-12 16:56:30.779 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - 200 16511 application/javascript; charset=utf-8 9.1656ms
2025-10-12 16:56:30.788 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_vs/browserLink - 200 null text/javascript; charset=UTF-8 18.2843ms
2025-10-12 16:56:30.937 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - null null
2025-10-12 16:56:30.953 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 15.9252ms
2025-10-12 17:07:13.402 +04:00 [WRN] No store type was specified for the decimal property 'Quantity' on entity type 'OrderItem'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-10-12 17:07:13.681 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-12 17:07:13.711 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-12 17:07:13.716 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-12 17:07:13.718 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-12 17:07:13.737 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-10-12 17:07:13.749 +04:00 [INF] No migrations were applied. The database is already up to date.
2025-10-12 17:07:13.752 +04:00 [INF] Migrations applied
2025-10-12 17:07:13.895 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-12 17:07:13.924 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-12 17:07:13.929 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-12 17:07:13.939 +04:00 [INF] User profile is available. Using 'C:\Users\ASUS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-12 17:07:13.954 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-10-12 17:07:13.993 +04:00 [INF] Admin user already exists: admin@greenzone.com
2025-10-12 17:07:14.107 +04:00 [INF] Now listening on: https://localhost:7100
2025-10-12 17:07:14.134 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-12 17:07:14.136 +04:00 [INF] Hosting environment: Development
2025-10-12 17:07:14.137 +04:00 [INF] Content root path: C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API
2025-10-12 17:07:14.155 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/index.html - null null
2025-10-12 17:07:14.236 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/index.html - 200 null text/html;charset=utf-8 82.0853ms
2025-10-12 17:07:14.247 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_vs/browserLink - null null
2025-10-12 17:07:14.247 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - null null
2025-10-12 17:07:14.256 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - 200 16511 application/javascript; charset=utf-8 8.9817ms
2025-10-12 17:07:14.265 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_vs/browserLink - 200 null text/javascript; charset=UTF-8 17.5808ms
2025-10-12 17:07:14.491 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - null null
2025-10-12 17:07:14.513 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 22.1343ms
2025-10-12 18:22:52.732 +04:00 [WRN] No store type was specified for the decimal property 'Quantity' on entity type 'OrderItem'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-10-12 18:22:53.074 +04:00 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-12 18:22:53.118 +04:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-12 18:22:53.123 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-12 18:22:53.127 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-12 18:22:53.152 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-10-12 18:22:53.172 +04:00 [INF] No migrations were applied. The database is already up to date.
2025-10-12 18:22:53.176 +04:00 [INF] Migrations applied
2025-10-12 18:22:53.362 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-12 18:22:53.392 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-12 18:22:53.397 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-12 18:22:53.409 +04:00 [INF] User profile is available. Using 'C:\Users\ASUS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-12 18:22:53.426 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-10-12 18:22:53.461 +04:00 [INF] Admin user already exists: admin@greenzone.com
2025-10-12 18:22:53.639 +04:00 [INF] Now listening on: https://localhost:7100
2025-10-12 18:22:53.682 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-12 18:22:53.684 +04:00 [INF] Hosting environment: Development
2025-10-12 18:22:53.686 +04:00 [INF] Content root path: C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API
2025-10-12 18:26:28.081 +04:00 [WRN] No store type was specified for the decimal property 'Quantity' on entity type 'OrderItem'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-10-12 18:26:28.361 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-12 18:26:28.386 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-12 18:26:28.390 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-12 18:26:28.394 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-12 18:26:28.412 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-10-12 18:26:28.428 +04:00 [INF] No migrations were applied. The database is already up to date.
2025-10-12 18:26:28.431 +04:00 [INF] Migrations applied
2025-10-12 18:26:28.578 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-12 18:26:28.603 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-12 18:26:28.607 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-12 18:26:28.617 +04:00 [INF] User profile is available. Using 'C:\Users\ASUS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-12 18:26:28.629 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-10-12 18:26:28.652 +04:00 [INF] Admin user already exists: admin@greenzone.com
2025-10-12 18:26:28.746 +04:00 [INF] Now listening on: https://localhost:7100
2025-10-12 18:26:28.770 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-12 18:26:28.771 +04:00 [INF] Hosting environment: Development
2025-10-12 18:26:28.772 +04:00 [INF] Content root path: C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API
2025-10-12 18:29:34.483 +04:00 [WRN] No store type was specified for the decimal property 'Quantity' on entity type 'OrderItem'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-10-12 18:29:34.853 +04:00 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-12 18:29:34.885 +04:00 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-12 18:29:34.888 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-12 18:29:34.891 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-12 18:29:34.910 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-10-12 18:29:34.923 +04:00 [INF] No migrations were applied. The database is already up to date.
2025-10-12 18:29:34.925 +04:00 [INF] Migrations applied
2025-10-12 18:29:35.115 +04:00 [INF] Executed DbCommand (16ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-12 18:29:35.144 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-12 18:29:35.147 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-12 18:29:35.156 +04:00 [INF] User profile is available. Using 'C:\Users\ASUS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-12 18:29:35.168 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-10-12 18:29:35.192 +04:00 [INF] Admin user already exists: admin@greenzone.com
2025-10-12 18:29:35.335 +04:00 [INF] Now listening on: https://localhost:7100
2025-10-12 18:29:35.384 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-12 18:29:35.386 +04:00 [INF] Hosting environment: Development
2025-10-12 18:29:35.387 +04:00 [INF] Content root path: C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API
2025-10-12 18:29:35.843 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/index.html - null null
2025-10-12 18:29:35.957 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/index.html - 200 null text/html;charset=utf-8 114.4094ms
2025-10-12 18:29:35.980 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - null null
2025-10-12 18:29:35.982 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_vs/browserLink - null null
2025-10-12 18:29:35.986 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - 200 16511 application/javascript; charset=utf-8 5.2467ms
2025-10-12 18:29:36.001 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_vs/browserLink - 200 null text/javascript; charset=UTF-8 18.9351ms
2025-10-12 18:29:36.223 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - null null
2025-10-12 18:29:36.244 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 20.3562ms
2025-10-12 18:29:48.914 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/index.html - null null
2025-10-12 18:29:48.920 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/index.html - 200 null text/html;charset=utf-8 5.4274ms
2025-10-12 18:29:48.936 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_vs/browserLink - null null
2025-10-12 18:29:48.936 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - null null
2025-10-12 18:29:48.942 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - 200 16511 application/javascript; charset=utf-8 5.9977ms
2025-10-12 18:29:48.945 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_vs/browserLink - 200 null text/javascript; charset=UTF-8 9.3771ms
2025-10-12 18:29:49.015 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - null null
2025-10-12 18:29:49.036 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 21.0197ms
2025-10-12 18:32:04.039 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - null null
2025-10-12 18:32:04.063 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 24.1782ms
2025-10-12 18:32:04.628 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/favicon.ico - null null
2025-10-12 18:32:04.667 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/favicon.ico - 404 0 null 39.057ms
2025-10-12 18:32:04.676 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7100/favicon.ico, Response status code: 404
2025-10-12 18:43:51.598 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 18:43:51.598 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 18:43:51.598 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-12 18:43:51.604 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:43:51.605 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:43:51.609 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:43:51.612 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 13.6236ms
2025-10-12 18:43:51.612 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 13.6254ms
2025-10-12 18:43:51.613 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 14.5493ms
2025-10-12 18:43:51.616 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 18:43:51.618 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-12 18:43:51.618 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 18:43:51.618 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 18:43:51.630 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:43:51.632 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:43:51.635 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:43:51.638 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:43:51.639 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 23.5106ms
2025-10-12 18:43:51.641 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 18:43:51.646 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-12 18:43:51.650 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:43:51.653 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-12 18:43:51.653 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 404 0 null 12.1571ms
2025-10-12 18:43:51.656 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 401 0 null 38.1151ms
2025-10-12 18:43:51.656 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - null null
2025-10-12 18:43:51.659 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7100/api/customer, Response status code: 404
2025-10-12 18:43:51.667 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:43:51.670 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 204 null null 14.3266ms
2025-10-12 18:43:51.672 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-12 18:43:51.677 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:43:51.683 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 14:43:51'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 18:43:51.683 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 14:43:51'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 18:43:51.683 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 14:43:51'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 18:43:51.706 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 14:43:51'.
2025-10-12 18:43:51.709 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 14:43:51'.
2025-10-12 18:43:51.711 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 14:43:51'.
2025-10-12 18:43:51.714 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-12 18:43:51.716 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-12 18:43:51.716 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 18:43:51.718 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-12 18:43:51.718 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-12 18:43:51.721 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 401 0 null 102.798ms
2025-10-12 18:43:51.722 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 18:43:51.722 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 401 0 null 50.1536ms
2025-10-12 18:43:51.730 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:43:51.734 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 18:43:51.735 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 14:43:51'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 18:43:51.738 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 14:43:51'.
2025-10-12 18:43:51.740 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-12 18:43:51.741 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-12 18:43:51.743 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 401 0 null 20.9663ms
2025-10-12 18:43:52.058 +04:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 18:43:52.093 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 18:43:52.140 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 18:43:52.141 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 401.5634ms
2025-10-12 18:43:52.148 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:43:52.150 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 18:43:52.152 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 14:43:52'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 18:43:52.156 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 14:43:52'.
2025-10-12 18:43:52.157 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 539.3275ms
2025-10-12 18:43:52.158 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 18:43:52.165 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 18:43:52.230 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 18:43:52.237 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 18:43:52.239 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 71.7874ms
2025-10-12 18:43:52.240 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 18:43:52.242 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 101.9539ms
2025-10-12 18:44:02.949 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 18:44:02.949 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 18:44:02.949 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 18:44:02.949 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 18:44:02.949 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 18:44:02.949 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 18:44:02.956 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:44:02.960 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:44:02.964 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:44:02.967 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:44:02.971 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:44:02.974 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:44:02.976 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 26.5078ms
2025-10-12 18:44:02.977 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 27.9314ms
2025-10-12 18:44:02.978 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 29.0512ms
2025-10-12 18:44:02.978 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 18:44:02.979 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 18:44:02.979 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 30.2467ms
2025-10-12 18:44:02.980 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 31.0255ms
2025-10-12 18:44:02.981 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 31.9932ms
2025-10-12 18:44:02.998 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:44:03.001 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:44:03.014 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 14:44:03'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 18:44:03.014 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 14:44:03'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 18:44:03.016 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 14:44:03'.
2025-10-12 18:44:03.019 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 14:44:03'.
2025-10-12 18:44:03.020 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 18:44:03.022 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-12 18:44:03.024 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 18:44:03.025 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-12 18:44:03.029 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 401 0 null 50.0256ms
2025-10-12 18:44:03.030 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 18:44:03.035 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 18:44:03.036 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:44:03.039 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 18:44:03.040 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 14:44:03'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 18:44:03.042 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 14.5427ms
2025-10-12 18:44:03.043 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 18:44:03.044 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 14:44:03'.
2025-10-12 18:44:03.045 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 18:44:03.049 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:44:03.050 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-12 18:44:03.052 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 73.0834ms
2025-10-12 18:44:03.053 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 14:44:03'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 18:44:03.054 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-12 18:44:03.059 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 14:44:03'.
2025-10-12 18:44:03.060 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 401 0 null 30.2253ms
2025-10-12 18:44:03.061 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 18:44:03.062 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 18:44:03.066 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 18:44:03.069 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:44:03.072 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 14:44:03'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 18:44:03.073 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 18:44:03.074 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 14:44:03'.
2025-10-12 18:44:03.077 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 18:44:03.078 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-12 18:44:03.080 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.2683ms
2025-10-12 18:44:03.081 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-12 18:44:03.082 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 18:44:03.084 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 401 0 null 21.4453ms
2025-10-12 18:44:03.085 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 18:44:03.085 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 42.5965ms
2025-10-12 18:44:03.093 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:44:03.098 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 14:44:03'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 18:44:03.101 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 14:44:03'.
2025-10-12 18:44:03.103 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-12 18:44:03.105 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-12 18:44:03.106 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 401 0 null 21.0018ms
2025-10-12 18:44:13.378 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-12 18:44:13.382 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:44:13.383 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 5.1693ms
2025-10-12 18:44:13.384 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-12 18:44:13.390 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:44:13.390 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-12 18:44:13.392 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-12 18:44:13.395 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:44:13.396 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-12 18:44:13.397 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 6.2922ms
2025-10-12 18:44:13.398 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 401 0 null 13.8033ms
2025-10-12 18:44:13.398 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-12 18:44:13.409 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:44:13.410 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 404 0 null 12.0713ms
2025-10-12 18:44:13.412 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - null null
2025-10-12 18:44:13.414 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7100/api/customer, Response status code: 404
2025-10-12 18:44:13.417 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:44:13.420 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 204 null null 8.1296ms
2025-10-12 18:44:13.422 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-12 18:44:13.428 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:44:13.430 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 14:44:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 18:44:13.431 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 14:44:13'.
2025-10-12 18:44:13.433 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-12 18:44:13.434 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-12 18:44:13.435 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 401 0 null 12.6469ms
2025-10-12 18:44:13.502 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 18:44:13.502 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 18:44:13.502 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 18:44:13.502 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 18:44:13.506 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:44:13.510 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:44:13.513 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:44:13.516 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:44:13.518 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 15.8649ms
2025-10-12 18:44:13.519 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 17.0892ms
2025-10-12 18:44:13.520 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 18.2072ms
2025-10-12 18:44:13.520 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 18:44:13.521 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 18:44:13.522 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 19.9647ms
2025-10-12 18:44:13.539 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:44:13.543 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:44:13.549 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 14:44:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 18:44:13.550 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 14:44:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 18:44:13.552 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 14:44:13'.
2025-10-12 18:44:13.554 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 14:44:13'.
2025-10-12 18:44:13.556 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 18:44:13.558 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-12 18:44:13.559 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 18:44:13.560 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-12 18:44:13.564 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 401 0 null 43.3679ms
2025-10-12 18:44:13.565 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 18:44:13.565 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 18:44:13.571 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 18:44:13.574 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:44:13.576 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 13.5173ms
2025-10-12 18:44:13.577 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 18:44:13.578 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 14:44:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 18:44:13.579 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 18:44:13.582 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:44:13.584 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 14:44:13'.
2025-10-12 18:44:13.585 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 64.7787ms
2025-10-12 18:44:13.586 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 14:44:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 18:44:13.587 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-12 18:44:13.592 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 14:44:13'.
2025-10-12 18:44:13.593 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-12 18:44:13.595 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 18:44:13.596 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 401 0 null 31.0516ms
2025-10-12 18:44:13.598 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 18:44:13.606 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 18:44:13.609 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 18:44:13.612 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.4394ms
2025-10-12 18:44:13.614 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 18:44:13.615 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 37.6853ms
2025-10-12 18:45:02.065 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-12 18:45:02.065 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-12 18:45:02.071 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:45:02.077 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:45:02.078 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 12.8086ms
2025-10-12 18:45:02.079 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 14.1346ms
2025-10-12 18:45:02.080 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-12 18:45:02.081 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-12 18:45:02.090 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:45:02.093 +04:00 [INF] CORS policy execution successful.
2025-10-12 18:45:02.094 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 14:45:02'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 18:45:02.096 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 14:45:02'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-12 18:45:02.097 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 14:45:02'.
2025-10-12 18:45:02.099 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '12.10.2025 14:45:02'.
2025-10-12 18:45:02.101 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-12 18:45:02.102 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 18:45:02.104 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-12 18:45:02.105 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-12 18:45:02.106 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 401 0 null 25.9861ms
2025-10-12 18:45:02.123 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-12 18:45:02.127 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-12 18:45:02.129 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 19.99ms
2025-10-12 18:45:02.131 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-12 18:45:02.134 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 52.8252ms
2025-10-12 18:46:48.817 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - null null
2025-10-12 18:46:48.826 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - 200 16511 application/javascript; charset=utf-8 9.4894ms
2025-10-12 18:46:49.127 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - null null
2025-10-12 18:46:49.155 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 28.4134ms
2025-10-12 18:46:50.286 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/index.html - null null
2025-10-12 18:46:50.348 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/index.html - 200 null text/html;charset=utf-8 61.8086ms
2025-10-12 18:46:50.393 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_vs/browserLink - null null
2025-10-12 18:46:50.393 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - null null
2025-10-12 18:46:50.403 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - 200 16511 application/javascript; charset=utf-8 9.4857ms
2025-10-12 18:46:50.409 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_vs/browserLink - 200 null text/javascript; charset=UTF-8 16.3073ms
2025-10-12 18:46:50.559 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - null null
2025-10-12 18:46:50.589 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 30.4597ms
2025-10-12 18:46:57.563 +04:00 [WRN] No store type was specified for the decimal property 'Quantity' on entity type 'OrderItem'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-10-12 18:46:58.272 +04:00 [INF] Executed DbCommand (51ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-12 18:46:58.332 +04:00 [INF] Executed DbCommand (29ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-12 18:46:58.341 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-12 18:46:58.347 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-12 18:46:58.386 +04:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-10-12 18:46:58.414 +04:00 [INF] No migrations were applied. The database is already up to date.
2025-10-12 18:46:58.418 +04:00 [INF] Migrations applied
2025-10-12 18:46:58.763 +04:00 [INF] Executed DbCommand (24ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-12 18:46:58.828 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-12 18:46:58.835 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-12 18:46:58.861 +04:00 [INF] User profile is available. Using 'C:\Users\ASUS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-12 18:46:58.888 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-10-12 18:46:58.947 +04:00 [INF] Admin user already exists: admin@greenzone.com
2025-10-12 18:46:59.327 +04:00 [INF] Now listening on: https://localhost:7100
2025-10-12 18:46:59.380 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-12 18:46:59.383 +04:00 [INF] Hosting environment: Development
2025-10-12 18:46:59.385 +04:00 [INF] Content root path: C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API
2025-10-12 18:46:59.573 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/index.html - null null
2025-10-12 18:46:59.743 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/index.html - 200 null text/html;charset=utf-8 171.3309ms
2025-10-12 18:46:59.766 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_vs/browserLink - null null
2025-10-12 18:46:59.766 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - null null
2025-10-12 18:46:59.782 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - 200 16511 application/javascript; charset=utf-8 15.2945ms
2025-10-12 18:46:59.810 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_vs/browserLink - 200 null text/javascript; charset=UTF-8 43.6848ms
2025-10-12 18:46:59.860 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - null null
2025-10-12 18:46:59.915 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 55.5334ms
2025-10-12 19:03:36.573 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7100/favicon.ico - null null
2025-10-12 19:03:36.616 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7100/favicon.ico - 404 0 null 42.2772ms
2025-10-12 19:03:36.621 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7100/favicon.ico, Response status code: 404
2025-10-12 19:10:14.388 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7100/favicon.ico - null null
2025-10-12 19:10:14.398 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7100/favicon.ico - 404 0 null 9.3013ms
2025-10-12 19:10:14.404 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7100/favicon.ico, Response status code: 404
