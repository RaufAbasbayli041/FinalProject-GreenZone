2025-10-13 19:16:21.485 +04:00 [WRN] No store type was specified for the decimal property 'Quantity' on entity type 'OrderItem'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-10-13 19:16:22.140 +04:00 [INF] Executed DbCommand (33ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-13 19:16:22.187 +04:00 [INF] Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-13 19:16:22.196 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-13 19:16:22.200 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-13 19:16:22.235 +04:00 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-10-13 19:16:22.260 +04:00 [INF] No migrations were applied. The database is already up to date.
2025-10-13 19:16:22.264 +04:00 [INF] Migrations applied
2025-10-13 19:16:22.529 +04:00 [INF] Executed DbCommand (32ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-13 19:16:22.576 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-13 19:16:22.585 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-13 19:16:22.610 +04:00 [INF] User profile is available. Using 'C:\Users\ASUS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-13 19:16:22.632 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-10-13 19:16:22.681 +04:00 [INF] Admin user already exists: admin@greenzone.com
2025-10-13 19:16:22.907 +04:00 [INF] Now listening on: https://localhost:7100
2025-10-13 19:16:22.953 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-13 19:16:22.964 +04:00 [INF] Hosting environment: Development
2025-10-13 19:16:22.973 +04:00 [INF] Content root path: C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API
2025-10-13 19:16:25.158 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/index.html - null null
2025-10-13 19:16:25.645 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/index.html - 200 null text/html;charset=utf-8 491.5938ms
2025-10-13 19:16:25.647 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - null null
2025-10-13 19:16:25.647 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_vs/browserLink - null null
2025-10-13 19:16:25.683 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - 200 16511 application/javascript; charset=utf-8 36.1885ms
2025-10-13 19:16:25.799 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_vs/browserLink - 200 null text/javascript; charset=UTF-8 151.4403ms
2025-10-13 19:16:25.932 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - null null
2025-10-13 19:16:26.090 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 157.5712ms
2025-10-13 19:17:07.879 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7100/favicon.ico - null null
2025-10-13 19:17:08.018 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7100/favicon.ico - 404 0 null 138.6712ms
2025-10-13 19:17:08.049 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7100/favicon.ico, Response status code: 404
2025-10-13 19:21:49.157 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7100/favicon.ico - null null
2025-10-13 19:21:49.165 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7100/favicon.ico - 404 0 null 7.8751ms
2025-10-13 19:21:49.170 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7100/favicon.ico, Response status code: 404
2025-10-13 19:42:15.090 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/index.html - null null
2025-10-13 19:42:15.102 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/index.html - 200 null text/html;charset=utf-8 11.8948ms
2025-10-13 19:42:15.121 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_vs/browserLink - null null
2025-10-13 19:42:15.121 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - null null
2025-10-13 19:42:15.129 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - 200 16511 application/javascript; charset=utf-8 7.8754ms
2025-10-13 19:42:15.129 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_vs/browserLink - 200 null text/javascript; charset=UTF-8 8.4291ms
2025-10-13 19:42:15.214 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - null null
2025-10-13 19:42:15.265 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 51.2353ms
2025-10-13 19:53:20.496 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 19:53:20.496 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 19:53:20.496 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 19:53:20.503 +04:00 [INF] CORS policy execution successful.
2025-10-13 19:53:20.503 +04:00 [INF] CORS policy execution successful.
2025-10-13 19:53:20.508 +04:00 [INF] CORS policy execution successful.
2025-10-13 19:53:20.510 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 14.1174ms
2025-10-13 19:53:20.510 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 14.123ms
2025-10-13 19:53:20.511 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 15.0851ms
2025-10-13 19:53:20.516 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-13 19:53:20.517 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 19:53:20.517 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 19:53:20.518 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 19:53:20.527 +04:00 [INF] CORS policy execution successful.
2025-10-13 19:53:20.529 +04:00 [INF] CORS policy execution successful.
2025-10-13 19:53:20.531 +04:00 [INF] CORS policy execution successful.
2025-10-13 19:53:20.535 +04:00 [INF] CORS policy execution successful.
2025-10-13 19:53:20.536 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 20.3385ms
2025-10-13 19:53:20.538 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-13 19:53:20.542 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 19:53:20.546 +04:00 [INF] CORS policy execution successful.
2025-10-13 19:53:20.548 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 404 0 null 10.2261ms
2025-10-13 19:53:20.552 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - null null
2025-10-13 19:53:20.552 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7100/api/customer, Response status code: 404
2025-10-13 19:53:20.555 +04:00 [INF] CORS policy execution successful.
2025-10-13 19:53:20.558 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 204 null null 6.1797ms
2025-10-13 19:53:20.560 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-13 19:53:20.565 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 19:53:20.566 +04:00 [INF] CORS policy execution successful.
2025-10-13 19:53:20.586 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 15:53:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 19:53:20.586 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 15:53:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 19:53:20.586 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 15:53:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 19:53:20.613 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 15:53:20'.
2025-10-13 19:53:20.614 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 15:53:20'.
2025-10-13 19:53:20.617 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 15:53:20'.
2025-10-13 19:53:20.619 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 19:53:20.620 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 19:53:20.622 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 19:53:20.622 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-13 19:53:20.627 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 19:53:20.630 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-13 19:53:20.632 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 401 0 null 71.9221ms
2025-10-13 19:53:20.879 +04:00 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 19:53:20.880 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 19:53:20.880 +04:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 19:53:20.901 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 19:53:20.928 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 19:53:20.928 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 19:53:20.933 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 19:53:20.934 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 304.1419ms
2025-10-13 19:53:20.934 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 363.7892ms
2025-10-13 19:53:20.934 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 306.4736ms
2025-10-13 19:53:20.934 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 19:53:20.936 +04:00 [INF] CORS policy execution successful.
2025-10-13 19:53:20.938 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 19:53:20.938 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 19:53:20.940 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 19:53:20.942 +04:00 [INF] CORS policy execution successful.
2025-10-13 19:53:20.944 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 15:53:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 19:53:20.947 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 429.7276ms
2025-10-13 19:53:20.947 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 430.181ms
2025-10-13 19:53:20.947 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 430.2181ms
2025-10-13 19:53:20.947 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 15:53:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 19:53:20.949 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 15:53:20'.
2025-10-13 19:53:20.960 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 15:53:20'.
2025-10-13 19:53:20.961 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 19:53:20.962 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 19:53:20.963 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 19:53:20.964 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 19:53:20.972 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 19:53:20.972 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 19:53:20.974 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 19:53:20.976 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 19:53:20.978 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 11.2014ms
2025-10-13 19:53:20.979 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.4786ms
2025-10-13 19:53:20.980 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 19:53:20.982 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 19:53:20.983 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 50.6186ms
2025-10-13 19:53:20.985 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 50.6321ms
2025-10-13 19:53:23.561 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 19:53:23.561 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 19:53:23.565 +04:00 [INF] CORS policy execution successful.
2025-10-13 19:53:23.569 +04:00 [INF] CORS policy execution successful.
2025-10-13 19:53:23.570 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 15:53:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 19:53:23.571 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 15:53:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 19:53:23.574 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 15:53:23'.
2025-10-13 19:53:23.576 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 15:53:23'.
2025-10-13 19:53:23.577 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 19:53:23.579 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 19:53:23.580 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 19:53:23.581 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 19:53:23.586 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 19:53:23.590 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 19:53:23.590 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 19:53:23.591 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.9656ms
2025-10-13 19:53:23.594 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 19:53:23.596 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 19:53:23.598 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.6419ms
2025-10-13 19:53:23.599 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 38.13ms
2025-10-13 19:53:23.601 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 19:53:23.607 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 45.4177ms
2025-10-13 21:41:31.560 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 21:41:31.564 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:41:31.565 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 5.762ms
2025-10-13 21:41:31.572 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-13 21:41:31.574 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 21:41:31.577 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:41:31.581 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:41:31.582 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 9.3236ms
2025-10-13 21:41:31.583 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:41:31.590 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-13 21:41:31.590 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:41:31.592 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:41:31.595 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 404 0 null 4.7662ms
2025-10-13 21:41:31.598 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7100/api/customer, Response status code: 404
2025-10-13 21:41:31.598 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - null null
2025-10-13 21:41:31.603 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:41:31.604 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 204 null null 5.921ms
2025-10-13 21:41:31.606 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-13 21:41:31.609 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:41:31.611 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:41:31'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:41:31.613 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:41:31'.
2025-10-13 21:41:31.614 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-13 21:41:31.617 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-13 21:41:31.618 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 401 0 null 12.5207ms
2025-10-13 21:41:31.666 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:41:31.667 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:41:31.669 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 75.1387ms
2025-10-13 21:41:31.670 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:41:31.671 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 97.4901ms
2025-10-13 21:43:29.190 +04:00 [WRN] No store type was specified for the decimal property 'Quantity' on entity type 'OrderItem'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-10-13 21:43:30.425 +04:00 [INF] Executed DbCommand (60ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-13 21:43:30.522 +04:00 [INF] Executed DbCommand (44ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-13 21:43:30.541 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-13 21:43:30.557 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-13 21:43:30.601 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-10-13 21:43:30.638 +04:00 [INF] No migrations were applied. The database is already up to date.
2025-10-13 21:43:30.644 +04:00 [INF] Migrations applied
2025-10-13 21:43:31.141 +04:00 [INF] Executed DbCommand (36ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-13 21:43:31.250 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-13 21:43:31.266 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-13 21:43:31.316 +04:00 [INF] User profile is available. Using 'C:\Users\ASUS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-13 21:43:31.376 +04:00 [INF] Executed DbCommand (16ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-10-13 21:43:31.519 +04:00 [INF] Admin user already exists: admin@greenzone.com
2025-10-13 21:43:32.010 +04:00 [INF] Now listening on: https://localhost:7100
2025-10-13 21:43:32.109 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-13 21:43:32.113 +04:00 [INF] Hosting environment: Development
2025-10-13 21:43:32.122 +04:00 [INF] Content root path: C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API
2025-10-13 21:43:33.341 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/index.html - null null
2025-10-13 21:43:33.758 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/index.html - 200 null text/html;charset=utf-8 421.2874ms
2025-10-13 21:43:33.797 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - null null
2025-10-13 21:43:33.797 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_vs/browserLink - null null
2025-10-13 21:43:33.826 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - 200 16511 application/javascript; charset=utf-8 28.5196ms
2025-10-13 21:43:33.979 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_vs/browserLink - 200 null text/javascript; charset=UTF-8 182.1966ms
2025-10-13 21:43:34.335 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - null null
2025-10-13 21:43:34.440 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 104.4406ms
2025-10-13 21:45:41.542 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 21:45:41.542 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 21:45:41.543 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 21:45:41.565 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:45:41.569 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:45:41.570 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 21:45:41.571 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 21:45:41.571 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-13 21:45:41.581 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:45:41.587 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 44.7851ms
2025-10-13 21:45:41.588 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 45.758ms
2025-10-13 21:45:41.603 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 21:45:41.604 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 21:45:41.604 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:45:41.610 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:45:41.614 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 71.5298ms
2025-10-13 21:45:41.618 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 21:45:41.663 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:45:41.674 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:45:41.684 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:45:41.688 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 117.3716ms
2025-10-13 21:45:41.691 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 119.1234ms
2025-10-13 21:45:41.710 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-13 21:45:41.713 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:45:41.716 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 145.4135ms
2025-10-13 21:45:41.763 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:45:41.812 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 404 0 null 101.3082ms
2025-10-13 21:45:41.816 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:45:41.822 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - null null
2025-10-13 21:45:41.827 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7100/api/customer, Response status code: 404
2025-10-13 21:45:41.861 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:45:41.872 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 204 null null 50.2094ms
2025-10-13 21:45:41.876 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:45:41.877 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-13 21:45:41.904 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:45:41.950 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:45:41'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:45:41.950 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:45:41'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:45:41.950 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:45:41'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:45:42.006 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:45:41'.
2025-10-13 21:45:42.011 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:45:41'.
2025-10-13 21:45:42.017 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:45:41'.
2025-10-13 21:45:42.022 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:45:42.025 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:45:42.034 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:45:42.041 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-13 21:45:42.049 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 21:45:42.057 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-13 21:45:42.062 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 401 0 null 184.7168ms
2025-10-13 21:45:42.752 +04:00 [INF] Executed DbCommand (28ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 21:45:42.757 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:45:42.762 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:45:42.839 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:45:42.977 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:45:42.977 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:45:43.004 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 21:45:43.006 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 21:45:43.009 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1107.126ms
2025-10-13 21:45:43.009 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 946.0428ms
2025-10-13 21:45:43.009 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 956.7514ms
2025-10-13 21:45:43.018 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:45:43.028 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:45:43.033 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:45:43.039 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:45:43.048 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:45:43.054 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:45:43'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:45:43.065 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:45:43'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:45:43.082 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 1464.0916ms
2025-10-13 21:45:43.082 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 1478.4824ms
2025-10-13 21:45:43.082 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 1479.0243ms
2025-10-13 21:45:43.085 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:45:43'.
2025-10-13 21:45:43.091 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:45:43'.
2025-10-13 21:45:43.129 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:45:43.134 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:45:43.138 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:45:43.141 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 21:45:43.158 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 21:45:43.168 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:45:43.172 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:45:43.174 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 26.1343ms
2025-10-13 21:45:43.185 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:45:43.188 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:45:43.192 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 38.4833ms
2025-10-13 21:45:43.195 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 189.5638ms
2025-10-13 21:45:43.201 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:45:43.217 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 212.362ms
2025-10-13 21:46:03.617 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 21:46:03.617 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 21:46:03.617 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 21:46:03.632 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:03.650 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:03.664 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:03.670 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 53.3868ms
2025-10-13 21:46:03.676 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 58.7475ms
2025-10-13 21:46:03.681 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 21:46:03.681 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 21:46:03.696 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-13 21:46:03.701 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 83.472ms
2025-10-13 21:46:03.705 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 21:46:03.739 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:03.746 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:03.754 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:03.773 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:03.776 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:03'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:46:03.786 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:03'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:46:03.787 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 90.7111ms
2025-10-13 21:46:03.787 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:46:03.792 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-13 21:46:03.794 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:03'.
2025-10-13 21:46:03.798 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:46:03.819 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:46:03.841 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:03'.
2025-10-13 21:46:03.844 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:46:03.848 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:46:03.856 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:46:03.864 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:46:03.865 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:03.872 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:46:03.873 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 21:46:03.882 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:46:03.884 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 404 0 null 91.765ms
2025-10-13 21:46:03.887 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 59.8749ms
2025-10-13 21:46:03.900 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 49.8412ms
2025-10-13 21:46:03.903 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 21:46:03.904 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - null null
2025-10-13 21:46:03.911 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7100/api/customer, Response status code: 404
2025-10-13 21:46:03.913 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 21:46:03.916 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:46:03.921 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:46:03.928 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:03.938 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:03.958 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:46:03.962 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 256.7844ms
2025-10-13 21:46:03.965 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 284.4237ms
2025-10-13 21:46:03.969 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:03'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:46:03.971 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 204 null null 66.8166ms
2025-10-13 21:46:03.976 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 81.8266ms
2025-10-13 21:46:03.977 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-13 21:46:03.979 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 21:46:04.009 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:03'.
2025-10-13 21:46:04.023 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:46:04.031 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:04.039 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:04.042 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:46:04.045 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:46:04.051 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:46:04.075 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 394.4485ms
2025-10-13 21:46:04.076 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:46:04.081 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:04'.
2025-10-13 21:46:04.087 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:46:04.100 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:04'.
2025-10-13 21:46:04.110 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-13 21:46:04.116 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:46:04.119 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:46:04.123 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-13 21:46:04.127 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 62.7375ms
2025-10-13 21:46:04.131 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 21:46:04.136 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 401 0 null 158.9991ms
2025-10-13 21:46:04.140 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:46:04.157 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 21:46:04.166 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 263.1838ms
2025-10-13 21:46:04.173 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:46:04.193 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 47.4733ms
2025-10-13 21:46:04.199 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:46:04.203 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 224.3429ms
2025-10-13 21:46:06.586 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-13 21:46:06.602 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:06.609 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:06'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:46:06.620 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:06'.
2025-10-13 21:46:06.631 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-13 21:46:06.638 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-13 21:46:06.647 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 401 0 null 61.5965ms
2025-10-13 21:46:10.308 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - null null
2025-10-13 21:46:10.346 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:10.351 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 204 null null 42.7698ms
2025-10-13 21:46:10.356 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-13 21:46:10.403 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:10.409 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:10'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:46:10.417 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:10'.
2025-10-13 21:46:10.424 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-13 21:46:10.427 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-13 21:46:10.433 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 401 0 null 77.0393ms
2025-10-13 21:46:11.167 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-13 21:46:11.180 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:11.186 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:11'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:46:11.194 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:11'.
2025-10-13 21:46:11.199 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-13 21:46:11.204 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-13 21:46:11.209 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 401 0 null 41.8026ms
2025-10-13 21:46:11.745 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-13 21:46:11.757 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:11.763 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:11'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:46:11.772 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:11'.
2025-10-13 21:46:11.779 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-13 21:46:11.783 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-13 21:46:11.792 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 401 0 null 47.0793ms
2025-10-13 21:46:12.502 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-13 21:46:12.511 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:12.514 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:12'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:46:12.520 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:12'.
2025-10-13 21:46:12.524 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-13 21:46:12.527 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-13 21:46:12.531 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 401 0 null 28.8617ms
2025-10-13 21:46:13.446 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-13 21:46:13.449 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-13 21:46:13.460 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:13.473 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:13.476 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 30.0458ms
2025-10-13 21:46:13.481 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-13 21:46:13.482 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 33.128ms
2025-10-13 21:46:13.511 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:13.528 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 404 0 null 47.198ms
2025-10-13 21:46:13.530 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-13 21:46:13.540 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7100/api/customer, Response status code: 404
2025-10-13 21:46:13.540 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-13 21:46:13.551 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:13.569 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:13.572 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 404 0 null 41.6475ms
2025-10-13 21:46:13.575 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:46:13.585 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7100/api/customer, Response status code: 404
2025-10-13 21:46:13.591 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:13'.
2025-10-13 21:46:13.602 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-13 21:46:13.606 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-13 21:46:13.609 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 401 0 null 69.0349ms
2025-10-13 21:46:13.611 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-13 21:46:13.627 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:13.631 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:46:13.637 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:13'.
2025-10-13 21:46:13.641 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-13 21:46:13.645 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-13 21:46:13.649 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 401 0 null 38.1056ms
2025-10-13 21:46:20.694 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 21:46:20.694 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 21:46:20.694 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 21:46:20.694 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 21:46:20.698 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 21:46:20.698 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 21:46:20.702 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:20.710 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:20.715 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:20.722 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:20.730 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:20.737 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:20.739 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 45.2107ms
2025-10-13 21:46:20.741 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 47.0049ms
2025-10-13 21:46:20.743 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 48.642ms
2025-10-13 21:46:20.744 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 50.3244ms
2025-10-13 21:46:20.746 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 48.2289ms
2025-10-13 21:46:20.748 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 49.5465ms
2025-10-13 21:46:20.752 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 21:46:20.752 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 21:46:20.809 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:20.816 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:20.819 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:46:20.820 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:46:20.823 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:20'.
2025-10-13 21:46:20.827 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:20'.
2025-10-13 21:46:20.829 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:46:20.831 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:46:20.834 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 21:46:20.837 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:46:20.868 +04:00 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:46:20.876 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:46:20.878 +04:00 [INF] Executed DbCommand (33ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 21:46:20.881 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 33.8935ms
2025-10-13 21:46:20.883 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 21:46:20.886 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:46:20.891 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 49.4558ms
2025-10-13 21:46:20.893 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 21:46:20.899 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:20.903 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:46:20.907 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 154.349ms
2025-10-13 21:46:20.915 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:20.918 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:46:20.921 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:46:20.934 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:46:20.938 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:20'.
2025-10-13 21:46:20.942 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 189.6169ms
2025-10-13 21:46:20.947 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:20'.
2025-10-13 21:46:20.949 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:46:20.962 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:46:20.965 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:46:20.968 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 21:46:20.979 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:46:20.988 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 21:46:20.988 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:46:20.995 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:46:20.999 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 25.3224ms
2025-10-13 21:46:21.001 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 21:46:21.003 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 23.1175ms
2025-10-13 21:46:21.008 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:46:21.016 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:21.020 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:46:21.026 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 142.6337ms
2025-10-13 21:46:21.027 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:21'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:46:21.031 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 137.7333ms
2025-10-13 21:46:21.047 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:21'.
2025-10-13 21:46:21.062 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:46:21.066 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:46:21.079 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:46:21.086 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:46:21.091 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 18.5643ms
2025-10-13 21:46:21.093 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 21:46:21.095 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:46:21.102 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:21.105 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 104.2836ms
2025-10-13 21:46:21.108 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:21'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:46:21.122 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:21'.
2025-10-13 21:46:21.126 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:46:21.129 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:46:21.139 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:46:21.145 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:46:21.149 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 13.2796ms
2025-10-13 21:46:21.153 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:46:21.156 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 63.0522ms
2025-10-13 21:46:27.426 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 21:46:27.426 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 21:46:27.426 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 21:46:27.426 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 21:46:27.438 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:27.447 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:27.462 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:27.470 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:27.473 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 46.8702ms
2025-10-13 21:46:27.475 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 48.8767ms
2025-10-13 21:46:27.476 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 50.2982ms
2025-10-13 21:46:27.478 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 52.1907ms
2025-10-13 21:46:27.479 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 21:46:27.479 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 21:46:27.513 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:27.519 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:27.521 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:27'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:46:27.524 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:27'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:46:27.528 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:27'.
2025-10-13 21:46:27.536 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:27'.
2025-10-13 21:46:27.540 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:46:27.542 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:46:27.544 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:46:27.546 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 21:46:27.566 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:46:27.568 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 21:46:27.573 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:46:27.582 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:46:27.588 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 34.203ms
2025-10-13 21:46:27.591 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 21:46:27.595 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 33.9865ms
2025-10-13 21:46:27.596 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 21:46:27.598 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:46:27.612 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:27.617 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:46:27.629 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:27.632 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 153.6226ms
2025-10-13 21:46:27.635 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:27'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:46:27.640 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 160.732ms
2025-10-13 21:46:27.645 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:27'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:46:27.657 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:27'.
2025-10-13 21:46:27.673 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:27'.
2025-10-13 21:46:27.678 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:46:27.683 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:46:27.686 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:46:27.691 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 21:46:27.700 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:46:27.707 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 21:46:27.711 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:46:27.718 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:46:27.722 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 25.9377ms
2025-10-13 21:46:27.728 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 24.648ms
2025-10-13 21:46:27.730 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:46:27.735 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:46:27.737 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 145.9366ms
2025-10-13 21:46:27.740 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 143.2071ms
2025-10-13 21:46:30.141 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 21:46:30.141 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 21:46:30.142 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 21:46:30.147 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:30.152 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:30.158 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:30.159 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:46:30.161 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:46:30.162 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 19.9377ms
2025-10-13 21:46:30.166 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 21:46:30.167 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:30'.
2025-10-13 21:46:30.173 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:30'.
2025-10-13 21:46:30.185 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-13 21:46:30.190 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:30.193 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:46:30.195 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:46:30.204 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:30.207 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:46:30.210 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:46:30.212 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 21:46:30.213 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 27.7761ms
2025-10-13 21:46:30.215 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:46:30.216 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-13 21:46:30.222 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:46:30.227 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 21:46:30.238 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:46:30.243 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:30.249 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:46:30.256 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:46:30.263 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:46:30.265 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 404 0 null 49.072ms
2025-10-13 21:46:30.268 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - null null
2025-10-13 21:46:30.269 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 50.2569ms
2025-10-13 21:46:30.270 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 21:46:30.272 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 47.6809ms
2025-10-13 21:46:30.273 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 21:46:30.274 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 39.2785ms
2025-10-13 21:46:30.282 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7100/api/customer, Response status code: 404
2025-10-13 21:46:30.286 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:30.289 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:46:30.293 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:30.296 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:46:30.301 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:30.305 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:46:30.310 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 204 null null 41.8408ms
2025-10-13 21:46:30.313 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-13 21:46:30.313 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 171.8709ms
2025-10-13 21:46:30.315 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:46:30.317 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 176.1593ms
2025-10-13 21:46:30.320 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:46:30.321 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 155.5124ms
2025-10-13 21:46:30.337 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:46:30.354 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:30'.
2025-10-13 21:46:30.369 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:30'.
2025-10-13 21:46:30.384 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:46:30.386 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:46:30.390 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:46:30.396 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:46:30'.
2025-10-13 21:46:30.399 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:46:30.403 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 21:46:30.407 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-13 21:46:30.418 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:46:30.422 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 21:46:30.423 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-13 21:46:30.429 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:46:30.433 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:46:30.436 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 401 0 null 123.2427ms
2025-10-13 21:46:30.438 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 22.9429ms
2025-10-13 21:46:30.441 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 21.1023ms
2025-10-13 21:46:30.449 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:46:30.452 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:46:30.455 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 184.8994ms
2025-10-13 21:46:30.459 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 185.7122ms
2025-10-13 21:48:05.959 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 21:48:05.960 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 21:48:05.962 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 21:48:05.965 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 21:48:05.965 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 21:48:05.967 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 21:48:05.973 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:48:05.984 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:48:05.993 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:48:06.001 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:48:06.002 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 21:48:06.005 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 21:48:06.009 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:48:06.016 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:48:06.019 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 59.5868ms
2025-10-13 21:48:06.021 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 60.8151ms
2025-10-13 21:48:06.022 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 21:48:06.023 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 61.0997ms
2025-10-13 21:48:06.024 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 21:48:06.025 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 60.4755ms
2025-10-13 21:48:06.027 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 21:48:06.033 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:48:06.037 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-13 21:48:06.038 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-13 21:48:06.041 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:48:06.043 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 78.41ms
2025-10-13 21:48:06.046 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 78.8104ms
2025-10-13 21:48:06.094 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:48:06.129 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:48:06.165 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:48:06.170 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 167.5047ms
2025-10-13 21:48:06.184 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:48:06.196 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:48:06.199 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 193.3375ms
2025-10-13 21:48:06.224 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:48:06'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:48:06.227 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:48:06'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:48:06.230 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:48:06.246 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 209.7253ms
2025-10-13 21:48:06.250 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 212.1188ms
2025-10-13 21:48:06.252 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-13 21:48:06.270 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:48:06'.
2025-10-13 21:48:06.277 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:48:06'.
2025-10-13 21:48:06.281 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:48:06.314 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:48:06.317 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:48:06.322 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:48:06.333 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 404 0 null 80.1548ms
2025-10-13 21:48:06.335 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-13 21:48:06.337 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 21:48:06.341 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:48:06.355 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7100/api/customer, Response status code: 404
2025-10-13 21:48:06.364 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:48:06.366 +04:00 [INF] Executed DbCommand (34ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:48:06.369 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - null null
2025-10-13 21:48:06.378 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 21:48:06.379 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:48:06.386 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 404 0 null 50.8001ms
2025-10-13 21:48:06.396 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:48:06.403 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:48:06.410 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:48:06.415 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:48:06.421 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7100/api/customer, Response status code: 404
2025-10-13 21:48:06.426 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 96.004ms
2025-10-13 21:48:06.427 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 204 null null 57.8195ms
2025-10-13 21:48:06.428 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 21:48:06.431 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 62.032ms
2025-10-13 21:48:06.433 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-13 21:48:06.433 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 21:48:06.434 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 57.6042ms
2025-10-13 21:48:06.435 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 21:48:06.443 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:48:06.460 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:48:06.463 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:48:06.473 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:48:06.482 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:48:06.487 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:48:06.498 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:48:06.502 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 474.3983ms
2025-10-13 21:48:06.505 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:48:06.507 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 484.3994ms
2025-10-13 21:48:06.510 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:48:06'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:48:06.514 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:48:06'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:48:06.516 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 491.9518ms
2025-10-13 21:48:06.518 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:48:06'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:48:06.535 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:48:06.550 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:48:06'.
2025-10-13 21:48:06.556 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:48:06'.
2025-10-13 21:48:06.572 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:48:06'.
2025-10-13 21:48:06.581 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-13 21:48:06.583 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:48:06.584 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:48:06.588 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:48:06.591 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-13 21:48:06.600 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:48:06.604 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 21:48:06.607 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:48:06.611 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 401 0 null 178.4037ms
2025-10-13 21:48:06.614 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-13 21:48:06.616 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 37.9816ms
2025-10-13 21:48:06.627 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 21:48:06.633 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:48:06.647 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:48:06.651 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:48:06.657 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:48:06.664 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:48:06.667 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:48:06'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:48:06.670 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 241.8449ms
2025-10-13 21:48:06.676 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 53.024ms
2025-10-13 21:48:06.678 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 21:48:06.682 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 52.7913ms
2025-10-13 21:48:06.684 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 21:48:06.688 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:48:06'.
2025-10-13 21:48:06.703 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:48:06.712 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:48:06.717 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:48:06.728 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:48:06.732 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-13 21:48:06.736 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 302.4403ms
2025-10-13 21:48:06.739 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:48:06'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:48:06.743 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 307.8186ms
2025-10-13 21:48:06.747 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:48:06'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:48:06.750 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-13 21:48:06.768 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:48:06'.
2025-10-13 21:48:06.786 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:48:06'.
2025-10-13 21:48:06.790 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 401 0 null 176.4217ms
2025-10-13 21:48:06.794 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:48:06.797 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:48:06.814 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 21:48:06.818 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:48:06.834 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 21:48:06.837 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:48:06.841 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:48:06.849 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:48:06.853 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 29.9679ms
2025-10-13 21:48:06.858 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 29.8497ms
2025-10-13 21:48:06.863 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:48:06.869 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:48:06.874 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 195.7921ms
2025-10-13 21:48:06.878 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 193.7192ms
2025-10-13 21:48:24.344 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 21:48:24.345 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 21:48:24.345 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 21:48:24.345 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 21:48:24.353 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:48:24.362 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:48:24.373 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:48:24.382 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:48:24.386 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 41.6494ms
2025-10-13 21:48:24.388 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 43.8578ms
2025-10-13 21:48:24.389 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 21:48:24.391 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 21:48:24.392 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 46.8139ms
2025-10-13 21:48:24.393 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 48.4097ms
2025-10-13 21:48:24.421 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:48:24.427 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:48:24.453 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:48:24'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:48:24.456 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:48:24'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:48:24.462 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:48:24'.
2025-10-13 21:48:24.469 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:48:24'.
2025-10-13 21:48:24.476 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:48:24.478 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:48:24.483 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 21:48:24.488 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:48:24.503 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:48:24.503 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 21:48:24.511 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:48:24.515 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:48:24.517 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 20.2653ms
2025-10-13 21:48:24.519 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 21:48:24.520 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 26.2831ms
2025-10-13 21:48:24.521 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 21:48:24.525 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:48:24.529 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:48:24.534 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:48:24.546 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:48:24.550 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 158.9257ms
2025-10-13 21:48:24.553 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:48:24'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:48:24.555 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 166.707ms
2025-10-13 21:48:24.557 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:48:24'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:48:24.572 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:48:24'.
2025-10-13 21:48:24.589 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:48:24'.
2025-10-13 21:48:24.593 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:48:24.595 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:48:24.598 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:48:24.602 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 21:48:24.612 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:48:24.618 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 21:48:24.625 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:48:24.631 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:48:24.635 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 26.102ms
2025-10-13 21:48:24.639 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 24.2054ms
2025-10-13 21:48:24.643 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:48:24.646 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:48:24.648 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 129.5762ms
2025-10-13 21:48:24.651 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 130.5887ms
2025-10-13 21:49:57.534 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 21:49:57.538 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:49:57.539 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 4.7598ms
2025-10-13 21:49:57.547 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 21:49:57.551 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:49:57.552 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:49:57.553 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:49:57.566 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:49:57.569 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:49:57.571 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 14.9739ms
2025-10-13 21:49:57.572 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:49:57.573 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 26.2985ms
2025-10-13 21:49:57.593 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-13 21:49:57.597 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:49:57.598 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 4.5919ms
2025-10-13 21:49:57.600 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-13 21:49:57.605 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:49:57.606 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 404 0 null 6.8589ms
2025-10-13 21:49:57.611 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7100/api/customer, Response status code: 404
2025-10-13 21:49:57.612 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - null null
2025-10-13 21:49:57.616 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:49:57.618 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 204 null null 5.0451ms
2025-10-13 21:49:57.620 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-13 21:49:57.624 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:49:57.626 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:49:57'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:49:57.628 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:49:57'.
2025-10-13 21:49:57.630 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-13 21:49:57.631 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-13 21:49:57.632 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 401 0 null 12.0213ms
2025-10-13 21:50:01.040 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 21:50:01.045 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:50:01.047 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:50:01.049 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:50:01.057 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:50:01.060 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:50:01.061 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 10.5224ms
2025-10-13 21:50:01.063 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:50:01.065 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 24.5212ms
2025-10-13 21:50:01.160 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-13 21:50:01.164 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:50:01.166 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 404 0 null 5.3019ms
2025-10-13 21:50:01.169 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7100/api/customer, Response status code: 404
2025-10-13 21:50:01.185 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-13 21:50:01.189 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:50:01.190 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:50:01'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:50:01.192 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:50:01'.
2025-10-13 21:50:01.193 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-13 21:50:01.194 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-13 21:50:01.195 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 401 0 null 10.2773ms
2025-10-13 21:50:19.907 +04:00 [WRN] No store type was specified for the decimal property 'Quantity' on entity type 'OrderItem'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-10-13 21:50:20.211 +04:00 [INF] Executed DbCommand (24ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-13 21:50:20.246 +04:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-13 21:50:20.251 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-13 21:50:20.256 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-13 21:50:20.289 +04:00 [INF] Executed DbCommand (24ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-10-13 21:50:20.303 +04:00 [INF] No migrations were applied. The database is already up to date.
2025-10-13 21:50:20.307 +04:00 [INF] Migrations applied
2025-10-13 21:50:20.479 +04:00 [INF] Executed DbCommand (24ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-13 21:50:20.509 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-13 21:50:20.514 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-13 21:50:20.538 +04:00 [INF] User profile is available. Using 'C:\Users\ASUS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-13 21:50:20.552 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-10-13 21:50:20.577 +04:00 [INF] Admin user already exists: admin@greenzone.com
2025-10-13 21:50:20.740 +04:00 [INF] Now listening on: https://localhost:7100
2025-10-13 21:50:20.765 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-13 21:50:20.767 +04:00 [INF] Hosting environment: Development
2025-10-13 21:50:20.768 +04:00 [INF] Content root path: C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API
2025-10-13 21:50:20.933 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/index.html - null null
2025-10-13 21:50:21.012 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/index.html - 200 null text/html;charset=utf-8 79.6307ms
2025-10-13 21:50:21.029 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_vs/browserLink - null null
2025-10-13 21:50:21.029 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - null null
2025-10-13 21:50:21.038 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - 200 16511 application/javascript; charset=utf-8 8.4952ms
2025-10-13 21:50:21.047 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_vs/browserLink - 200 null text/javascript; charset=UTF-8 17.4315ms
2025-10-13 21:50:21.213 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - null null
2025-10-13 21:50:21.234 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 21.698ms
2025-10-13 21:50:29.328 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 21:50:29.328 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 21:50:29.328 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 21:50:29.328 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 21:50:29.333 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:50:29.334 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:50:29.337 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:50:29.341 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:50:29.342 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 14.506ms
2025-10-13 21:50:29.342 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 14.5098ms
2025-10-13 21:50:29.343 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 15.3118ms
2025-10-13 21:50:29.344 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 16.1233ms
2025-10-13 21:50:29.348 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 21:50:29.348 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 21:50:29.364 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:50:29.367 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:50:29.427 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:50:29'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:50:29.427 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:50:29'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:50:29.437 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:50:29'.
2025-10-13 21:50:29.440 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:50:29'.
2025-10-13 21:50:29.444 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:50:29.444 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:50:29.454 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:50:29.454 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 21:50:29.662 +04:00 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 21:50:29.663 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:50:29.685 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:50:29.721 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:50:29.728 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 21:50:29.728 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 21:50:29.730 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 268.897ms
2025-10-13 21:50:29.730 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 271.7055ms
2025-10-13 21:50:29.734 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:50:29.737 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:50:29.739 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:50:29.740 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:50:29.743 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:50:29'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:50:29.743 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:50:29'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:50:29.747 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:50:29'.
2025-10-13 21:50:29.747 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 399.1259ms
2025-10-13 21:50:29.747 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 399.4482ms
2025-10-13 21:50:29.749 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:50:29'.
2025-10-13 21:50:29.751 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:50:29.761 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:50:29.763 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 21:50:29.764 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:50:29.816 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 21:50:29.817 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:50:29.823 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:50:29.825 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:50:29.827 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 60.0634ms
2025-10-13 21:50:29.829 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 60.0728ms
2025-10-13 21:50:29.831 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:50:29.833 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:50:29.835 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 105.9486ms
2025-10-13 21:50:29.836 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 107.3081ms
2025-10-13 21:53:06.722 +04:00 [WRN] No store type was specified for the decimal property 'Quantity' on entity type 'OrderItem'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-10-13 21:53:07.005 +04:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-13 21:53:07.035 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-13 21:53:07.040 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-13 21:53:07.045 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-13 21:53:07.063 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-10-13 21:53:07.078 +04:00 [INF] No migrations were applied. The database is already up to date.
2025-10-13 21:53:07.080 +04:00 [INF] Migrations applied
2025-10-13 21:53:07.219 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-13 21:53:07.252 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-13 21:53:07.257 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-13 21:53:07.267 +04:00 [INF] User profile is available. Using 'C:\Users\ASUS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-13 21:53:07.278 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-10-13 21:53:07.305 +04:00 [INF] Admin user already exists: admin@greenzone.com
2025-10-13 21:53:07.415 +04:00 [INF] Now listening on: https://localhost:7100
2025-10-13 21:53:07.442 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-13 21:53:07.443 +04:00 [INF] Hosting environment: Development
2025-10-13 21:53:07.445 +04:00 [INF] Content root path: C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API
2025-10-13 21:53:07.591 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/index.html - null null
2025-10-13 21:53:07.670 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/index.html - 200 null text/html;charset=utf-8 78.7364ms
2025-10-13 21:53:07.687 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_vs/browserLink - null null
2025-10-13 21:53:07.687 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - null null
2025-10-13 21:53:07.696 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - 200 16511 application/javascript; charset=utf-8 9.5029ms
2025-10-13 21:53:07.707 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_vs/browserLink - 200 null text/javascript; charset=UTF-8 20.3956ms
2025-10-13 21:53:07.748 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - null null
2025-10-13 21:53:07.768 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 20.4069ms
2025-10-13 21:53:13.928 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - null null
2025-10-13 21:53:13.947 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 18.9282ms
2025-10-13 21:53:14.368 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/favicon.ico - null null
2025-10-13 21:53:14.400 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/favicon.ico - 404 0 null 32.0439ms
2025-10-13 21:53:14.410 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7100/favicon.ico, Response status code: 404
2025-10-13 21:54:38.724 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 21:54:38.724 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 21:54:38.731 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:54:38.734 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:54:38.735 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 10.7315ms
2025-10-13 21:54:38.735 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 10.7669ms
2025-10-13 21:54:38.741 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 21:54:38.749 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:54:38.752 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:54:38.766 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:54:38.999 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:54:39.097 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:54:39.115 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 21:54:39.117 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 342.5589ms
2025-10-13 21:54:39.120 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:54:39.123 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:54:39.126 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:54:39.129 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:54:39.131 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 390.0675ms
2025-10-13 21:54:39.187 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:54:39.192 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:54:39.194 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 61.9605ms
2025-10-13 21:54:39.196 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:54:39.199 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 83.9331ms
2025-10-13 21:55:18.433 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 21:55:18.433 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 21:55:18.433 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 21:55:18.433 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 21:55:18.437 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:55:18.441 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:55:18.445 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:55:18.448 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:55:18.449 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 16.5572ms
2025-10-13 21:55:18.451 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 17.7247ms
2025-10-13 21:55:18.452 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 18.9387ms
2025-10-13 21:55:18.453 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 19.5898ms
2025-10-13 21:55:18.462 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 21:55:18.462 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 21:55:18.473 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:55:18.476 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:55:18.527 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:55:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:55:18.527 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:55:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:55:18.542 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:55:18'.
2025-10-13 21:55:18.545 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:55:18'.
2025-10-13 21:55:18.547 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:55:18.548 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:55:18.550 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:55:18.555 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 21:55:18.571 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:55:18.575 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:55:18.577 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 23.5787ms
2025-10-13 21:55:18.579 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 21:55:18.580 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:55:18.584 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:55:18.585 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 122.4625ms
2025-10-13 21:55:18.586 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:55:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:55:18.593 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:55:18'.
2025-10-13 21:55:18.595 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:55:18.597 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:55:18.607 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:55:18.609 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:55:18.611 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 11.1928ms
2025-10-13 21:55:18.614 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:55:18.616 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 36.9368ms
2025-10-13 21:55:18.618 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 21:55:18.632 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:55:18.670 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 112.2379ms
2025-10-13 21:55:18.672 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 21:55:18.674 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:55:18.677 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:55:18.679 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 216.3565ms
2025-10-13 21:55:18.680 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:55:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:55:18.686 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:55:18'.
2025-10-13 21:55:18.687 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:55:18.689 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 21:55:18.707 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 21:55:18.711 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:55:18.714 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 22.9416ms
2025-10-13 21:55:18.716 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:55:18.718 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 45.9261ms
2025-10-13 21:55:21.419 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 21:55:21.419 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 21:55:21.421 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 21:55:21.423 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:55:21.426 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:55:21.429 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:55:21.430 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:55:21'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:55:21.431 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:55:21'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:55:21.432 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 11.5404ms
2025-10-13 21:55:21.434 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:55:21'.
2025-10-13 21:55:21.434 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 21:55:21.436 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:55:21'.
2025-10-13 21:55:21.442 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:55:21.445 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:55:21.446 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:55:21.447 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:55:21.448 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:55:21.449 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 21:55:21.453 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:55:21.457 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:55:21.458 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:55:21.461 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:55:21.463 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:55:21.464 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 13.1207ms
2025-10-13 21:55:21.466 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.5715ms
2025-10-13 21:55:21.467 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:55:21.469 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:55:21.471 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 51.3594ms
2025-10-13 21:55:21.471 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 21:55:21.472 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 37.4512ms
2025-10-13 21:55:21.477 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 21:55:21.478 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:55:21.486 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:55:21.488 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 33.6144ms
2025-10-13 21:55:21.489 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:55:21'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:55:21.490 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 21:55:21.490 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:55:21.492 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:55:21'.
2025-10-13 21:55:21.496 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:55:21.497 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 78.1941ms
2025-10-13 21:55:21.499 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-13 21:55:21.499 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:55:21.500 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:55:21'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:55:21.506 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:55:21.508 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:55:21.510 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:55:21'.
2025-10-13 21:55:21.512 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 13.8028ms
2025-10-13 21:55:21.517 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-13 21:55:21.517 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:55:21.522 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:55:21.524 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:55:21.525 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 21:55:21.528 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:55:21.529 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 404 0 null 11.7348ms
2025-10-13 21:55:21.532 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 16.8ms
2025-10-13 21:55:21.536 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 21:55:21.536 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7100/api/customer, Response status code: 404
2025-10-13 21:55:21.538 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:55:21.541 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:55:21.544 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - null null
2025-10-13 21:55:21.544 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 66.9042ms
2025-10-13 21:55:21.546 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 15.0034ms
2025-10-13 21:55:21.548 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:55:21.554 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:55:21.555 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 204 null null 10.8302ms
2025-10-13 21:55:21.556 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 66.3929ms
2025-10-13 21:55:21.557 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-13 21:55:21.567 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:55:21.568 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:55:21'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:55:21.571 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:55:21'.
2025-10-13 21:55:21.578 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-13 21:55:21.584 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-13 21:55:21.586 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 401 0 null 28.3656ms
2025-10-13 21:55:54.321 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 21:55:54.321 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 21:55:54.321 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 21:55:54.321 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 21:55:54.322 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 21:55:54.322 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 21:55:54.325 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:55:54.329 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:55:54.331 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:55:54.335 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:55:54.339 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:55:54.342 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:55:54.343 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 22.1012ms
2025-10-13 21:55:54.344 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 23.0155ms
2025-10-13 21:55:54.345 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 24.186ms
2025-10-13 21:55:54.346 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 25.0948ms
2025-10-13 21:55:54.347 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 25.2315ms
2025-10-13 21:55:54.348 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 26.1646ms
2025-10-13 21:55:54.356 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 21:55:54.356 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 21:55:54.360 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 21:55:54.381 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:55:54.385 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:55:54.389 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:55:54.390 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:55:54'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:55:54.391 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:55:54'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:55:54.392 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:55:54.394 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:55:54'.
2025-10-13 21:55:54.398 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:55:54'.
2025-10-13 21:55:54.400 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:55:54.402 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:55:54.403 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:55:54.406 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 21:55:54.408 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:55:54.414 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:55:54.419 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:55:54.420 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:55:54.422 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 21:55:54.424 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:55:54.425 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 19.8038ms
2025-10-13 21:55:54.428 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 21:55:54.429 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:55:54.430 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 16.7112ms
2025-10-13 21:55:54.432 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:55:54.433 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 21:55:54.435 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:55:54.438 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 26.8994ms
2025-10-13 21:55:54.439 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:55:54.440 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 21:55:54.440 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 80.8073ms
2025-10-13 21:55:54.444 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:55:54.446 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:55:54.447 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:55:54.448 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 92.127ms
2025-10-13 21:55:54.453 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:55:54.460 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:55:54'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:55:54.461 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:55:54.464 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 107.7527ms
2025-10-13 21:55:54.472 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:55:54'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:55:54.474 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:55:54'.
2025-10-13 21:55:54.478 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:55:54.483 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:55:54'.
2025-10-13 21:55:54.486 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:55:54.489 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:55:54.490 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:55:54.492 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:55:54.494 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 18.12ms
2025-10-13 21:55:54.495 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 21:55:54.501 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:55:54.504 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:55:54.505 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 77.1608ms
2025-10-13 21:55:54.507 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 21:55:54.508 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:55:54.515 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:55:54.516 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 17.9747ms
2025-10-13 21:55:54.519 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 15.2885ms
2025-10-13 21:55:54.519 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 21:55:54.520 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:55:54.521 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 21:55:54.523 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:55:54.526 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:55:54.528 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 94.3165ms
2025-10-13 21:55:54.532 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:55:54.533 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 93.3047ms
2025-10-13 21:55:54.535 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:55:54'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:55:54.541 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:55:54'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:55:54.547 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:55:54'.
2025-10-13 21:55:54.549 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:55:54'.
2025-10-13 21:55:54.551 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:55:54.553 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:55:54.554 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:55:54.556 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 21:55:54.563 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:55:54.566 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 21:55:54.568 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:55:54.572 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 13.3472ms
2025-10-13 21:55:54.572 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:55:54.574 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:55:54.576 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 14.7252ms
2025-10-13 21:55:54.578 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 59.1227ms
2025-10-13 21:55:54.580 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:55:54.587 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 66.4938ms
2025-10-13 21:55:59.697 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 21:55:59.697 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 21:55:59.701 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:55:59.705 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:55:59.705 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 8.5999ms
2025-10-13 21:55:59.707 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 9.5385ms
2025-10-13 21:55:59.711 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 21:55:59.711 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 21:55:59.715 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:55:59.719 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:55:59.726 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:55:59'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:55:59.726 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:55:59'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:55:59.728 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:55:59'.
2025-10-13 21:55:59.731 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:55:59'.
2025-10-13 21:55:59.733 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:55:59.734 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:55:59.735 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:55:59.737 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 21:55:59.750 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:55:59.755 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:55:59.755 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 21:55:59.758 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 18.8238ms
2025-10-13 21:55:59.761 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:55:59.764 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:55:59.766 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 23.3173ms
2025-10-13 21:55:59.767 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 55.5839ms
2025-10-13 21:55:59.769 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:55:59.774 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 63.7675ms
2025-10-13 21:56:03.717 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 21:56:03.717 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 21:56:03.721 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:56:03.725 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:56:03.727 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:56:03'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:56:03.728 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:56:03'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:56:03.730 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:56:03'.
2025-10-13 21:56:03.732 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:56:03'.
2025-10-13 21:56:03.734 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:56:03.736 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:56:03.737 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 21:56:03.738 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:56:03.754 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:56:03.755 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 21:56:03.759 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:56:03.762 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:56:03.764 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 20.9348ms
2025-10-13 21:56:03.766 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 24.9539ms
2025-10-13 21:56:03.767 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:56:03.769 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:56:03.771 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 53.7853ms
2025-10-13 21:56:03.772 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 55.1138ms
2025-10-13 21:56:06.148 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 21:56:06.149 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 21:56:06.152 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:56:06.156 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:56:06.157 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 8.9747ms
2025-10-13 21:56:06.158 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 9.4786ms
2025-10-13 21:56:06.161 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 21:56:06.163 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 21:56:06.169 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:56:06.171 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:56:06.172 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:56:06'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:56:06.173 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:56:06'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:56:06.176 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:56:06'.
2025-10-13 21:56:06.178 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:56:06'.
2025-10-13 21:56:06.180 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:56:06.180 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:56:06.182 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 21:56:06.183 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:56:06.192 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 21:56:06.193 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:56:06.195 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:56:06.198 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:56:06.199 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 13.1024ms
2025-10-13 21:56:06.201 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 11.4024ms
2025-10-13 21:56:06.203 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:56:06.205 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:56:06.206 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 44.7484ms
2025-10-13 21:56:06.207 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 44.0509ms
2025-10-13 21:56:57.290 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 21:56:57.295 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 21:56:57.296 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:56:57.300 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:56:57.302 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 11.6205ms
2025-10-13 21:56:57.303 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 8.6033ms
2025-10-13 21:56:57.314 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 21:56:57.314 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 21:56:57.319 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:56:57.322 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:56:57.325 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:56:57'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:56:57.325 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:56:57'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:56:57.327 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:56:57'.
2025-10-13 21:56:57.330 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:56:57'.
2025-10-13 21:56:57.332 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:56:57.334 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:56:57.335 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 21:56:57.336 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:56:57.346 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:56:57.346 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 21:56:57.352 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:56:57.353 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:56:57.355 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 13.9554ms
2025-10-13 21:56:57.357 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 18.1203ms
2025-10-13 21:56:57.359 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:56:57.361 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:56:57.363 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 48.3717ms
2025-10-13 21:56:57.364 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 50.1218ms
2025-10-13 21:57:02.790 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 21:57:02.790 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 21:57:02.796 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:57:02.799 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:57:02.800 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 10.4497ms
2025-10-13 21:57:02.801 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 11.1224ms
2025-10-13 21:57:02.808 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 21:57:02.808 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 21:57:02.825 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:57:02.828 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:57:02.829 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:57:02'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:57:02.830 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:57:02'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:57:02.831 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:57:02'.
2025-10-13 21:57:02.834 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:57:02'.
2025-10-13 21:57:02.836 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:57:02.837 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:57:02.838 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 21:57:02.840 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:57:02.848 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 21:57:02.849 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:57:02.852 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:57:02.855 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:57:02.856 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 14.3993ms
2025-10-13 21:57:02.858 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 13.6574ms
2025-10-13 21:57:02.860 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:57:02.862 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:57:02.864 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 56.3274ms
2025-10-13 21:57:02.866 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 57.5212ms
2025-10-13 21:57:05.492 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 21:57:05.492 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 21:57:05.495 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:57:05.498 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:57:05.500 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:57:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:57:05.501 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:57:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:57:05.502 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:57:05'.
2025-10-13 21:57:05.504 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:57:05'.
2025-10-13 21:57:05.505 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:57:05.507 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:57:05.509 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:57:05.511 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 21:57:05.519 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:57:05.519 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 21:57:05.522 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:57:05.526 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:57:05.527 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 14.1587ms
2025-10-13 21:57:05.529 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 13.5951ms
2025-10-13 21:57:05.530 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:57:05.531 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:57:05.533 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 41.1169ms
2025-10-13 21:57:05.534 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 42.1411ms
2025-10-13 21:57:11.300 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 21:57:11.304 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:57:11.305 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 21:57:11.306 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 6.1131ms
2025-10-13 21:57:11.309 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 21:57:11.310 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:57:11.318 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:57:11.318 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 13.302ms
2025-10-13 21:57:11.321 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:57:11'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:57:11.324 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 21:57:11.327 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:57:11'.
2025-10-13 21:57:11.330 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:57:11.332 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:57:11.333 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:57:11'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:57:11.334 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 21:57:11.338 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:57:11'.
2025-10-13 21:57:11.343 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:57:11.345 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:57:11.349 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 21:57:11.354 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:57:11.354 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:57:11.358 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:57:11.359 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 19.1629ms
2025-10-13 21:57:11.360 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.9636ms
2025-10-13 21:57:11.363 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:57:11.364 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:57:11.366 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 57.2085ms
2025-10-13 21:57:11.368 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 43.9148ms
2025-10-13 21:57:14.496 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 21:57:14.496 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 21:57:14.505 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:57:14.508 +04:00 [INF] CORS policy execution successful.
2025-10-13 21:57:14.510 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:57:14'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:57:14.510 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:57:14'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 21:57:14.512 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:57:14'.
2025-10-13 21:57:14.514 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 17:57:14'.
2025-10-13 21:57:14.516 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:57:14.517 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:57:14.519 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 21:57:14.520 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 21:57:14.529 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 21:57:14.529 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 21:57:14.532 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:57:14.536 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 21:57:14.537 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.277ms
2025-10-13 21:57:14.539 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 17.0122ms
2025-10-13 21:57:14.541 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 21:57:14.543 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 21:57:14.545 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 48.6569ms
2025-10-13 21:57:14.546 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 50.0497ms
2025-10-13 22:01:02.478 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:01:02.478 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:01:02.483 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:01:02.487 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:01:02.488 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 10.0029ms
2025-10-13 22:01:02.489 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 10.9964ms
2025-10-13 22:01:02.494 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:01:02.495 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:01:02.502 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:01:02.505 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:01:02.506 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:01:02'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:01:02.507 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:01:02'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:01:02.509 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:01:02'.
2025-10-13 22:01:02.512 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:01:02'.
2025-10-13 22:01:02.513 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:01:02.514 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:01:02.516 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:01:02.517 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:01:02.548 +04:00 [INF] Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:01:02.548 +04:00 [INF] Executed DbCommand (27ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:01:02.551 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:01:02.553 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:01:02.555 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 33.2791ms
2025-10-13 22:01:02.557 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 37.492ms
2025-10-13 22:01:02.559 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:01:02.561 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:01:02.562 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 67.7982ms
2025-10-13 22:01:02.564 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 69.7117ms
2025-10-13 22:01:06.290 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:01:06.291 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 22:01:06.291 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:01:06.294 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:01:06.297 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:01:06.301 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:01:06.302 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:01:06'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:01:06.302 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 11.8757ms
2025-10-13 22:01:06.303 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:01:06'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:01:06.304 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 22:01:06.306 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:01:06'.
2025-10-13 22:01:06.313 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:01:06'.
2025-10-13 22:01:06.317 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:01:06.318 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:01:06.319 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:01:06.321 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:01:06.322 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:01:06.323 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:01:06.325 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:01:06.329 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:01:06.331 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:01:06.335 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:01:06.338 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:01:06.339 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 11.7945ms
2025-10-13 22:01:06.341 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 11.2816ms
2025-10-13 22:01:06.342 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:01:06.342 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:01:06.344 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:01:06.345 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:01:06.345 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:01:06.347 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:01:06.348 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 58.3316ms
2025-10-13 22:01:06.349 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 58.5409ms
2025-10-13 22:01:06.353 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:01:06.356 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:01:06.358 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 26.6915ms
2025-10-13 22:01:06.365 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/1decd369-2728-4c65-8a5b-61444d784f9c - null null
2025-10-13 22:01:06.367 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:01:06'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:01:06.368 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:01:06'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:01:06.369 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:01:06.372 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:01:06.374 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:01:06'.
2025-10-13 22:01:06.377 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:01:06'.
2025-10-13 22:01:06.378 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 74.4915ms
2025-10-13 22:01:06.379 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/1decd369-2728-4c65-8a5b-61444d784f9c - 204 null null 13.7811ms
2025-10-13 22:01:06.380 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-13 22:01:06.380 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:01:06.381 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:01:06.392 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:01:06.393 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:01:06.395 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:01:06.396 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).
The token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.
 ---> Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).
The token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(String encodedJson)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)
   --- End of inner exception stack trace ---
2025-10-13 22:01:06.400 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:01:06.401 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:01:06.402 +04:00 [INF] Bearer was not authenticated. Failure message: IDX14100: JWT is not well formed, there are no dots (.).
The token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.
2025-10-13 22:01:06.405 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:01:06.407 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:01:06.409 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 11.5701ms
2025-10-13 22:01:06.410 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-13 22:01:06.411 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 11.5207ms
2025-10-13 22:01:06.413 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:01:06.414 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-13 22:01:06.415 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:01:06.417 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 71.9028ms
2025-10-13 22:01:06.418 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/1decd369-2728-4c65-8a5b-61444d784f9c - 401 0 null 37.6744ms
2025-10-13 22:01:06.419 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 73.6951ms
2025-10-13 22:01:06.421 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Customer - null null
2025-10-13 22:01:06.434 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:01:06.435 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Customer - 204 null null 14.1849ms
2025-10-13 22:01:06.437 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer - application/json null
2025-10-13 22:01:06.442 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:01:06.443 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer - 404 0 null 6.2203ms
2025-10-13 22:01:06.447 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - null null
2025-10-13 22:01:06.447 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7100/api/Customer, Response status code: 404
2025-10-13 22:01:06.450 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:01:06.454 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 204 null null 6.4795ms
2025-10-13 22:01:06.455 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-13 22:01:06.461 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:01:06.463 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:01:06'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:01:06.466 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:01:06'.
2025-10-13 22:01:06.470 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-13 22:01:06.471 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-13 22:01:06.473 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 401 0 null 17.6233ms
2025-10-13 22:03:40.892 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:03:40.892 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:03:40.892 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 22:03:40.896 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:03:40.899 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:03:40.902 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:03:40.903 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 10.8463ms
2025-10-13 22:03:40.904 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 11.876ms
2025-10-13 22:03:40.905 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 12.8753ms
2025-10-13 22:03:40.908 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:03:40.908 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:03:40.908 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 22:03:40.920 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:03:40.922 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:03:40.925 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:03:40.927 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:03:40'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:03:40.927 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:03:40'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:03:40.928 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:03:40.930 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:03:40'.
2025-10-13 22:03:40.932 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:03:40'.
2025-10-13 22:03:40.933 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:03:40.934 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:03:40.935 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:03:40.939 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:03:40.940 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:03:40.944 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:03:40.944 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:03:40.948 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:03:40.949 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:03:40.951 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:03:40.952 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 14.8683ms
2025-10-13 22:03:40.955 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:03:40.957 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 14.13ms
2025-10-13 22:03:40.958 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:03:40.958 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:03:40.960 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 14.5296ms
2025-10-13 22:03:40.961 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:03:40.962 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:03:40.963 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/1decd369-2728-4c65-8a5b-61444d784f9c - null null
2025-10-13 22:03:40.965 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:03:40.966 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 58.0172ms
2025-10-13 22:03:40.968 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:03:40.971 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:03:40.972 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 63.9361ms
2025-10-13 22:03:40.975 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:03:40.976 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:03:40'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:03:40.981 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 72.8241ms
2025-10-13 22:03:40.982 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:03:40'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:03:40.987 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/1decd369-2728-4c65-8a5b-61444d784f9c - 204 null null 23.9057ms
2025-10-13 22:03:40.989 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-13 22:03:40.989 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:03:40'.
2025-10-13 22:03:40.994 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:03:40'.
2025-10-13 22:03:41.002 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:03:41.003 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:03:41.004 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:03:41.005 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).
The token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.
 ---> Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).
The token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(String encodedJson)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)
   --- End of inner exception stack trace ---
2025-10-13 22:03:41.006 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:03:41.007 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:03:41.010 +04:00 [INF] Bearer was not authenticated. Failure message: IDX14100: JWT is not well formed, there are no dots (.).
The token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.
2025-10-13 22:03:41.013 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:03:41.015 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:03:41.015 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-13 22:03:41.018 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:03:41.020 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:03:41.021 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-13 22:03:41.023 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 10.6953ms
2025-10-13 22:03:41.024 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.5535ms
2025-10-13 22:03:41.025 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/1decd369-2728-4c65-8a5b-61444d784f9c - 401 0 null 36.9248ms
2025-10-13 22:03:41.027 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:03:41.028 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Customer - null null
2025-10-13 22:03:41.029 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:03:41.034 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 75.7397ms
2025-10-13 22:03:41.036 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:03:41.037 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 76.1278ms
2025-10-13 22:03:41.042 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Customer - 204 null null 14.2339ms
2025-10-13 22:03:41.045 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer - application/json null
2025-10-13 22:03:41.053 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:03:41.054 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer - 404 0 null 9.3653ms
2025-10-13 22:03:41.059 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7100/api/Customer, Response status code: 404
2025-10-13 22:03:41.060 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - null null
2025-10-13 22:03:41.064 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:03:41.065 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 204 null null 5.0071ms
2025-10-13 22:03:41.066 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-13 22:03:41.070 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:03:41.071 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:03:41'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:03:41.073 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:03:41'.
2025-10-13 22:03:41.074 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-13 22:03:41.075 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-13 22:03:41.076 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 401 0 null 9.8798ms
2025-10-13 22:04:08.662 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:04:08.663 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:04:08.664 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 22:04:08.666 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:04:08.667 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:04:08.667 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 22:04:08.668 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:04:08.672 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:04:08.675 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:04:08.678 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:04:08.682 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:04:08.685 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:04:08.686 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 23.7404ms
2025-10-13 22:04:08.687 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 23.6861ms
2025-10-13 22:04:08.688 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 24.4671ms
2025-10-13 22:04:08.689 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 23.5061ms
2025-10-13 22:04:08.690 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 23.462ms
2025-10-13 22:04:08.691 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:04:08.691 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 23.7998ms
2025-10-13 22:04:08.692 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:04:08.694 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 22:04:08.714 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:04:08.722 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:04:08.726 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:04:08.727 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:04:08'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:04:08.728 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:04:08'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:04:08.729 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:04:08.731 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:04:08'.
2025-10-13 22:04:08.733 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:04:08'.
2025-10-13 22:04:08.735 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:04:08.736 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:04:08.738 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:04:08.741 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:04:08.742 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:04:08.746 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:04:08.748 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:04:08.749 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:04:08.750 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:04:08.752 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:04:08.754 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:04:08.756 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 16.2399ms
2025-10-13 22:04:08.757 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 22:04:08.758 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 10.8943ms
2025-10-13 22:04:08.759 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:04:08.760 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 15.0406ms
2025-10-13 22:04:08.761 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:04:08.761 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:04:08.764 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:04:08.766 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:04:08.769 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:04:08.770 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:04:08.774 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:04:08.776 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 81.6636ms
2025-10-13 22:04:08.777 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:04:08.778 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 86.1781ms
2025-10-13 22:04:08.780 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:04:08'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:04:08.781 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 89.9887ms
2025-10-13 22:04:08.782 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:04:08'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:04:08.789 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:04:08.796 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:04:08'.
2025-10-13 22:04:08.803 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:04:08'.
2025-10-13 22:04:08.807 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:04:08.808 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:04:08.808 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:04:08.810 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:04:08.813 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:04:08.815 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:04:08.820 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 14.0947ms
2025-10-13 22:04:08.821 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:04:08.825 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:04:08.825 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:04:08.829 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:04:08.831 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 73.5477ms
2025-10-13 22:04:08.834 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:04:08.837 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 19.1148ms
2025-10-13 22:04:08.839 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:04:08.843 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 20.6074ms
2025-10-13 22:04:08.845 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:04:08.846 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:04:08.849 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:04:08.851 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:04:08.852 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 93.5816ms
2025-10-13 22:04:08.856 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:04:08.857 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:04:08'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:04:08.859 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 97.7055ms
2025-10-13 22:04:08.864 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:04:08'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:04:08.866 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:04:08'.
2025-10-13 22:04:08.873 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:04:08'.
2025-10-13 22:04:08.875 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:04:08.877 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:04:08.878 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:04:08.879 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:04:08.886 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:04:08.888 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:04:08.890 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:04:08.893 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:04:08.894 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.7389ms
2025-10-13 22:04:08.896 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 11.5459ms
2025-10-13 22:04:08.899 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:04:08.901 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:04:08.903 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 63.6227ms
2025-10-13 22:04:08.905 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 58.7958ms
2025-10-13 22:04:21.911 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:04:21.911 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:04:21.915 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:04:21.917 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:04:21.919 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 7.3637ms
2025-10-13 22:04:21.920 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 8.9681ms
2025-10-13 22:04:21.922 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:04:21.923 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:04:21.931 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:04:21.934 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:04:21.935 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:04:21'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:04:21.936 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:04:21'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:04:21.937 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:04:21'.
2025-10-13 22:04:21.939 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:04:21'.
2025-10-13 22:04:21.941 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:04:21.942 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:04:21.943 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:04:21.944 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:04:21.948 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:04:21.950 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:04:21.951 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:04:21.954 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:04:21.956 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.3589ms
2025-10-13 22:04:21.958 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.6439ms
2025-10-13 22:04:21.959 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:04:21.961 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:04:21.962 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 40.3538ms
2025-10-13 22:04:21.964 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 40.7352ms
2025-10-13 22:04:33.549 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:04:33.550 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:04:33.553 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:04:33.556 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:04:33.557 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 8.918ms
2025-10-13 22:04:33.558 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 8.6388ms
2025-10-13 22:04:33.561 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:04:33.562 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:04:33.572 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:04:33.575 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:04:33.576 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:04:33'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:04:33.578 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:04:33'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:04:33.579 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:04:33'.
2025-10-13 22:04:33.582 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:04:33'.
2025-10-13 22:04:33.585 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:04:33.585 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:04:33.586 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:04:33.588 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:04:33.592 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:04:33.593 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:04:33.595 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:04:33.597 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:04:33.599 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.1405ms
2025-10-13 22:04:33.601 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.6802ms
2025-10-13 22:04:33.602 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:04:33.604 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:04:33.605 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 44.2627ms
2025-10-13 22:04:33.607 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 44.8679ms
2025-10-13 22:04:54.344 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:04:54.344 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:04:54.348 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:04:54.352 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:04:54.353 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 8.7911ms
2025-10-13 22:04:54.354 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 9.2822ms
2025-10-13 22:04:54.356 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:04:54.356 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:04:54.365 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:04:54.367 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:04:54.369 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:04:54'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:04:54.370 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:04:54'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:04:54.371 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:04:54'.
2025-10-13 22:04:54.374 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:04:54'.
2025-10-13 22:04:54.375 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:04:54.376 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:04:54.377 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:04:54.379 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:04:54.382 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:04:54.386 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:04:54.386 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:04:54.389 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:04:54.390 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.8366ms
2025-10-13 22:04:54.392 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.4509ms
2025-10-13 22:04:54.393 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:04:54.394 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:04:54.395 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 38.7668ms
2025-10-13 22:04:54.396 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 39.8135ms
2025-10-13 22:04:58.337 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:04:58.339 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:04:58.342 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:04:58.346 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:04:58.347 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:04:58'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:04:58.349 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:04:58'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:04:58.350 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:04:58'.
2025-10-13 22:04:58.352 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:04:58'.
2025-10-13 22:04:58.354 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:04:58.355 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:04:58.357 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:04:58.359 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:04:58.364 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:04:58.366 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:04:58.368 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:04:58.371 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:04:58.372 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 11.4565ms
2025-10-13 22:04:58.374 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 11.0488ms
2025-10-13 22:04:58.376 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:04:58.377 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:04:58.379 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 42.126ms
2025-10-13 22:04:58.380 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 41.2244ms
2025-10-13 22:05:11.572 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:05:11.572 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:05:11.576 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:05:11.579 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:05:11.580 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 8.0924ms
2025-10-13 22:05:11.582 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 9.4819ms
2025-10-13 22:05:11.584 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:05:11.584 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:05:11.593 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:05:11.596 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:05:11.598 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:05:11'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:05:11.599 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:05:11'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:05:11.601 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:05:11'.
2025-10-13 22:05:11.603 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:05:11'.
2025-10-13 22:05:11.604 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:05:11.605 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:05:11.606 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:05:11.608 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:05:11.614 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:05:11.615 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:05:11.617 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:05:11.619 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:05:11.621 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 10.9654ms
2025-10-13 22:05:11.622 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.7758ms
2025-10-13 22:05:11.624 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:05:11.626 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:05:11.627 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 43.8063ms
2025-10-13 22:05:11.628 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 44.5184ms
2025-10-13 22:05:52.749 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - null null
2025-10-13 22:05:52.754 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - 200 16511 application/javascript; charset=utf-8 5.0831ms
2025-10-13 22:05:52.860 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - null null
2025-10-13 22:05:52.886 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 25.8106ms
2025-10-13 22:08:18.689 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:08:18.689 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:08:18.693 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:08:18.697 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:08:18.699 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 9.7968ms
2025-10-13 22:08:18.700 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 10.411ms
2025-10-13 22:08:18.705 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:08:18.707 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:08:18.712 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:08:18.716 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:08:18.718 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:08:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:08:18.719 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:08:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:08:18.721 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:08:18'.
2025-10-13 22:08:18.723 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:08:18'.
2025-10-13 22:08:18.725 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:08:18.726 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:08:18.728 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:08:18.730 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:08:18.738 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:08:18.738 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:08:18.741 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:08:18.745 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:08:18.746 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 14.5656ms
2025-10-13 22:08:18.748 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 13.8575ms
2025-10-13 22:08:18.749 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:08:18.751 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:08:18.753 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 48.0633ms
2025-10-13 22:08:18.754 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 47.2383ms
2025-10-13 22:08:22.774 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:08:22.774 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:08:22.774 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 22:08:22.779 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:08:22.782 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:08:22.785 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:08:22.787 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:08:22'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:08:22.789 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:08:22'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:08:22.790 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 15.2428ms
2025-10-13 22:08:22.792 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:08:22'.
2025-10-13 22:08:22.792 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 22:08:22.794 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:08:22'.
2025-10-13 22:08:22.801 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:08:22.804 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:08:22.805 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:08:22.807 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:08:22.808 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:08:22.809 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:08:22.814 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:08:22.817 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:08:22.821 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:08:22.822 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:08:22.823 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:08:22.825 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:08:22.826 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 14.3054ms
2025-10-13 22:08:22.829 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:08:22.830 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 14.4947ms
2025-10-13 22:08:22.832 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:08:22.834 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 15.572ms
2025-10-13 22:08:22.836 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:08:22.837 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:08:22.837 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 63.925ms
2025-10-13 22:08:22.838 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:08:22.839 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:08:22.841 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 67.0241ms
2025-10-13 22:08:22.844 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:08:22.853 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:08:22.854 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 62.0676ms
2025-10-13 22:08:22.857 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/1decd369-2728-4c65-8a5b-61444d784f9c - null null
2025-10-13 22:08:22.860 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:08:22'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:08:22.861 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:08:22'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:08:22.869 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:08:22.871 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:08:22'.
2025-10-13 22:08:22.874 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:08:22'.
2025-10-13 22:08:22.875 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/1decd369-2728-4c65-8a5b-61444d784f9c - 204 null null 17.5576ms
2025-10-13 22:08:22.876 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:08:22.876 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-13 22:08:22.878 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:08:22.884 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:08:22.888 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:08:22.890 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:08:22.893 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:08:22'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:08:22.898 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:08:22.898 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:08:22'.
2025-10-13 22:08:22.900 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:08:22.901 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:08:22.902 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-13 22:08:22.905 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:08:22.907 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 14.5566ms
2025-10-13 22:08:22.908 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-13 22:08:22.910 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 14.6255ms
2025-10-13 22:08:22.912 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:08:22.913 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/1decd369-2728-4c65-8a5b-61444d784f9c - 401 0 null 36.7259ms
2025-10-13 22:08:22.915 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:08:22.917 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 80.1689ms
2025-10-13 22:08:22.917 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - null null
2025-10-13 22:08:22.922 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 84.7891ms
2025-10-13 22:08:22.930 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:08:22.935 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 204 null null 18.2694ms
2025-10-13 22:08:22.937 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-13 22:08:22.944 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:08:22.945 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:08:22'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:08:22.948 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:08:22'.
2025-10-13 22:08:22.949 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-13 22:08:22.950 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-13 22:08:22.951 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 401 0 null 13.9413ms
2025-10-13 22:09:10.202 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/kjk - null null
2025-10-13 22:09:10.208 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-13 22:09:10.210 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-13 22:09:10.212 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/kjk - 401 0 null 9.426ms
2025-10-13 22:15:44.848 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:15:44.848 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 22:15:44.848 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:15:44.853 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:15:44.856 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:15:44.860 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:15:44.861 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 12.7415ms
2025-10-13 22:15:44.863 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 14.2757ms
2025-10-13 22:15:44.864 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 15.6853ms
2025-10-13 22:15:44.868 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 22:15:44.868 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:15:44.868 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:15:44.878 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:15:44.881 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:15:44.885 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:15:44.886 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:15:44.887 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:15:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:15:44.888 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:15:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:15:44.889 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:15:44.891 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:15:44'.
2025-10-13 22:15:44.893 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:15:44'.
2025-10-13 22:15:44.897 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:15:44.899 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:15:44.901 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:15:44.902 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:15:44.906 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:15:44.911 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:15:44.911 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:15:44.914 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:15:44.915 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 19.9701ms
2025-10-13 22:15:44.917 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:15:44.917 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.4451ms
2025-10-13 22:15:44.918 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:15:44.919 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:15:44.922 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:15:44.924 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:15:44.927 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:15:44.928 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 60.1735ms
2025-10-13 22:15:44.928 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/1decd369-2728-4c65-8a5b-61444d784f9c - null null
2025-10-13 22:15:44.930 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 22.6785ms
2025-10-13 22:15:44.932 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 63.4066ms
2025-10-13 22:15:44.932 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:15:44.933 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:15:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:15:44.941 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:15:44.942 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:15:44.950 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:15:44.952 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:15:44'.
2025-10-13 22:15:44.953 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/1decd369-2728-4c65-8a5b-61444d784f9c - 204 null null 24.9482ms
2025-10-13 22:15:44.955 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 86.8499ms
2025-10-13 22:15:44.955 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-13 22:15:44.956 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:15:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:15:44.958 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:15:44.970 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:15:44.972 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:15:44'.
2025-10-13 22:15:44.973 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:15:44.974 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:15:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:15:44.975 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:15:44.979 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:15:44.980 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:15:44'.
2025-10-13 22:15:44.981 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:15:44.985 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:15:44.986 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-13 22:15:44.989 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 11.9305ms
2025-10-13 22:15:44.990 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:15:44.991 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-13 22:15:44.992 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:15:44.996 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:15:44.997 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/1decd369-2728-4c65-8a5b-61444d784f9c - 401 0 null 41.0137ms
2025-10-13 22:15:44.998 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 79.6686ms
2025-10-13 22:15:45.000 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.834ms
2025-10-13 22:15:45.001 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - null null
2025-10-13 22:15:45.010 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:15:45.013 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:15:45.015 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 82.255ms
2025-10-13 22:15:45.016 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 204 null null 15.2776ms
2025-10-13 22:15:45.018 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-13 22:15:45.027 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:15:45.028 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:15:45'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:15:45.030 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:15:45'.
2025-10-13 22:15:45.032 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-13 22:15:45.033 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-13 22:15:45.034 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 401 0 null 16.3138ms
2025-10-13 22:19:09.877 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:19:09.879 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:19:09.883 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:09.888 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:09.889 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 12.2074ms
2025-10-13 22:19:09.891 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 11.3185ms
2025-10-13 22:19:09.898 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:19:09.898 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:19:09.903 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:09.906 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:09.908 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:09'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:19:09.909 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:09'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:19:09.911 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:09'.
2025-10-13 22:19:09.913 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:09'.
2025-10-13 22:19:09.914 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:19:09.915 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:19:09.917 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:19:09.918 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:19:09.927 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:19:09.927 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:19:09.930 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:19:09.932 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:19:09.934 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 11.1227ms
2025-10-13 22:19:09.936 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 15.6126ms
2025-10-13 22:19:09.938 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:19:09.940 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:19:09.942 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 43.5496ms
2025-10-13 22:19:09.943 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 44.7562ms
2025-10-13 22:19:14.948 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:19:14.949 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:19:14.954 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:14.958 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:14.960 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 11.7359ms
2025-10-13 22:19:14.961 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 12.8258ms
2025-10-13 22:19:14.963 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:19:14.963 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:19:14.976 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:14.979 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:14.981 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:14'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:19:14.981 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:14'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:19:14.983 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:14'.
2025-10-13 22:19:14.986 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:14'.
2025-10-13 22:19:14.987 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:19:14.989 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:19:14.991 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:19:14.993 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:19:14.997 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:19:14.999 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:19:15.002 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:19:15.005 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:19:15.007 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 11.1525ms
2025-10-13 22:19:15.009 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 10.9334ms
2025-10-13 22:19:15.012 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:19:15.014 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:19:15.015 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 52.2704ms
2025-10-13 22:19:15.017 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 53.7846ms
2025-10-13 22:19:23.853 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:19:23.854 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:19:23.855 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 22:19:23.858 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:19:23.858 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:23.858 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:19:23.859 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 22:19:23.861 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:23.863 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:23.866 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:23.867 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 13.8547ms
2025-10-13 22:19:23.869 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:19:23.870 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:23.873 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:23.873 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 19.2951ms
2025-10-13 22:19:23.874 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 18.9868ms
2025-10-13 22:19:23.875 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 17.3017ms
2025-10-13 22:19:23.875 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:19:23.876 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 22:19:23.880 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:23.880 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 21.9929ms
2025-10-13 22:19:23.881 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 21.4454ms
2025-10-13 22:19:23.895 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:23.897 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:23.898 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:19:23.906 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:19:23.907 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:19:23.908 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/1decd369-2728-4c65-8a5b-61444d784f9c - null null
2025-10-13 22:19:23.908 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/1decd369-2728-4c65-8a5b-61444d784f9c - null null
2025-10-13 22:19:23.908 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:23'.
2025-10-13 22:19:23.911 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:23'.
2025-10-13 22:19:23.912 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:19:23.915 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:23.916 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:23.917 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:19:23.918 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:19:23.920 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/1decd369-2728-4c65-8a5b-61444d784f9c - 204 null null 12.3148ms
2025-10-13 22:19:23.921 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/1decd369-2728-4c65-8a5b-61444d784f9c - 204 null null 12.8712ms
2025-10-13 22:19:23.922 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-13 22:19:23.922 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:19:23.923 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:19:23.923 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:19:23.935 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:23.941 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:19:23.941 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:19:23.944 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:19:23.944 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:19:23.948 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:19:23.950 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 30.7325ms
2025-10-13 22:19:23.951 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 22:19:23.953 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:19:23.955 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:23'.
2025-10-13 22:19:23.958 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 20.054ms
2025-10-13 22:19:23.959 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:19:23.960 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:19:23.963 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:23.965 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 21.533ms
2025-10-13 22:19:23.966 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:19:23.966 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-13 22:19:23.968 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:19:23.970 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:23.971 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 95.3405ms
2025-10-13 22:19:23.972 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:19:23.973 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:19:23.976 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:23.977 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-13 22:19:23.979 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 109.6474ms
2025-10-13 22:19:23.986 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:19:23.986 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 111.3097ms
2025-10-13 22:19:23.987 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:19:23.989 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/1decd369-2728-4c65-8a5b-61444d784f9c - 401 0 null 66.8535ms
2025-10-13 22:19:23.989 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:19:23.990 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-13 22:19:23.992 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:19:23.995 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - null null
2025-10-13 22:19:23.996 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:23'.
2025-10-13 22:19:24.000 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:23'.
2025-10-13 22:19:24.002 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:24.005 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:19:24.008 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:24.010 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:19:24.011 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:19:24.012 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:24'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:19:24.013 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 21.5098ms
2025-10-13 22:19:24.013 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 204 null null 18.2185ms
2025-10-13 22:19:24.015 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:19:24.017 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:19:24.017 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-13 22:19:24.018 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:24'.
2025-10-13 22:19:24.020 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:19:24.026 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:19:24.028 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:19:24.030 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:24.031 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-13 22:19:24.032 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 80.9107ms
2025-10-13 22:19:24.035 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:19:24.037 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:19:24.038 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:24'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:19:24.039 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-13 22:19:24.044 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 19.1125ms
2025-10-13 22:19:24.045 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:19:24.045 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 18.4682ms
2025-10-13 22:19:24.046 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:19:24.047 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:24'.
2025-10-13 22:19:24.048 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/1decd369-2728-4c65-8a5b-61444d784f9c - 401 0 null 58.5457ms
2025-10-13 22:19:24.050 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:19:24.052 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:24.054 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:19:24.057 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:24.058 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-13 22:19:24.064 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 98.8504ms
2025-10-13 22:19:24.066 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:24'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:19:24.067 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 107.733ms
2025-10-13 22:19:24.068 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:24'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:19:24.069 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-13 22:19:24.076 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:24'.
2025-10-13 22:19:24.082 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:24'.
2025-10-13 22:19:24.083 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 401 0 null 65.9832ms
2025-10-13 22:19:24.084 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-13 22:19:24.084 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:19:24.086 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:19:24.092 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:24.093 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:19:24.094 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:19:24.095 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:24'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:19:24.098 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:19:24.100 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:19:24.101 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:24'.
2025-10-13 22:19:24.104 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:19:24.107 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:19:24.108 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-13 22:19:24.110 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.8394ms
2025-10-13 22:19:24.110 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:19:24.111 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.2139ms
2025-10-13 22:19:24.112 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:19:24.113 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-13 22:19:24.114 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:19:24.116 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:24.117 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:19:24.119 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:24.119 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 401 0 null 35.3802ms
2025-10-13 22:19:24.121 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 75.7297ms
2025-10-13 22:19:24.122 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:24'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:19:24.123 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 77.2279ms
2025-10-13 22:19:24.124 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:24'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:19:24.133 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:24'.
2025-10-13 22:19:24.138 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:24'.
2025-10-13 22:19:24.139 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:19:24.140 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:19:24.141 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:19:24.142 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:19:24.145 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:19:24.146 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:19:24.148 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:19:24.150 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:19:24.152 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.8903ms
2025-10-13 22:19:24.153 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 7.3297ms
2025-10-13 22:19:24.154 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:19:24.155 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:19:24.156 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 45.5324ms
2025-10-13 22:19:24.157 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 45.0397ms
2025-10-13 22:19:33.418 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:19:33.418 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:19:33.421 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:33.424 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:33.425 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 7.8443ms
2025-10-13 22:19:33.426 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 8.8014ms
2025-10-13 22:19:33.428 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:19:33.428 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:19:33.439 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:33.441 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:33.442 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:33'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:19:33.443 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:33'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:19:33.445 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:33'.
2025-10-13 22:19:33.447 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:33'.
2025-10-13 22:19:33.448 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:19:33.449 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:19:33.450 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:19:33.452 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:19:33.455 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:19:33.457 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:19:33.459 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:19:33.462 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:19:33.463 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.0427ms
2025-10-13 22:19:33.465 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.1648ms
2025-10-13 22:19:33.466 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:19:33.467 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:19:33.468 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 40.3886ms
2025-10-13 22:19:33.470 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 41.3193ms
2025-10-13 22:19:55.147 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:19:55.147 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:19:55.148 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 22:19:55.151 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:55.154 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:55.158 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:55.159 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 11.5996ms
2025-10-13 22:19:55.160 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 13.0478ms
2025-10-13 22:19:55.162 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 14.3509ms
2025-10-13 22:19:55.165 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:19:55.166 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:19:55.166 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 22:19:55.178 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:55.181 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:55.184 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:55.186 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:55'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:19:55.187 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:55'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:19:55.187 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:19:55.189 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:55'.
2025-10-13 22:19:55.191 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:55'.
2025-10-13 22:19:55.192 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:19:55.193 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:19:55.195 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:19:55.198 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:19:55.199 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:19:55.200 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:19:55.204 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:19:55.205 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:19:55.209 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:19:55.210 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:19:55.211 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 14.07ms
2025-10-13 22:19:55.214 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:19:55.216 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 13.3551ms
2025-10-13 22:19:55.217 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:19:55.217 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:19:55.219 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.4428ms
2025-10-13 22:19:55.221 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:19:55.221 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:19:55.223 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 56.319ms
2025-10-13 22:19:55.226 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:55.227 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:19:55.230 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:55.232 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 67.2014ms
2025-10-13 22:19:55.237 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:55'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:19:55.239 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 72.7717ms
2025-10-13 22:19:55.240 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:55'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:19:55.246 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:55'.
2025-10-13 22:19:55.246 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/1decd369-2728-4c65-8a5b-61444d784f9c - null null
2025-10-13 22:19:55.253 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:55'.
2025-10-13 22:19:55.254 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:19:55.257 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:55.259 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:19:55.260 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:19:55.261 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/1decd369-2728-4c65-8a5b-61444d784f9c - 204 null null 15.3619ms
2025-10-13 22:19:55.263 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:19:55.265 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-13 22:19:55.267 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:19:55.273 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:19:55.275 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:55.278 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:19:55.281 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:19:55.281 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:55'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:19:55.283 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 17.6928ms
2025-10-13 22:19:55.284 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.6136ms
2025-10-13 22:19:55.286 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:55'.
2025-10-13 22:19:55.288 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:19:55.289 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:19:55.291 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-13 22:19:55.293 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 75.5394ms
2025-10-13 22:19:55.294 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 73.8637ms
2025-10-13 22:19:55.296 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-13 22:19:55.305 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/1decd369-2728-4c65-8a5b-61444d784f9c - 401 0 null 40.0422ms
2025-10-13 22:19:55.317 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - null null
2025-10-13 22:19:55.320 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:55.321 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 204 null null 4.7482ms
2025-10-13 22:19:55.323 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - application/json null
2025-10-13 22:19:55.329 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:19:55.330 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:55'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-13 22:19:55.332 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '13.10.2025 18:19:55'.
2025-10-13 22:19:55.333 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-13 22:19:55.334 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-13 22:19:55.336 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/1decd369-2728-4c65-8a5b-61444d784f9c - 401 0 null 12.6039ms
2025-10-13 22:20:12.536 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - null null
2025-10-13 22:20:12.541 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:20:12.542 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - 204 null null 5.8787ms
2025-10-13 22:20:12.544 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7100/api/Auth/login - application/json 48
2025-10-13 22:20:12.552 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:20:12.554 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:20:12.563 +04:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(GreenZone.Contracts.Dtos.LogInDto) on controller GreenZone.API.Controllers.AuthController (GreenZone.API).
2025-10-13 22:20:12.612 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-10-13 22:20:12.713 +04:00 [INF] User obnovlenniy logged in successfully.
2025-10-13 22:20:12.735 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-10-13 22:20:12.742 +04:00 [INF] Executed action GreenZone.API.Controllers.AuthController.Login (GreenZone.API) in 175.5937ms
2025-10-13 22:20:12.744 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:20:12.747 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentNullException: Value cannot be null. (Parameter 's')
   at System.ArgumentNullException.Throw(String paramName)
   at System.Text.UTF8Encoding.UTF8EncodingSealed.GetBytes(String s)
   at GreenZone.Application.Service.AuthService.GenerateJwtToken(ApplicationUser user, IList`1 roles) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\AuthService.cs:line 176
   at GreenZone.Application.Service.AuthService.LogInAsync(LogInDto logInDto) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\AuthService.cs:line 80
   at GreenZone.API.Controllers.AuthController.Login(LogInDto logInDto) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\AuthController.cs:line 39
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-13 22:20:12.767 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7100/api/Auth/login - 500 null text/plain; charset=utf-8 223.285ms
2025-10-13 22:20:24.068 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 22:20:24.073 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:20:24.074 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 5.4846ms
2025-10-13 22:20:24.076 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 22:20:24.082 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:20:24.083 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:20:24.085 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:20:24.093 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:20:24.097 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:20:24.099 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 10.4284ms
2025-10-13 22:20:24.101 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:20:24.103 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 26.5059ms
2025-10-13 22:20:32.756 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - null null
2025-10-13 22:20:32.760 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:20:32.761 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - 204 null null 5.7724ms
2025-10-13 22:20:32.763 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7100/api/Auth/login - application/json 48
2025-10-13 22:20:32.768 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:20:32.770 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:20:32.771 +04:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(GreenZone.Contracts.Dtos.LogInDto) on controller GreenZone.API.Controllers.AuthController (GreenZone.API).
2025-10-13 22:20:32.783 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-10-13 22:20:32.860 +04:00 [INF] User obnovlenniy logged in successfully.
2025-10-13 22:20:32.870 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-10-13 22:20:32.876 +04:00 [INF] Executed action GreenZone.API.Controllers.AuthController.Login (GreenZone.API) in 102.7554ms
2025-10-13 22:20:32.878 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:20:32.880 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentNullException: Value cannot be null. (Parameter 's')
   at System.ArgumentNullException.Throw(String paramName)
   at System.Text.UTF8Encoding.UTF8EncodingSealed.GetBytes(String s)
   at GreenZone.Application.Service.AuthService.GenerateJwtToken(ApplicationUser user, IList`1 roles) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\AuthService.cs:line 176
   at GreenZone.Application.Service.AuthService.LogInAsync(LogInDto logInDto) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\AuthService.cs:line 80
   at GreenZone.API.Controllers.AuthController.Login(LogInDto logInDto) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\AuthController.cs:line 39
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-13 22:20:32.888 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7100/api/Auth/login - 500 null text/plain; charset=utf-8 125.0195ms
2025-10-13 22:22:04.688 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 22:22:04.691 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 22:22:04.693 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:22:04.698 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:22:04.699 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 11.2865ms
2025-10-13 22:22:04.700 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 8.644ms
2025-10-13 22:22:04.705 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 22:22:04.713 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:22:04.715 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:22:04.717 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:22:04.736 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:22:04.741 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:22:04.744 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 23.635ms
2025-10-13 22:22:04.746 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:22:04.747 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 22:22:04.748 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 42.7743ms
2025-10-13 22:22:04.752 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:22:04.758 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:22:04.760 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:22:04.767 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:22:04.770 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:22:04.772 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.259ms
2025-10-13 22:22:04.774 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:22:04.776 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 28.6215ms
2025-10-13 22:22:22.388 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 22:22:22.392 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:22:22.393 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 4.9053ms
2025-10-13 22:22:22.395 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 22:22:22.400 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:22:22.401 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:22:22.403 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:22:22.407 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:22:22.410 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:22:22.411 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 5.868ms
2025-10-13 22:22:22.413 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:22:22.414 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 19.2226ms
2025-10-13 22:23:51.475 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Auth/register - null null
2025-10-13 22:23:51.478 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:23:51.479 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Auth/register - 204 null null 4.2558ms
2025-10-13 22:23:51.481 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7100/api/Auth/register - application/json 216
2025-10-13 22:23:51.487 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:23:51.488 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.AuthController.Register (GreenZone.API)'
2025-10-13 22:23:51.493 +04:00 [INF] Route matched with {action = "Register", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(GreenZone.Contracts.Dtos.RegisterDto) on controller GreenZone.API.Controllers.AuthController (GreenZone.API).
2025-10-13 22:23:51.587 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-10-13 22:23:51.669 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 256), @p4='?' (DbType = Boolean), @p5='?' (Size = 100), @p6='?' (Size = 100), @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTimeOffset), @p9='?' (Size = 256), @p10='?' (Size = 256), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (DbType = Boolean), @p14='?' (Size = 4000), @p15='?' (DbType = Boolean), @p16='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AspNetUsers] ([Id], [AccessFailedCount], [ConcurrencyStamp], [Email], [EmailConfirmed], [FirstName], [LastName], [LockoutEnabled], [LockoutEnd], [NormalizedEmail], [NormalizedUserName], [PasswordHash], [PhoneNumber], [PhoneNumberConfirmed], [SecurityStamp], [TwoFactorEnabled], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2025-10-13 22:23:53.729 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-10-13 22:23:53.744 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450), @__p_1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[UserId], [a].[RoleId]
FROM [AspNetUserRoles] AS [a]
WHERE [a].[UserId] = @__p_0 AND [a].[RoleId] = @__p_1
2025-10-13 22:23:53.749 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-10-13 22:23:53.760 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-10-13 22:23:53.807 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 450), @p18='?' (Size = 450), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p19='?' (Size = 4000), @p4='?' (Size = 256), @p5='?' (DbType = Boolean), @p6='?' (Size = 100), @p7='?' (Size = 100), @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTimeOffset), @p10='?' (Size = 256), @p11='?' (Size = 256), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (DbType = Boolean), @p15='?' (Size = 4000), @p16='?' (DbType = Boolean), @p17='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AspNetUserRoles] ([RoleId], [UserId])
VALUES (@p0, @p1);
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p2, [ConcurrencyStamp] = @p3, [Email] = @p4, [EmailConfirmed] = @p5, [FirstName] = @p6, [LastName] = @p7, [LockoutEnabled] = @p8, [LockoutEnd] = @p9, [NormalizedEmail] = @p10, [NormalizedUserName] = @p11, [PasswordHash] = @p12, [PhoneNumber] = @p13, [PhoneNumberConfirmed] = @p14, [SecurityStamp] = @p15, [TwoFactorEnabled] = @p16, [UserName] = @p17
OUTPUT 1
WHERE [Id] = @p18 AND [ConcurrencyStamp] = @p19;
2025-10-13 22:23:53.850 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (Size = 100), @p3='?' (DbType = Boolean), @p4='?' (DbType = DateTime2), @p5='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Customers] ([Id], [CreatedAt], [IdentityCard], [IsDeleted], [UpdatedAt], [UserId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2025-10-13 22:23:53.874 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@p4='?' (DbType = Guid), @p0='?' (DbType = DateTime2), @p1='?' (DbType = Guid), @p2='?' (DbType = Boolean), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Baskets] SET [CreatedAt] = @p0, [CustomerId] = @p1, [IsDeleted] = @p2, [UpdatedAt] = @p3
OUTPUT 1
WHERE [Id] = @p4;
2025-10-13 22:23:53.882 +04:00 [INF] Executed action GreenZone.API.Controllers.AuthController.Register (GreenZone.API) in 2387.1603ms
2025-10-13 22:23:53.883 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.AuthController.Register (GreenZone.API)'
2025-10-13 22:23:53.885 +04:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException: The database operation was expected to affect 1 row(s), but actually affected 0 row(s); data may have been modified or deleted since entities were loaded. See https://go.microsoft.com/fwlink/?LinkId=527962 for information on understanding and handling optimistic concurrency exceptions.
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ThrowAggregateUpdateConcurrencyExceptionAsync(RelationalDataReader reader, Int32 commandIndex, Int32 expectedRowsAffected, Int32 rowsAffected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetWithRowsAffectedOnlyAsync(Int32 commandIndex, RelationalDataReader reader, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at GreenZone.Persistance.Repository.UnitOfWork.SaveChangesAsync() in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Persistance\Repository\UnitOfWork.cs:line 22
   at GreenZone.Application.Service.AuthService.RegisterAsync(RegisterDto registerDto) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\AuthService.cs:line 163
   at GreenZone.API.Controllers.AuthController.Register(RegisterDto registerDto) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\AuthController.cs:line 54
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-13 22:23:53.895 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7100/api/Auth/register - 500 null text/plain; charset=utf-8 2413.1723ms
2025-10-13 22:24:21.161 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - null null
2025-10-13 22:24:21.165 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:24:21.166 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - 204 null null 4.7065ms
2025-10-13 22:24:21.167 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7100/api/Auth/login - application/json 42
2025-10-13 22:24:21.173 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:24:21.174 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:24:21.175 +04:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(GreenZone.Contracts.Dtos.LogInDto) on controller GreenZone.API.Controllers.AuthController (GreenZone.API).
2025-10-13 22:24:21.179 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-10-13 22:24:21.182 +04:00 [INF] Executed action GreenZone.API.Controllers.AuthController.Login (GreenZone.API) in 4.774ms
2025-10-13 22:24:21.184 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:24:21.186 +04:00 [ERR] An unhandled exception has occurred while executing the request.
GreenZone.Application.Exceptions.UnAuthorizedException: Please confirm your email.
   at GreenZone.Application.Service.AuthService.LogInAsync(LogInDto logInDto) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\AuthService.cs:line 63
   at GreenZone.API.Controllers.AuthController.Login(LogInDto logInDto) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\AuthController.cs:line 39
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-13 22:24:21.192 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7100/api/Auth/login - 500 null text/plain; charset=utf-8 24.9449ms
2025-10-13 22:24:27.004 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/auth/confirm-email?userId=ad7b0679-20d4-45d6-b753-16f0311debbb&code=Q2ZESjhPSnhIVjZ1emlaTHFRbk0rZkFHNXVNY2ExdmtYV0V6a0puSHArb3RhVVhISzU5d1I3eDlCNkJtclRxS3E5ZmQxRnpzNEcxRzI2Qkk2MnYwVFpiNlFJeEdaSms2Rm9VN284bVlGQURacHh5L3gwcVFRK2NSQU5rK1JNeVdXRitFTkNUemtza1Rrb3ZKNDR3WTVlUExKYnJiUDJSVmVLVTNPZEdSYTVqVFpwUkpkdTZqYjNxMVJjSnhkTWZoSUZPNVJ6OE90VW0wZUJZcEYxRUpMd0pyOFc5SDZwRUdCcFJwdGpQcE91UlFHUWJ3eU1VK3o5akY1ZEl0UCs1d3QwY0dSdz09 - null null
2025-10-13 22:24:27.013 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.AuthController.ConfirmEmail (GreenZone.API)'
2025-10-13 22:24:27.019 +04:00 [INF] Route matched with {action = "ConfirmEmail", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ConfirmEmail(System.String, System.String) on controller GreenZone.API.Controllers.AuthController (GreenZone.API).
2025-10-13 22:24:27.033 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-10-13 22:24:27.040 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-10-13 22:24:27.051 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[@p16='?' (Size = 450), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p17='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (Size = 100), @p5='?' (Size = 100), @p6='?' (DbType = Boolean), @p7='?' (DbType = DateTimeOffset), @p8='?' (Size = 256), @p9='?' (Size = 256), @p10='?' (Size = 4000), @p11='?' (Size = 4000), @p12='?' (DbType = Boolean), @p13='?' (Size = 4000), @p14='?' (DbType = Boolean), @p15='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [FirstName] = @p4, [LastName] = @p5, [LockoutEnabled] = @p6, [LockoutEnd] = @p7, [NormalizedEmail] = @p8, [NormalizedUserName] = @p9, [PasswordHash] = @p10, [PhoneNumber] = @p11, [PhoneNumberConfirmed] = @p12, [SecurityStamp] = @p13, [TwoFactorEnabled] = @p14, [UserName] = @p15
OUTPUT 1
WHERE [Id] = @p16 AND [ConcurrencyStamp] = @p17;
2025-10-13 22:24:27.057 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-10-13 22:24:27.062 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p16='?' (Size = 450), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p17='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (Size = 100), @p5='?' (Size = 100), @p6='?' (DbType = Boolean), @p7='?' (DbType = DateTimeOffset), @p8='?' (Size = 256), @p9='?' (Size = 256), @p10='?' (Size = 4000), @p11='?' (Size = 4000), @p12='?' (DbType = Boolean), @p13='?' (Size = 4000), @p14='?' (DbType = Boolean), @p15='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [FirstName] = @p4, [LastName] = @p5, [LockoutEnabled] = @p6, [LockoutEnd] = @p7, [NormalizedEmail] = @p8, [NormalizedUserName] = @p9, [PasswordHash] = @p10, [PhoneNumber] = @p11, [PhoneNumberConfirmed] = @p12, [SecurityStamp] = @p13, [TwoFactorEnabled] = @p14, [UserName] = @p15
OUTPUT 1
WHERE [Id] = @p16 AND [ConcurrencyStamp] = @p17;
2025-10-13 22:24:27.069 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2025-10-13 22:24:27.071 +04:00 [INF] Executed action GreenZone.API.Controllers.AuthController.ConfirmEmail (GreenZone.API) in 49.7201ms
2025-10-13 22:24:27.073 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.AuthController.ConfirmEmail (GreenZone.API)'
2025-10-13 22:24:27.075 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/auth/confirm-email?userId=ad7b0679-20d4-45d6-b753-16f0311debbb&code=Q2ZESjhPSnhIVjZ1emlaTHFRbk0rZkFHNXVNY2ExdmtYV0V6a0puSHArb3RhVVhISzU5d1I3eDlCNkJtclRxS3E5ZmQxRnpzNEcxRzI2Qkk2MnYwVFpiNlFJeEdaSms2Rm9VN284bVlGQURacHh5L3gwcVFRK2NSQU5rK1JNeVdXRitFTkNUemtza1Rrb3ZKNDR3WTVlUExKYnJiUDJSVmVLVTNPZEdSYTVqVFpwUkpkdTZqYjNxMVJjSnhkTWZoSUZPNVJ6OE90VW0wZUJZcEYxRUpMd0pyOFc5SDZwRUdCcFJwdGpQcE91UlFHUWJ3eU1VK3o5akY1ZEl0UCs1d3QwY0dSdz09 - 200 null text/plain; charset=utf-8 70.7121ms
2025-10-13 22:24:31.077 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - null null
2025-10-13 22:24:31.082 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:24:31.083 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - 204 null null 6.1475ms
2025-10-13 22:24:31.084 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7100/api/Auth/login - application/json 42
2025-10-13 22:24:31.089 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:24:31.090 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:24:31.091 +04:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(GreenZone.Contracts.Dtos.LogInDto) on controller GreenZone.API.Controllers.AuthController (GreenZone.API).
2025-10-13 22:24:31.096 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-10-13 22:24:31.148 +04:00 [INF] User Oasis logged in successfully.
2025-10-13 22:24:31.154 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-10-13 22:24:31.157 +04:00 [INF] Executed action GreenZone.API.Controllers.AuthController.Login (GreenZone.API) in 63.1637ms
2025-10-13 22:24:31.158 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:24:31.159 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentNullException: Value cannot be null. (Parameter 's')
   at System.ArgumentNullException.Throw(String paramName)
   at System.Text.UTF8Encoding.UTF8EncodingSealed.GetBytes(String s)
   at GreenZone.Application.Service.AuthService.GenerateJwtToken(ApplicationUser user, IList`1 roles) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\AuthService.cs:line 176
   at GreenZone.Application.Service.AuthService.LogInAsync(LogInDto logInDto) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\AuthService.cs:line 80
   at GreenZone.API.Controllers.AuthController.Login(LogInDto logInDto) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\AuthController.cs:line 39
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-13 22:24:31.164 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7100/api/Auth/login - 500 null text/plain; charset=utf-8 79.6966ms
2025-10-13 22:24:33.183 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 22:24:33.187 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:24:33.188 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 5.8585ms
2025-10-13 22:24:33.191 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 22:24:33.196 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:24:33.196 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:24:33.198 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:24:33.205 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:24:33.209 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:24:33.211 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 10.2436ms
2025-10-13 22:24:33.212 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:24:33.214 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 23.3573ms
2025-10-13 22:24:50.217 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - null null
2025-10-13 22:24:50.221 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:24:50.223 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - 204 null null 5.8812ms
2025-10-13 22:24:50.224 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7100/api/Auth/login - application/json 42
2025-10-13 22:24:50.231 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:24:50.232 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:24:50.234 +04:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(GreenZone.Contracts.Dtos.LogInDto) on controller GreenZone.API.Controllers.AuthController (GreenZone.API).
2025-10-13 22:24:50.238 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-10-13 22:24:50.310 +04:00 [INF] User Oasis logged in successfully.
2025-10-13 22:24:50.318 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-10-13 22:24:50.323 +04:00 [INF] Executed action GreenZone.API.Controllers.AuthController.Login (GreenZone.API) in 86.8207ms
2025-10-13 22:24:50.326 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:24:50.327 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentNullException: Value cannot be null. (Parameter 's')
   at System.ArgumentNullException.Throw(String paramName)
   at System.Text.UTF8Encoding.UTF8EncodingSealed.GetBytes(String s)
   at GreenZone.Application.Service.AuthService.GenerateJwtToken(ApplicationUser user, IList`1 roles) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\AuthService.cs:line 176
   at GreenZone.Application.Service.AuthService.LogInAsync(LogInDto logInDto) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\AuthService.cs:line 80
   at GreenZone.API.Controllers.AuthController.Login(LogInDto logInDto) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\AuthController.cs:line 39
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-13 22:24:50.336 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7100/api/Auth/login - 500 null text/plain; charset=utf-8 111.7001ms
2025-10-13 22:25:47.255 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - null null
2025-10-13 22:25:47.260 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:25:47.262 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - 204 null null 6.978ms
2025-10-13 22:25:47.264 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7100/api/Auth/login - application/json 42
2025-10-13 22:25:47.266 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:25:47.267 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:25:47.268 +04:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(GreenZone.Contracts.Dtos.LogInDto) on controller GreenZone.API.Controllers.AuthController (GreenZone.API).
2025-10-13 22:25:47.273 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-10-13 22:25:47.329 +04:00 [INF] User Oasis logged in successfully.
2025-10-13 22:25:47.334 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-10-13 22:25:47.337 +04:00 [INF] Executed action GreenZone.API.Controllers.AuthController.Login (GreenZone.API) in 67.9595ms
2025-10-13 22:25:47.338 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:25:47.339 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentNullException: Value cannot be null. (Parameter 's')
   at System.ArgumentNullException.Throw(String paramName)
   at System.Text.UTF8Encoding.UTF8EncodingSealed.GetBytes(String s)
   at GreenZone.Application.Service.AuthService.GenerateJwtToken(ApplicationUser user, IList`1 roles) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\AuthService.cs:line 176
   at GreenZone.Application.Service.AuthService.LogInAsync(LogInDto logInDto) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\AuthService.cs:line 80
   at GreenZone.API.Controllers.AuthController.Login(LogInDto logInDto) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\AuthController.cs:line 39
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-13 22:25:47.345 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7100/api/Auth/login - 500 null text/plain; charset=utf-8 80.8217ms
2025-10-13 22:26:02.784 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 22:26:02.789 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:26:02.790 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 5.0956ms
2025-10-13 22:26:02.792 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 22:26:02.797 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:26:02.798 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:26:02.799 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:26:02.806 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:26:02.809 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:26:02.811 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.3051ms
2025-10-13 22:26:02.812 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:26:02.813 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 21.9436ms
2025-10-13 22:26:12.661 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - null null
2025-10-13 22:26:12.665 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:26:12.665 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - 204 null null 4.6837ms
2025-10-13 22:26:12.667 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7100/api/Auth/login - application/json 42
2025-10-13 22:26:12.672 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:26:12.673 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:26:12.675 +04:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(GreenZone.Contracts.Dtos.LogInDto) on controller GreenZone.API.Controllers.AuthController (GreenZone.API).
2025-10-13 22:26:12.682 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-10-13 22:26:12.745 +04:00 [INF] User Oasis logged in successfully.
2025-10-13 22:26:12.750 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-10-13 22:26:12.755 +04:00 [INF] Executed action GreenZone.API.Controllers.AuthController.Login (GreenZone.API) in 76.7241ms
2025-10-13 22:26:12.757 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:26:12.759 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentNullException: Value cannot be null. (Parameter 's')
   at System.ArgumentNullException.Throw(String paramName)
   at System.Text.UTF8Encoding.UTF8EncodingSealed.GetBytes(String s)
   at GreenZone.Application.Service.AuthService.GenerateJwtToken(ApplicationUser user, IList`1 roles) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\AuthService.cs:line 176
   at GreenZone.Application.Service.AuthService.LogInAsync(LogInDto logInDto) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\AuthService.cs:line 80
   at GreenZone.API.Controllers.AuthController.Login(LogInDto logInDto) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\AuthController.cs:line 39
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-13 22:26:12.764 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7100/api/Auth/login - 500 null text/plain; charset=utf-8 96.7805ms
2025-10-13 22:26:44.765 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 22:26:44.769 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:26:44.770 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 5.5996ms
2025-10-13 22:26:44.771 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 22:26:44.778 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:26:44.779 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:26:44.780 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:26:44.784 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:26:44.787 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:26:44.789 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 6.483ms
2025-10-13 22:26:44.791 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:26:44.792 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 20.7103ms
2025-10-13 22:27:00.538 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - null null
2025-10-13 22:27:00.541 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:27:00.543 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - 204 null null 4.6382ms
2025-10-13 22:27:00.544 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7100/api/Auth/login - application/json 42
2025-10-13 22:27:00.548 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:27:00.549 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:27:00.550 +04:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(GreenZone.Contracts.Dtos.LogInDto) on controller GreenZone.API.Controllers.AuthController (GreenZone.API).
2025-10-13 22:27:00.556 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-10-13 22:27:00.625 +04:00 [INF] User Oasis logged in successfully.
2025-10-13 22:27:00.630 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-10-13 22:27:00.634 +04:00 [INF] Executed action GreenZone.API.Controllers.AuthController.Login (GreenZone.API) in 80.2796ms
2025-10-13 22:27:00.636 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:27:00.638 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentNullException: Value cannot be null. (Parameter 's')
   at System.ArgumentNullException.Throw(String paramName)
   at System.Text.UTF8Encoding.UTF8EncodingSealed.GetBytes(String s)
   at GreenZone.Application.Service.AuthService.GenerateJwtToken(ApplicationUser user, IList`1 roles) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\AuthService.cs:line 176
   at GreenZone.Application.Service.AuthService.LogInAsync(LogInDto logInDto) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\AuthService.cs:line 80
   at GreenZone.API.Controllers.AuthController.Login(LogInDto logInDto) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\AuthController.cs:line 39
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-13 22:27:00.644 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7100/api/Auth/login - 500 null text/plain; charset=utf-8 99.6209ms
2025-10-13 22:27:19.659 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/index.html - null null
2025-10-13 22:27:19.666 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/index.html - 200 null text/html;charset=utf-8 6.5526ms
2025-10-13 22:27:19.682 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - null null
2025-10-13 22:27:19.682 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_vs/browserLink - null null
2025-10-13 22:27:19.686 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - 200 16511 application/javascript; charset=utf-8 4.1636ms
2025-10-13 22:27:19.697 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_vs/browserLink - 200 null text/javascript; charset=UTF-8 14.8336ms
2025-10-13 22:27:19.771 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - null null
2025-10-13 22:27:19.789 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 17.2082ms
2025-10-13 22:27:37.404 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7100/api/Auth/login - application/json 51
2025-10-13 22:27:37.409 +04:00 [INF] CORS policy execution failed.
2025-10-13 22:27:37.410 +04:00 [INF] Request origin https://localhost:7100 does not have permission to access the resource.
2025-10-13 22:27:37.411 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:27:37.413 +04:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(GreenZone.Contracts.Dtos.LogInDto) on controller GreenZone.API.Controllers.AuthController (GreenZone.API).
2025-10-13 22:27:37.419 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-10-13 22:27:37.473 +04:00 [INF] User Oasis logged in successfully.
2025-10-13 22:27:37.478 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-10-13 22:27:37.480 +04:00 [INF] Executed action GreenZone.API.Controllers.AuthController.Login (GreenZone.API) in 66.2719ms
2025-10-13 22:27:37.483 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:27:37.485 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentNullException: Value cannot be null. (Parameter 's')
   at System.ArgumentNullException.Throw(String paramName)
   at System.Text.UTF8Encoding.UTF8EncodingSealed.GetBytes(String s)
   at GreenZone.Application.Service.AuthService.GenerateJwtToken(ApplicationUser user, IList`1 roles) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\AuthService.cs:line 176
   at GreenZone.Application.Service.AuthService.LogInAsync(LogInDto logInDto) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\AuthService.cs:line 80
   at GreenZone.API.Controllers.AuthController.Login(LogInDto logInDto) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\AuthController.cs:line 39
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-13 22:27:37.491 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7100/api/Auth/login - 500 null text/plain; charset=utf-8 87.1129ms
2025-10-13 22:30:11.329 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/index.html - null null
2025-10-13 22:30:11.335 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/index.html - 200 null text/html;charset=utf-8 5.8391ms
2025-10-13 22:30:11.352 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_vs/browserLink - null null
2025-10-13 22:30:11.352 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - null null
2025-10-13 22:30:11.359 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - 200 16511 application/javascript; charset=utf-8 6.5566ms
2025-10-13 22:30:11.360 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_vs/browserLink - 200 null text/javascript; charset=UTF-8 8.0545ms
2025-10-13 22:30:11.441 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - null null
2025-10-13 22:30:11.453 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 11.8389ms
2025-10-13 22:30:19.710 +04:00 [WRN] No store type was specified for the decimal property 'Quantity' on entity type 'OrderItem'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-10-13 22:30:19.944 +04:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-13 22:30:19.970 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-13 22:30:19.974 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-13 22:30:19.978 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-13 22:30:19.992 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-10-13 22:30:20.005 +04:00 [INF] No migrations were applied. The database is already up to date.
2025-10-13 22:30:20.008 +04:00 [INF] Migrations applied
2025-10-13 22:30:20.157 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-13 22:30:20.183 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-13 22:30:20.189 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-13 22:30:20.202 +04:00 [INF] User profile is available. Using 'C:\Users\ASUS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-13 22:30:20.216 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-10-13 22:30:20.243 +04:00 [INF] Admin user already exists: admin@greenzone.com
2025-10-13 22:30:20.371 +04:00 [INF] Now listening on: https://localhost:7100
2025-10-13 22:30:20.397 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-13 22:30:20.399 +04:00 [INF] Hosting environment: Development
2025-10-13 22:30:20.401 +04:00 [INF] Content root path: C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API
2025-10-13 22:30:20.461 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/index.html - null null
2025-10-13 22:30:20.542 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/index.html - 200 null text/html;charset=utf-8 81.1595ms
2025-10-13 22:30:20.559 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - null null
2025-10-13 22:30:20.559 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_vs/browserLink - null null
2025-10-13 22:30:20.565 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - 200 16511 application/javascript; charset=utf-8 5.6849ms
2025-10-13 22:30:20.580 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_vs/browserLink - 200 null text/javascript; charset=UTF-8 21.34ms
2025-10-13 22:30:20.621 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - null null
2025-10-13 22:30:20.643 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 22.9718ms
2025-10-13 22:30:34.405 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7100/api/Auth/login - application/json 51
2025-10-13 22:30:34.413 +04:00 [INF] CORS policy execution failed.
2025-10-13 22:30:34.415 +04:00 [INF] Request origin https://localhost:7100 does not have permission to access the resource.
2025-10-13 22:30:34.436 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:30:34.448 +04:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(GreenZone.Contracts.Dtos.LogInDto) on controller GreenZone.API.Controllers.AuthController (GreenZone.API).
2025-10-13 22:30:34.486 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-10-13 22:30:34.545 +04:00 [INF] User Oasis logged in successfully.
2025-10-13 22:30:34.576 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-10-13 22:30:34.585 +04:00 [INF] Executed action GreenZone.API.Controllers.AuthController.Login (GreenZone.API) in 132.8628ms
2025-10-13 22:30:34.588 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:30:34.591 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentNullException: Value cannot be null. (Parameter 's')
   at System.ArgumentNullException.Throw(String paramName)
   at System.Text.Encoding.GetBytes(String s)
   at GreenZone.Application.Service.AuthService.GenerateJwtToken(ApplicationUser user, IList`1 roles) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\AuthService.cs:line 176
   at GreenZone.Application.Service.AuthService.LogInAsync(LogInDto logInDto) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\AuthService.cs:line 80
   at GreenZone.API.Controllers.AuthController.Login(LogInDto logInDto) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\AuthController.cs:line 39
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-13 22:30:34.612 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7100/api/Auth/login - 500 null text/plain; charset=utf-8 206.936ms
2025-10-13 22:31:19.457 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - null null
2025-10-13 22:31:19.470 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-13 22:31:19.475 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-13 22:31:19.478 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - 401 0 null 21.0402ms
2025-10-13 22:31:29.754 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/9e8ebb56-615a-4abd-9194-f31fe1e28032 - null null
2025-10-13 22:31:29.761 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-13 22:31:29.764 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-13 22:31:29.765 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/9e8ebb56-615a-4abd-9194-f31fe1e28032 - 401 0 null 11.1517ms
2025-10-13 22:31:38.811 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/10cb3128-81a5-4510-b494-3acf65c5eaa0 - null null
2025-10-13 22:31:38.819 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-13 22:31:38.822 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-13 22:31:38.824 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/10cb3128-81a5-4510-b494-3acf65c5eaa0 - 401 0 null 12.6082ms
2025-10-13 22:32:00.121 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - null null
2025-10-13 22:32:00.124 +04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Customer)
2025-10-13 22:32:00.126 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-13 22:32:00.127 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - 401 0 null 6.3553ms
2025-10-13 22:34:20.182 +04:00 [WRN] No store type was specified for the decimal property 'Quantity' on entity type 'OrderItem'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-10-13 22:34:20.394 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-13 22:34:20.415 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-13 22:34:20.418 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-13 22:34:20.421 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-13 22:34:20.431 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-10-13 22:34:20.441 +04:00 [INF] No migrations were applied. The database is already up to date.
2025-10-13 22:34:20.443 +04:00 [INF] Migrations applied
2025-10-13 22:34:20.562 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-13 22:34:20.586 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-13 22:34:20.589 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-13 22:34:20.597 +04:00 [INF] User profile is available. Using 'C:\Users\ASUS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-13 22:34:20.606 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-10-13 22:34:20.631 +04:00 [INF] Admin user already exists: admin@greenzone.com
2025-10-13 22:34:20.740 +04:00 [INF] Now listening on: https://localhost:7100
2025-10-13 22:34:20.767 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-13 22:34:20.770 +04:00 [INF] Hosting environment: Development
2025-10-13 22:34:20.771 +04:00 [INF] Content root path: C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API
2025-10-13 22:34:20.918 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/index.html - null null
2025-10-13 22:34:21.010 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/index.html - 200 null text/html;charset=utf-8 91.8353ms
2025-10-13 22:34:21.030 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_vs/browserLink - null null
2025-10-13 22:34:21.030 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - null null
2025-10-13 22:34:21.040 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - 200 16511 application/javascript; charset=utf-8 9.8121ms
2025-10-13 22:34:21.055 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_vs/browserLink - 200 null text/javascript; charset=UTF-8 24.4559ms
2025-10-13 22:34:21.218 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - null null
2025-10-13 22:34:21.239 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 20.9998ms
2025-10-13 22:34:28.562 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 22:34:28.568 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:34:28.570 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 8.0858ms
2025-10-13 22:34:28.575 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 22:34:28.581 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:34:28.610 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:34:28.622 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:34:28.772 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:34:28.817 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:34:28.827 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 201.6267ms
2025-10-13 22:34:28.829 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:34:28.832 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 257.1403ms
2025-10-13 22:34:32.739 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - null null
2025-10-13 22:34:32.744 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:34:32.745 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - 204 null null 6.4207ms
2025-10-13 22:34:32.747 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7100/api/Auth/login - application/json 42
2025-10-13 22:34:32.755 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:34:32.758 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:34:32.767 +04:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(GreenZone.Contracts.Dtos.LogInDto) on controller GreenZone.API.Controllers.AuthController (GreenZone.API).
2025-10-13 22:34:32.850 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-10-13 22:34:32.908 +04:00 [INF] User Oasis logged in successfully.
2025-10-13 22:34:32.925 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-10-13 22:34:32.929 +04:00 [INF] Executed action GreenZone.API.Controllers.AuthController.Login (GreenZone.API) in 159.104ms
2025-10-13 22:34:32.930 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:34:32.931 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentNullException: Value cannot be null. (Parameter 's')
   at System.ArgumentNullException.Throw(String paramName)
   at System.Text.Encoding.GetBytes(String s)
   at GreenZone.Application.Service.AuthService.GenerateJwtToken(ApplicationUser user, IList`1 roles) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\AuthService.cs:line 176
   at GreenZone.Application.Service.AuthService.LogInAsync(LogInDto logInDto) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\AuthService.cs:line 80
   at GreenZone.API.Controllers.AuthController.Login(LogInDto logInDto) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\AuthController.cs:line 39
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-13 22:34:32.951 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7100/api/Auth/login - 500 null text/plain; charset=utf-8 203.7527ms
2025-10-13 22:36:52.674 +04:00 [WRN] No store type was specified for the decimal property 'Quantity' on entity type 'OrderItem'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-10-13 22:36:52.906 +04:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-13 22:36:52.932 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-13 22:36:52.937 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-13 22:36:52.940 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-13 22:36:52.952 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-10-13 22:36:52.966 +04:00 [INF] No migrations were applied. The database is already up to date.
2025-10-13 22:36:52.968 +04:00 [INF] Migrations applied
2025-10-13 22:36:53.133 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-13 22:36:53.163 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-13 22:36:53.167 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-13 22:36:53.183 +04:00 [INF] User profile is available. Using 'C:\Users\ASUS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-13 22:36:53.197 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-10-13 22:36:53.230 +04:00 [INF] Admin user already exists: admin@greenzone.com
2025-10-13 22:36:53.375 +04:00 [INF] Now listening on: https://localhost:7100
2025-10-13 22:36:53.403 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-13 22:36:53.405 +04:00 [INF] Hosting environment: Development
2025-10-13 22:36:53.406 +04:00 [INF] Content root path: C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API
2025-10-13 22:36:53.421 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/index.html - null null
2025-10-13 22:36:53.529 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/index.html - 200 null text/html;charset=utf-8 108.0133ms
2025-10-13 22:36:53.537 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - null null
2025-10-13 22:36:53.537 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_vs/browserLink - null null
2025-10-13 22:36:53.543 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - 200 16511 application/javascript; charset=utf-8 6.5833ms
2025-10-13 22:36:53.564 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_vs/browserLink - 200 null text/javascript; charset=UTF-8 27.3107ms
2025-10-13 22:36:53.597 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - null null
2025-10-13 22:36:53.635 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 38.0097ms
2025-10-13 22:36:59.827 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - null null
2025-10-13 22:36:59.837 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:36:59.840 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - 204 null null 12.8799ms
2025-10-13 22:36:59.845 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7100/api/Auth/login - application/json 42
2025-10-13 22:36:59.852 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:36:59.878 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:36:59.894 +04:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(GreenZone.Contracts.Dtos.LogInDto) on controller GreenZone.API.Controllers.AuthController (GreenZone.API).
2025-10-13 22:36:59.929 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-10-13 22:36:59.989 +04:00 [INF] User Oasis logged in successfully.
2025-10-13 22:37:00.026 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-10-13 22:37:00.125 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-10-13 22:37:00.155 +04:00 [INF] Executed DbCommand (19ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 22:37:00.186 +04:00 [INF] User Oasis logged in successfully.
2025-10-13 22:37:00.188 +04:00 [INF] Oasis logIn 
2025-10-13 22:37:00.192 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.AuthResultDto'.
2025-10-13 22:37:00.208 +04:00 [INF] Executed action GreenZone.API.Controllers.AuthController.Login (GreenZone.API) in 309.1096ms
2025-10-13 22:37:00.212 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:37:00.217 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7100/api/Auth/login - 200 null application/json; charset=utf-8 371.0717ms
2025-10-13 22:37:00.867 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:37:00.867 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:37:00.867 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:37:00.867 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:37:00.872 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:00.875 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:00.879 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:00.882 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:00.883 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 16.4134ms
2025-10-13 22:37:00.884 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 17.0087ms
2025-10-13 22:37:00.886 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 18.5657ms
2025-10-13 22:37:00.887 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 19.6661ms
2025-10-13 22:37:00.887 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:37:00.888 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:37:00.908 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:00.912 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:00.949 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:37:00.949 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:37:00.955 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:37:00.955 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:37:01.169 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:37:01.186 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:37:01.202 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:37:01.211 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:37:01.233 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 273.1517ms
2025-10-13 22:37:01.233 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 275.3324ms
2025-10-13 22:37:01.234 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:37:01.235 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:37:01.237 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:37:01.238 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:37:01.242 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:01.245 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:01.247 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 358.8973ms
2025-10-13 22:37:01.248 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 360.327ms
2025-10-13 22:37:01.249 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:37:01.250 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:37:01.259 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:37:01.260 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:37:01.270 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:37:01.270 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:37:01.273 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:37:01.275 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:37:01.277 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 14.5168ms
2025-10-13 22:37:01.279 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 13.9088ms
2025-10-13 22:37:01.281 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:37:01.283 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:37:01.284 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 49.9906ms
2025-10-13 22:37:01.286 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 50.9638ms
2025-10-13 22:37:03.616 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:37:03.616 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:37:03.619 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:03.622 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:03.623 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:37:03.624 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:37:03.625 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:37:03.627 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:37:03.640 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:37:03.640 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:37:03.644 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:37:03.647 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:37:03.648 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 15.7261ms
2025-10-13 22:37:03.650 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 19.8233ms
2025-10-13 22:37:03.652 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:37:03.654 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:37:03.655 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 39.5599ms
2025-10-13 22:37:03.656 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 40.7751ms
2025-10-13 22:37:07.592 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:37:07.592 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:37:07.592 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 22:37:07.596 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:07.598 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:07.603 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:07.604 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 11.9893ms
2025-10-13 22:37:07.605 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 13.4683ms
2025-10-13 22:37:07.606 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:37:07.606 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 14.0398ms
2025-10-13 22:37:07.608 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:37:07.609 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 22:37:07.609 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:07.623 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:07.626 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:07.627 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:37:07.628 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:37:07.629 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:37:07.630 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:37:07.631 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:37:07.633 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:37:07.642 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:37:07.642 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:37:07.646 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:37:07.647 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:37:07.649 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:37:07.651 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 13.6829ms
2025-10-13 22:37:07.652 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:37:07.653 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:37:07.654 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 19.7571ms
2025-10-13 22:37:07.656 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:37:07.656 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:37:07.660 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:07.661 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 22.4902ms
2025-10-13 22:37:07.663 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:37:07.664 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - null null
2025-10-13 22:37:07.667 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:07.669 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 60.5133ms
2025-10-13 22:37:07.670 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:37:07.671 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:37:07.673 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 66.9559ms
2025-10-13 22:37:07.676 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:07.678 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:37:07.683 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:37:07.684 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 75.4102ms
2025-10-13 22:37:07.689 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - 204 null null 24.9137ms
2025-10-13 22:37:07.690 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:37:07.691 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - application/json null
2025-10-13 22:37:07.694 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:37:07.703 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:37:07.705 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:07.708 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:37:07.710 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:37:07.712 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 19.8379ms
2025-10-13 22:37:07.713 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 11.9807ms
2025-10-13 22:37:07.715 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 22:37:07.715 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:37:07.717 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:37:07.720 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 67.3524ms
2025-10-13 22:37:07.721 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 65.7013ms
2025-10-13 22:37:07.722 +04:00 [INF] Route matched with {action = "GetCustomerByUserId", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerByUserId(System.String) on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-13 22:37:07.761 +04:00 [INF] Executed DbCommand (16ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 22:37:07.771 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto'.
2025-10-13 22:37:07.776 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API) in 44.5636ms
2025-10-13 22:37:07.779 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 22:37:07.782 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - 200 null application/json; charset=utf-8 91.0229ms
2025-10-13 22:37:07.785 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - null null
2025-10-13 22:37:07.790 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:07.791 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - 204 null null 5.7581ms
2025-10-13 22:37:07.792 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - application/json null
2025-10-13 22:37:07.798 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:07.801 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 22:37:07.806 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 22:37:07.836 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 22:37:07.843 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 34.7995ms
2025-10-13 22:37:07.846 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 22:37:07.848 +04:00 [ERR] An unhandled exception has occurred while executing the request.
GreenZone.Application.Exceptions.NotFoundException: Basket not found for the customer.
   at GreenZone.Application.Service.BasketService.GetBasketByCustomerAsync(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\BasketService.cs:line 75
   at GreenZone.API.Controllers.BasketController.GetBasketByCustomerId(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\BasketController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-13 22:37:07.866 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - 500 null text/plain; charset=utf-8 73.5474ms
2025-10-13 22:37:22.385 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:37:22.385 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:37:22.387 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 22:37:22.389 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:22.392 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:22.394 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:22.395 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 10.1558ms
2025-10-13 22:37:22.396 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 10.5027ms
2025-10-13 22:37:22.397 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 9.0567ms
2025-10-13 22:37:22.398 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:37:22.398 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:37:22.398 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 22:37:22.410 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:22.413 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:22.415 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:22.417 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:37:22.417 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:37:22.418 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:37:22.419 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:37:22.420 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:37:22.421 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:37:22.429 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:37:22.429 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:37:22.429 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:37:22.432 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:37:22.434 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:37:22.436 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:37:22.438 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 14.4764ms
2025-10-13 22:37:22.439 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.1149ms
2025-10-13 22:37:22.441 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 15.8757ms
2025-10-13 22:37:22.442 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:37:22.442 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:37:22.443 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:37:22.444 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:37:22.445 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:37:22.449 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:22.451 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:22.453 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 54.4426ms
2025-10-13 22:37:22.454 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 55.253ms
2025-10-13 22:37:22.455 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 56.7969ms
2025-10-13 22:37:22.456 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:37:22.457 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:37:22.458 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - null null
2025-10-13 22:37:22.469 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:37:22.471 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:37:22.474 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:22.478 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:37:22.479 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - 204 null null 21.5203ms
2025-10-13 22:37:22.480 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:37:22.482 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - application/json null
2025-10-13 22:37:22.482 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:37:22.488 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:37:22.491 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:22.492 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 16.1695ms
2025-10-13 22:37:22.494 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 15.5168ms
2025-10-13 22:37:22.496 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:37:22.496 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 22:37:22.497 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:37:22.499 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 56.6284ms
2025-10-13 22:37:22.500 +04:00 [INF] Route matched with {action = "GetCustomerByUserId", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerByUserId(System.String) on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-13 22:37:22.501 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 58.3903ms
2025-10-13 22:37:22.524 +04:00 [INF] Executed DbCommand (16ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 22:37:22.529 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto'.
2025-10-13 22:37:22.531 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API) in 24.8873ms
2025-10-13 22:37:22.532 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 22:37:22.534 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - 200 null application/json; charset=utf-8 51.8721ms
2025-10-13 22:37:22.536 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - null null
2025-10-13 22:37:22.541 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:22.542 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - 204 null null 5.776ms
2025-10-13 22:37:22.543 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - application/json null
2025-10-13 22:37:22.548 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:22.549 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 22:37:22.550 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 22:37:22.563 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 22:37:22.566 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 13.0787ms
2025-10-13 22:37:22.567 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 22:37:22.569 +04:00 [ERR] An unhandled exception has occurred while executing the request.
GreenZone.Application.Exceptions.NotFoundException: Basket not found for the customer.
   at GreenZone.Application.Service.BasketService.GetBasketByCustomerAsync(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\BasketService.cs:line 75
   at GreenZone.API.Controllers.BasketController.GetBasketByCustomerId(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\BasketController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-13 22:37:22.577 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - 500 null text/plain; charset=utf-8 33.2987ms
2025-10-13 22:37:59.417 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/ad7b0679-20d4-45d6-b753-16f0311debbb - null null
2025-10-13 22:37:59.421 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:59.422 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/ad7b0679-20d4-45d6-b753-16f0311debbb - 204 null null 5.534ms
2025-10-13 22:37:59.425 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/ad7b0679-20d4-45d6-b753-16f0311debbb - application/json null
2025-10-13 22:37:59.429 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:59.431 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 22:37:59.432 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 22:37:59.439 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 22:37:59.442 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 7.3304ms
2025-10-13 22:37:59.444 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 22:37:59.445 +04:00 [ERR] An unhandled exception has occurred while executing the request.
GreenZone.Application.Exceptions.NotFoundException: Basket not found for the customer.
   at GreenZone.Application.Service.BasketService.GetBasketByCustomerAsync(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\BasketService.cs:line 75
   at GreenZone.API.Controllers.BasketController.GetBasketByCustomerId(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\BasketController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-13 22:37:59.452 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/ad7b0679-20d4-45d6-b753-16f0311debbb - 500 null text/plain; charset=utf-8 27.955ms
2025-10-13 22:37:59.591 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - null null
2025-10-13 22:37:59.595 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:59.595 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - null null
2025-10-13 22:37:59.596 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - 204 null null 5.593ms
2025-10-13 22:37:59.598 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - application/json null
2025-10-13 22:37:59.600 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:59.609 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:59.610 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - 204 null null 14.6391ms
2025-10-13 22:37:59.611 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 22:37:59.616 +04:00 [INF] Route matched with {action = "GetCustomerByUserId", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerByUserId(System.String) on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-13 22:37:59.632 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 22:37:59.636 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto'.
2025-10-13 22:37:59.639 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API) in 20.1133ms
2025-10-13 22:37:59.640 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - application/json null
2025-10-13 22:37:59.641 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 22:37:59.645 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:59.646 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - 200 null application/json; charset=utf-8 47.8715ms
2025-10-13 22:37:59.647 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 22:37:59.654 +04:00 [INF] Route matched with {action = "GetCustomerByUserId", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerByUserId(System.String) on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-13 22:37:59.654 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - null null
2025-10-13 22:37:59.655 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - null null
2025-10-13 22:37:59.659 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:59.659 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 22:37:59.661 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:59.662 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - 204 null null 8.4282ms
2025-10-13 22:37:59.666 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - application/json null
2025-10-13 22:37:59.666 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto'.
2025-10-13 22:37:59.666 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - 204 null null 11.1687ms
2025-10-13 22:37:59.674 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:59.676 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API) in 19.4835ms
2025-10-13 22:37:59.681 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 22:37:59.682 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 22:37:59.683 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 22:37:59.685 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - 200 null application/json; charset=utf-8 44.6823ms
2025-10-13 22:37:59.690 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 22:37:59.695 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 7.7794ms
2025-10-13 22:37:59.697 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 22:37:59.699 +04:00 [ERR] An unhandled exception has occurred while executing the request.
GreenZone.Application.Exceptions.NotFoundException: Basket not found for the customer.
   at GreenZone.Application.Service.BasketService.GetBasketByCustomerAsync(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\BasketService.cs:line 75
   at GreenZone.API.Controllers.BasketController.GetBasketByCustomerId(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\BasketController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-13 22:37:59.706 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - 500 null text/plain; charset=utf-8 40.2292ms
2025-10-13 22:37:59.707 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - application/json null
2025-10-13 22:37:59.709 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:37:59.709 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:37:59.713 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:59.716 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:59.719 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:59.720 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 22:37:59.720 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 11.4543ms
2025-10-13 22:37:59.721 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 12.3593ms
2025-10-13 22:37:59.723 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 22:37:59.723 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:37:59.723 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:37:59.733 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 22:37:59.735 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:59.737 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:59.740 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 8.1475ms
2025-10-13 22:37:59.741 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:37:59.741 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:37:59.743 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 22:37:59.744 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:37:59.745 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:37:59.746 +04:00 [ERR] An unhandled exception has occurred while executing the request.
GreenZone.Application.Exceptions.NotFoundException: Basket not found for the customer.
   at GreenZone.Application.Service.BasketService.GetBasketByCustomerAsync(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\BasketService.cs:line 75
   at GreenZone.API.Controllers.BasketController.GetBasketByCustomerId(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\BasketController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-13 22:37:59.749 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:37:59.751 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:37:59.756 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - 500 null text/plain; charset=utf-8 49.1445ms
2025-10-13 22:37:59.757 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:37:59.759 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:37:59.763 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 15.5949ms
2025-10-13 22:37:59.764 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:37:59.765 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 14.6531ms
2025-10-13 22:37:59.765 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:37:59.766 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:37:59.768 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:59.769 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:37:59.772 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:37:59.773 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 50.5784ms
2025-10-13 22:37:59.775 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:37:59.776 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 52.9683ms
2025-10-13 22:37:59.777 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:37:59.781 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:37:59.787 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:37:59.792 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:37:59.794 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:37:59.796 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:37:59.798 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:37:59.799 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.4916ms
2025-10-13 22:37:59.801 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.1854ms
2025-10-13 22:37:59.803 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:37:59.805 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:37:59.806 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 41.8809ms
2025-10-13 22:37:59.807 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 41.779ms
2025-10-13 22:38:02.903 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:38:02.903 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:38:02.907 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:02.910 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:02.911 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:38:02.911 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:38:02.913 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:38:02.914 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:38:02.918 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:38:02.919 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:38:02.922 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:38:02.924 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:38:02.925 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.6732ms
2025-10-13 22:38:02.926 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.4737ms
2025-10-13 22:38:02.926 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:38:02.927 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:38:02.928 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:38:02.930 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:38:02.933 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:02.935 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:02.937 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 34.3011ms
2025-10-13 22:38:02.938 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 35.3387ms
2025-10-13 22:38:02.939 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:38:02.940 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:38:02.948 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:38:02.949 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:38:02.952 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:38:02.954 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:38:02.955 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:38:02.957 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:38:02.959 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.3828ms
2025-10-13 22:38:02.960 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:38:02.960 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 7.9731ms
2025-10-13 22:38:02.962 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:38:02.965 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:02.966 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:38:02.967 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 40.8168ms
2025-10-13 22:38:02.969 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:38:02.970 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 42.3639ms
2025-10-13 22:38:02.975 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:38:02.981 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:38:02.984 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:38:02.985 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 5.4977ms
2025-10-13 22:38:02.986 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:38:02.987 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:38:02.990 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:02.991 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 31.099ms
2025-10-13 22:38:02.992 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:38:02.996 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:38:02.999 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:38:03.002 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:38:03.003 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 5.4502ms
2025-10-13 22:38:03.005 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:38:03.007 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 20.3114ms
2025-10-13 22:38:19.465 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - null null
2025-10-13 22:38:19.465 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - null null
2025-10-13 22:38:19.469 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:19.473 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:19.474 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - 204 null null 8.6398ms
2025-10-13 22:38:19.475 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - 204 null null 9.4697ms
2025-10-13 22:38:19.476 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - application/json null
2025-10-13 22:38:19.485 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:19.486 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 22:38:19.487 +04:00 [INF] Route matched with {action = "GetCustomerByUserId", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerByUserId(System.String) on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-13 22:38:19.506 +04:00 [INF] Executed DbCommand (16ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 22:38:19.509 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto'.
2025-10-13 22:38:19.512 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API) in 22.8699ms
2025-10-13 22:38:19.513 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - application/json null
2025-10-13 22:38:19.513 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 22:38:19.516 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:19.517 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - 200 null application/json; charset=utf-8 41.4567ms
2025-10-13 22:38:19.518 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 22:38:19.520 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - null null
2025-10-13 22:38:19.520 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - null null
2025-10-13 22:38:19.522 +04:00 [INF] Route matched with {action = "GetCustomerByUserId", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerByUserId(System.String) on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-13 22:38:19.524 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:19.527 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:19.530 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - 204 null null 9.953ms
2025-10-13 22:38:19.531 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - 204 null null 10.5549ms
2025-10-13 22:38:19.532 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 22:38:19.532 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - application/json null
2025-10-13 22:38:19.540 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto'.
2025-10-13 22:38:19.543 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:19.545 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API) in 15.6801ms
2025-10-13 22:38:19.546 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 22:38:19.547 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 22:38:19.548 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 22:38:19.549 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - 200 null application/json; charset=utf-8 36.9848ms
2025-10-13 22:38:19.559 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 22:38:19.563 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 11.1008ms
2025-10-13 22:38:19.564 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 22:38:19.566 +04:00 [ERR] An unhandled exception has occurred while executing the request.
GreenZone.Application.Exceptions.NotFoundException: Basket not found for the customer.
   at GreenZone.Application.Service.BasketService.GetBasketByCustomerAsync(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\BasketService.cs:line 75
   at GreenZone.API.Controllers.BasketController.GetBasketByCustomerId(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\BasketController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-13 22:38:19.571 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - 500 null text/plain; charset=utf-8 38.4972ms
2025-10-13 22:38:19.572 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - application/json null
2025-10-13 22:38:19.574 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:38:19.574 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:38:19.577 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:19.580 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:19.582 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:19.583 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 22:38:19.584 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 10.1936ms
2025-10-13 22:38:19.585 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 10.9977ms
2025-10-13 22:38:19.586 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:38:19.586 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:38:19.586 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 22:38:19.597 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:19.600 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:19.603 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:38:19.604 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 22:38:19.604 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:38:19.605 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:38:19.608 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 5.7464ms
2025-10-13 22:38:19.609 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:38:19.613 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 22:38:19.614 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:38:19.617 +04:00 [ERR] An unhandled exception has occurred while executing the request.
GreenZone.Application.Exceptions.NotFoundException: Basket not found for the customer.
   at GreenZone.Application.Service.BasketService.GetBasketByCustomerAsync(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\BasketService.cs:line 75
   at GreenZone.API.Controllers.BasketController.GetBasketByCustomerId(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\BasketController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-13 22:38:19.620 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:38:19.620 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:38:19.627 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - 500 null text/plain; charset=utf-8 55.7646ms
2025-10-13 22:38:19.629 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:38:19.630 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 18.9222ms
2025-10-13 22:38:19.630 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:38:19.635 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 19.3252ms
2025-10-13 22:38:19.635 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:38:19.636 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:38:19.639 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:19.640 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:38:19.644 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:19.646 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 59.6362ms
2025-10-13 22:38:19.647 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:38:19.648 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 62.0617ms
2025-10-13 22:38:19.650 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:38:19.654 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:38:19.658 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:38:19.661 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:38:19.663 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:38:19.664 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:38:19.666 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:38:19.668 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 7.9854ms
2025-10-13 22:38:19.669 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.3875ms
2025-10-13 22:38:19.670 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:38:19.672 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:38:19.673 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 42.8828ms
2025-10-13 22:38:19.675 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 39.4249ms
2025-10-13 22:38:20.743 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:38:20.743 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:38:20.746 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:20.748 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:20.749 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:38:20.750 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:38:20.751 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:38:20.753 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:38:20.757 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:38:20.759 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:38:20.760 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:38:20.763 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:38:20.764 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.2561ms
2025-10-13 22:38:20.764 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:38:20.765 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 7.4167ms
2025-10-13 22:38:20.765 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:38:20.766 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:38:20.770 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:20.770 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:38:20.773 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:20.775 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 32.0702ms
2025-10-13 22:38:20.776 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:38:20.777 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 33.9431ms
2025-10-13 22:38:20.778 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:38:20.782 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:38:20.786 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:38:20.790 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:38:20.791 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:38:20.792 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:38:20.795 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:38:20.796 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.597ms
2025-10-13 22:38:20.797 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:38:20.799 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.981ms
2025-10-13 22:38:20.800 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:38:20.803 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:20.804 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:38:20.805 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 40.5433ms
2025-10-13 22:38:20.806 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:38:20.807 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 41.507ms
2025-10-13 22:38:20.812 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:38:20.820 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:38:20.823 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:38:20.826 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 6.6742ms
2025-10-13 22:38:20.827 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:38:20.827 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:38:20.830 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:20.832 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 34.27ms
2025-10-13 22:38:20.833 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:38:20.838 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:38:20.842 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:38:20.845 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:38:20.847 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 6.5328ms
2025-10-13 22:38:20.848 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:38:20.849 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 22.7805ms
2025-10-13 22:38:29.402 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - null null
2025-10-13 22:38:29.407 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:29.408 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - 204 null null 5.9755ms
2025-10-13 22:38:29.410 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - application/json null
2025-10-13 22:38:29.414 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:29.415 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 22:38:29.417 +04:00 [INF] Route matched with {action = "GetCustomerByUserId", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerByUserId(System.String) on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-13 22:38:29.422 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 22:38:29.425 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto'.
2025-10-13 22:38:29.426 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API) in 7.1399ms
2025-10-13 22:38:29.428 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 22:38:29.429 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - 200 null application/json; charset=utf-8 18.7867ms
2025-10-13 22:38:29.431 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271/items - null null
2025-10-13 22:38:29.433 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:29.434 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271/items - 204 null null 2.945ms
2025-10-13 22:38:29.436 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271/items - application/json 115
2025-10-13 22:38:29.440 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:29.442 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.AddItemsToBasket (GreenZone.API)'
2025-10-13 22:38:29.447 +04:00 [INF] Route matched with {action = "AddItemsToBasket", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddItemsToBasket(System.Guid, GreenZone.Contracts.Dtos.BasketItemsDtos.BasketItemsCreateDto) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 22:38:29.476 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 22:38:29.481 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.AddItemsToBasket (GreenZone.API) in 31.6402ms
2025-10-13 22:38:29.482 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.AddItemsToBasket (GreenZone.API)'
2025-10-13 22:38:29.483 +04:00 [ERR] An unhandled exception has occurred while executing the request.
GreenZone.Application.Exceptions.NotFoundException: Basket not found for the customer.
   at GreenZone.Application.Service.BasketService.AddItemstoBasketAsync(Guid customerId, BasketItemsCreateDto basketItemsCreateDto) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\BasketService.cs:line 36
   at GreenZone.API.Controllers.BasketController.AddItemsToBasket(Guid customerId, BasketItemsCreateDto basketItemsCreateDto) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\BasketController.cs:line 35
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-13 22:38:29.488 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271/items - 500 null text/plain; charset=utf-8 52.9152ms
2025-10-13 22:38:29.491 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - null null
2025-10-13 22:38:29.493 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:29.494 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - 204 null null 2.8457ms
2025-10-13 22:38:29.495 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - application/json null
2025-10-13 22:38:29.498 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:29.500 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 22:38:29.500 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 22:38:29.503 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 22:38:29.505 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 3.4406ms
2025-10-13 22:38:29.506 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 22:38:29.508 +04:00 [ERR] An unhandled exception has occurred while executing the request.
GreenZone.Application.Exceptions.NotFoundException: Basket not found for the customer.
   at GreenZone.Application.Service.BasketService.GetBasketByCustomerAsync(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\BasketService.cs:line 75
   at GreenZone.API.Controllers.BasketController.GetBasketByCustomerId(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\BasketController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-13 22:38:29.512 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - 500 null text/plain; charset=utf-8 17.2069ms
2025-10-13 22:38:30.256 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/ad7b0679-20d4-45d6-b753-16f0311debbb - null null
2025-10-13 22:38:30.261 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:30.262 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/ad7b0679-20d4-45d6-b753-16f0311debbb - 204 null null 6.2534ms
2025-10-13 22:38:30.263 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/ad7b0679-20d4-45d6-b753-16f0311debbb - application/json null
2025-10-13 22:38:30.270 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:30.271 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 22:38:30.273 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 22:38:30.277 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 22:38:30.280 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 4.7593ms
2025-10-13 22:38:30.281 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 22:38:30.282 +04:00 [ERR] An unhandled exception has occurred while executing the request.
GreenZone.Application.Exceptions.NotFoundException: Basket not found for the customer.
   at GreenZone.Application.Service.BasketService.GetBasketByCustomerAsync(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\BasketService.cs:line 75
   at GreenZone.API.Controllers.BasketController.GetBasketByCustomerId(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\BasketController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-13 22:38:30.286 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/ad7b0679-20d4-45d6-b753-16f0311debbb - 500 null text/plain; charset=utf-8 22.5193ms
2025-10-13 22:38:30.324 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - application/json null
2025-10-13 22:38:30.328 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:30.329 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 22:38:30.330 +04:00 [INF] Route matched with {action = "GetCustomerByUserId", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerByUserId(System.String) on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-13 22:38:30.333 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 22:38:30.336 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto'.
2025-10-13 22:38:30.338 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API) in 6.6049ms
2025-10-13 22:38:30.339 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - application/json null
2025-10-13 22:38:30.340 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 22:38:30.342 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:30.343 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - 200 null application/json; charset=utf-8 19.0151ms
2025-10-13 22:38:30.344 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 22:38:30.346 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - application/json null
2025-10-13 22:38:30.348 +04:00 [INF] Route matched with {action = "GetCustomerByUserId", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerByUserId(System.String) on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-13 22:38:30.351 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:30.354 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 22:38:30.354 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 22:38:30.355 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 22:38:30.357 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto'.
2025-10-13 22:38:30.360 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API) in 7.7258ms
2025-10-13 22:38:30.361 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 22:38:30.362 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 22:38:30.364 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 5.1683ms
2025-10-13 22:38:30.365 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - 200 null application/json; charset=utf-8 26.4234ms
2025-10-13 22:38:30.367 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 22:38:30.372 +04:00 [ERR] An unhandled exception has occurred while executing the request.
GreenZone.Application.Exceptions.NotFoundException: Basket not found for the customer.
   at GreenZone.Application.Service.BasketService.GetBasketByCustomerAsync(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\BasketService.cs:line 75
   at GreenZone.API.Controllers.BasketController.GetBasketByCustomerId(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\BasketController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-13 22:38:30.377 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - 500 null text/plain; charset=utf-8 30.8369ms
2025-10-13 22:38:30.377 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - application/json null
2025-10-13 22:38:30.380 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:38:30.380 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:38:30.383 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:30.386 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:30.389 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:30.389 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 22:38:30.390 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 10.4243ms
2025-10-13 22:38:30.391 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 10.9811ms
2025-10-13 22:38:30.392 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 22:38:30.392 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:38:30.392 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:38:30.403 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 22:38:30.405 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:30.409 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:30.413 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 11.1533ms
2025-10-13 22:38:30.414 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:38:30.415 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:38:30.416 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 22:38:30.418 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:38:30.419 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:38:30.421 +04:00 [ERR] An unhandled exception has occurred while executing the request.
GreenZone.Application.Exceptions.NotFoundException: Basket not found for the customer.
   at GreenZone.Application.Service.BasketService.GetBasketByCustomerAsync(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\BasketService.cs:line 75
   at GreenZone.API.Controllers.BasketController.GetBasketByCustomerId(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\BasketController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-13 22:38:30.425 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:38:30.427 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:38:30.432 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - 500 null text/plain; charset=utf-8 54.9906ms
2025-10-13 22:38:30.436 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:38:30.438 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:38:30.445 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 22.1196ms
2025-10-13 22:38:30.446 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:38:30.447 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 21.5078ms
2025-10-13 22:38:30.448 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:38:30.448 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:38:30.452 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:30.453 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:38:30.457 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:30.458 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 66.084ms
2025-10-13 22:38:30.459 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:38:30.460 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 68.195ms
2025-10-13 22:38:30.462 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:38:30.468 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:38:30.473 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:38:30.477 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:38:30.479 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:38:30.481 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:38:30.484 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:38:30.486 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.2349ms
2025-10-13 22:38:30.487 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.3573ms
2025-10-13 22:38:30.489 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:38:30.490 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:38:30.492 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 45.0945ms
2025-10-13 22:38:30.493 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 44.9642ms
2025-10-13 22:38:32.490 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:38:32.491 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:38:32.494 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:32.496 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:32.497 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:38:32.498 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:38:32.499 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:38:32.501 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:38:32.505 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:38:32.506 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:38:32.507 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:38:32.509 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:38:32.511 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.0213ms
2025-10-13 22:38:32.512 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:38:32.512 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.21ms
2025-10-13 22:38:32.513 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:38:32.514 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:38:32.516 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:32.518 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:38:32.520 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:32.522 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 31.6175ms
2025-10-13 22:38:32.523 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:38:32.524 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 32.5217ms
2025-10-13 22:38:32.525 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:38:32.528 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:38:32.531 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:38:32.533 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:38:32.534 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:38:32.535 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:38:32.538 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:38:32.539 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 6.5384ms
2025-10-13 22:38:32.540 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 6.1671ms
2025-10-13 22:38:32.541 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:38:32.541 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:38:32.543 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:38:32.545 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:32.546 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 34.2483ms
2025-10-13 22:38:32.547 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 34.8635ms
2025-10-13 22:38:32.548 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:38:32.557 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:38:32.560 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:38:32.562 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:38:32.563 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 4.7283ms
2025-10-13 22:38:32.564 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:38:32.565 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:38:32.567 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:32.568 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 26.9689ms
2025-10-13 22:38:32.569 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:38:32.573 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:38:32.577 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:38:32.580 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:38:32.582 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 6.5507ms
2025-10-13 22:38:32.584 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:38:32.586 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 21.8193ms
2025-10-13 22:38:40.813 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - null null
2025-10-13 22:38:40.818 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:40.819 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - 204 null null 6.2139ms
2025-10-13 22:38:40.821 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - application/json null
2025-10-13 22:38:40.825 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:40.826 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 22:38:40.828 +04:00 [INF] Route matched with {action = "GetCustomerByUserId", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerByUserId(System.String) on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-13 22:38:40.832 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 22:38:40.835 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto'.
2025-10-13 22:38:40.837 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API) in 7.2197ms
2025-10-13 22:38:40.840 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 22:38:40.841 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - 200 null application/json; charset=utf-8 19.8627ms
2025-10-13 22:38:40.845 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271/items - null null
2025-10-13 22:38:40.848 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:40.849 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271/items - 204 null null 4.2817ms
2025-10-13 22:38:40.852 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271/items - application/json 115
2025-10-13 22:38:40.857 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:40.858 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.AddItemsToBasket (GreenZone.API)'
2025-10-13 22:38:40.860 +04:00 [INF] Route matched with {action = "AddItemsToBasket", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddItemsToBasket(System.Guid, GreenZone.Contracts.Dtos.BasketItemsDtos.BasketItemsCreateDto) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 22:38:40.865 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 22:38:40.869 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.AddItemsToBasket (GreenZone.API) in 6.072ms
2025-10-13 22:38:40.870 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.AddItemsToBasket (GreenZone.API)'
2025-10-13 22:38:40.872 +04:00 [ERR] An unhandled exception has occurred while executing the request.
GreenZone.Application.Exceptions.NotFoundException: Basket not found for the customer.
   at GreenZone.Application.Service.BasketService.AddItemstoBasketAsync(Guid customerId, BasketItemsCreateDto basketItemsCreateDto) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\BasketService.cs:line 36
   at GreenZone.API.Controllers.BasketController.AddItemsToBasket(Guid customerId, BasketItemsCreateDto basketItemsCreateDto) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\BasketController.cs:line 35
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-13 22:38:40.880 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271/items - 500 null text/plain; charset=utf-8 28.0044ms
2025-10-13 22:38:40.883 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - null null
2025-10-13 22:38:40.886 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:40.887 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - 204 null null 4.5536ms
2025-10-13 22:38:40.889 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - application/json null
2025-10-13 22:38:40.894 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:38:40.895 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 22:38:40.896 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 22:38:40.901 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 22:38:40.904 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 4.6074ms
2025-10-13 22:38:40.906 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 22:38:40.907 +04:00 [ERR] An unhandled exception has occurred while executing the request.
GreenZone.Application.Exceptions.NotFoundException: Basket not found for the customer.
   at GreenZone.Application.Service.BasketService.GetBasketByCustomerAsync(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\BasketService.cs:line 75
   at GreenZone.API.Controllers.BasketController.GetBasketByCustomerId(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\BasketController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-13 22:38:40.914 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - 500 null text/plain; charset=utf-8 24.2288ms
2025-10-13 22:43:41.412 +04:00 [WRN] No store type was specified for the decimal property 'Quantity' on entity type 'OrderItem'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-10-13 22:43:41.660 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-13 22:43:41.692 +04:00 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-13 22:43:41.697 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-13 22:43:41.701 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-13 22:43:41.717 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-10-13 22:43:41.731 +04:00 [INF] No migrations were applied. The database is already up to date.
2025-10-13 22:43:41.734 +04:00 [INF] Migrations applied
2025-10-13 22:43:41.947 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-13 22:43:41.973 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-13 22:43:41.976 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-13 22:43:41.988 +04:00 [INF] User profile is available. Using 'C:\Users\ASUS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-13 22:43:42.001 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-10-13 22:43:42.027 +04:00 [INF] Admin user already exists: admin@greenzone.com
2025-10-13 22:43:42.159 +04:00 [INF] Now listening on: https://localhost:7100
2025-10-13 22:43:42.189 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-13 22:43:42.190 +04:00 [INF] Hosting environment: Development
2025-10-13 22:43:42.192 +04:00 [INF] Content root path: C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API
2025-10-13 22:43:42.341 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/index.html - null null
2025-10-13 22:43:42.423 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/index.html - 200 null text/html;charset=utf-8 82.7915ms
2025-10-13 22:43:42.435 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - null null
2025-10-13 22:43:42.435 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_vs/browserLink - null null
2025-10-13 22:43:42.441 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - 200 16511 application/javascript; charset=utf-8 5.375ms
2025-10-13 22:43:42.457 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_vs/browserLink - 200 null text/javascript; charset=UTF-8 21.8446ms
2025-10-13 22:43:42.639 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - null null
2025-10-13 22:43:42.659 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 19.6309ms
2025-10-13 22:43:47.764 +04:00 [WRN] No store type was specified for the decimal property 'Quantity' on entity type 'OrderItem'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-10-13 22:43:48.020 +04:00 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-13 22:43:48.048 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-13 22:43:48.054 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-13 22:43:48.057 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-13 22:43:48.068 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-10-13 22:43:48.078 +04:00 [INF] No migrations were applied. The database is already up to date.
2025-10-13 22:43:48.079 +04:00 [INF] Migrations applied
2025-10-13 22:43:48.196 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-13 22:43:48.224 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-13 22:43:48.228 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-13 22:43:48.237 +04:00 [INF] User profile is available. Using 'C:\Users\ASUS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-13 22:43:48.245 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-10-13 22:43:48.272 +04:00 [INF] Admin user already exists: admin@greenzone.com
2025-10-13 22:43:48.385 +04:00 [INF] Now listening on: https://localhost:7100
2025-10-13 22:43:48.410 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-13 22:43:48.412 +04:00 [INF] Hosting environment: Development
2025-10-13 22:43:48.413 +04:00 [INF] Content root path: C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API
2025-10-13 22:43:48.561 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/index.html - null null
2025-10-13 22:43:48.642 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/index.html - 200 null text/html;charset=utf-8 82.3591ms
2025-10-13 22:43:48.650 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - null null
2025-10-13 22:43:48.650 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_vs/browserLink - null null
2025-10-13 22:43:48.657 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - 200 16511 application/javascript; charset=utf-8 6.1227ms
2025-10-13 22:43:48.671 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_vs/browserLink - 200 null text/javascript; charset=UTF-8 20.986ms
2025-10-13 22:43:48.733 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - null null
2025-10-13 22:43:48.751 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 18.3597ms
2025-10-13 22:44:02.776 +04:00 [WRN] No store type was specified for the decimal property 'Quantity' on entity type 'OrderItem'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-10-13 22:44:03.011 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-13 22:44:03.037 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-13 22:44:03.040 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-13 22:44:03.042 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-13 22:44:03.052 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-10-13 22:44:03.064 +04:00 [INF] No migrations were applied. The database is already up to date.
2025-10-13 22:44:03.065 +04:00 [INF] Migrations applied
2025-10-13 22:44:03.196 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-13 22:44:03.223 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-13 22:44:03.228 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-13 22:44:03.238 +04:00 [INF] User profile is available. Using 'C:\Users\ASUS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-13 22:44:03.247 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-10-13 22:44:03.272 +04:00 [INF] Admin user already exists: admin@greenzone.com
2025-10-13 22:44:03.383 +04:00 [INF] Now listening on: https://localhost:7100
2025-10-13 22:44:03.409 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-13 22:44:03.411 +04:00 [INF] Hosting environment: Development
2025-10-13 22:44:03.412 +04:00 [INF] Content root path: C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API
2025-10-13 22:44:03.590 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/index.html - null null
2025-10-13 22:44:03.671 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/index.html - 200 null text/html;charset=utf-8 81.9166ms
2025-10-13 22:44:03.684 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_vs/browserLink - null null
2025-10-13 22:44:03.684 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - null null
2025-10-13 22:44:03.694 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - 200 16511 application/javascript; charset=utf-8 9.5714ms
2025-10-13 22:44:03.704 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_vs/browserLink - 200 null text/javascript; charset=UTF-8 19.6037ms
2025-10-13 22:44:03.760 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - null null
2025-10-13 22:44:03.780 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 19.7243ms
2025-10-13 22:48:38.492 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:48:38.492 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:48:38.492 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:48:38.506 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:48:38.507 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:48:38.510 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:48:38.514 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 22.3438ms
2025-10-13 22:48:38.514 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 22.344ms
2025-10-13 22:48:38.514 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 22.8181ms
2025-10-13 22:48:38.527 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:48:38.527 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:48:38.536 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:48:38.536 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:48:38.677 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:48:38.677 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:48:38.705 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:48:38.705 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:48:39.011 +04:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:48:39.014 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:48:39.053 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:48:39.114 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:48:39.127 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:48:39.128 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 410.4695ms
2025-10-13 22:48:39.128 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 412.535ms
2025-10-13 22:48:39.133 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:48:39.136 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:48:39.137 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:48:39.144 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:48:39.147 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:48:39.149 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 621.662ms
2025-10-13 22:48:39.149 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 621.6621ms
2025-10-13 22:48:39.227 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:48:39.235 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:48:39.239 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 88.7165ms
2025-10-13 22:48:39.242 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:48:39.245 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 117.527ms
2025-10-13 22:48:51.751 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:48:51.751 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:48:51.751 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:48:51.756 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:48:51.759 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:48:51.762 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:48:51.764 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 13.4494ms
2025-10-13 22:48:51.765 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 14.2958ms
2025-10-13 22:48:51.766 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 15.5841ms
2025-10-13 22:48:51.772 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:48:51.773 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:48:51.785 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:48:51.788 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:48:51.790 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:48:51.790 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:48:51.792 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:48:51.793 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:48:51.818 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:48:51.818 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:48:51.825 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:48:51.827 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:48:51.828 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 32.7943ms
2025-10-13 22:48:51.830 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 32.1755ms
2025-10-13 22:48:51.832 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:48:51.833 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:48:51.834 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:48:51.837 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 64.4846ms
2025-10-13 22:48:51.841 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:48:51.843 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 69.937ms
2025-10-13 22:48:51.850 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:48:51.856 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:48:51.863 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:48:51.869 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:48:51.872 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 13.5797ms
2025-10-13 22:48:51.875 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:48:51.877 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 44.3427ms
2025-10-13 22:48:57.835 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:48:57.835 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:48:57.835 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:48:57.839 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:48:57.842 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:48:57.846 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:48:57.848 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 12.8289ms
2025-10-13 22:48:57.848 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 13.7349ms
2025-10-13 22:48:57.850 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 14.4009ms
2025-10-13 22:48:57.857 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:48:57.857 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:48:57.867 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:48:57.870 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:48:57.872 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:48:57.873 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:48:57.874 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:48:57.875 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:48:57.890 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:48:57.893 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:48:57.895 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:48:57.898 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:48:57.898 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 20.9575ms
2025-10-13 22:48:57.901 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 20.4184ms
2025-10-13 22:48:57.901 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:48:57.902 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:48:57.904 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:48:57.908 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:48:57.909 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 52.0274ms
2025-10-13 22:48:57.911 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 53.2323ms
2025-10-13 22:48:57.913 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:48:57.924 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:48:57.932 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:48:57.938 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:48:57.941 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 15.009ms
2025-10-13 22:48:57.945 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:48:57.947 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 45.8904ms
2025-10-13 22:49:06.676 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:49:06.676 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:49:06.676 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:49:06.682 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:49:06.686 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:49:06.690 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:49:06.691 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 15.5198ms
2025-10-13 22:49:06.693 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 16.998ms
2025-10-13 22:49:06.694 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 18.619ms
2025-10-13 22:49:06.699 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:49:06.701 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:49:06.711 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:49:06.715 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:49:06.717 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:49:06.717 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:49:06.718 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:49:06.720 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:49:06.733 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:49:06.733 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:49:06.738 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:49:06.740 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:49:06.741 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 15.7025ms
2025-10-13 22:49:06.743 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 20.1316ms
2025-10-13 22:49:06.745 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:49:06.746 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:49:06.747 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:49:06.749 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 47.2468ms
2025-10-13 22:49:06.753 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:49:06.755 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 55.8438ms
2025-10-13 22:49:06.761 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:49:06.766 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:49:06.774 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:49:06.778 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:49:06.781 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 11.5306ms
2025-10-13 22:49:06.784 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:49:06.786 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 40.0379ms
2025-10-13 22:49:38.065 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:49:38.070 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:49:38.071 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:49:38.072 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:49:38.073 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 7.585ms
2025-10-13 22:49:38.077 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:49:38.081 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:49:38.082 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:49:38.090 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 18.8971ms
2025-10-13 22:49:38.096 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:49:38.097 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 25.1657ms
2025-10-13 22:49:38.101 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:49:38.107 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:49:38.116 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:49:38.118 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:49:38.119 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:49:38.123 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:49:38.144 +04:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:49:38.144 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:49:38.150 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:49:38.154 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:49:38.155 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 34.368ms
2025-10-13 22:49:38.159 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 33.0074ms
2025-10-13 22:49:38.161 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:49:38.162 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:49:38.163 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:49:38.167 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 86.2297ms
2025-10-13 22:49:38.172 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:49:38.173 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 72.6259ms
2025-10-13 22:49:38.181 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:49:38.187 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:49:38.195 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:49:38.201 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:49:38.204 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 14.1753ms
2025-10-13 22:49:38.207 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:49:38.209 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 46.6939ms
2025-10-13 22:49:51.571 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:49:51.571 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:49:51.571 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:49:51.576 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:49:51.579 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:49:51.582 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:49:51.583 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 11.9417ms
2025-10-13 22:49:51.584 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 12.7707ms
2025-10-13 22:49:51.585 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 13.4775ms
2025-10-13 22:49:51.586 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:49:51.588 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:49:51.601 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:49:51.604 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:49:51.606 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:49:51.606 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:49:51.608 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:49:51.610 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:49:51.615 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:49:51.616 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:49:51.619 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:49:51.621 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:49:51.623 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 11.0854ms
2025-10-13 22:49:51.625 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.6914ms
2025-10-13 22:49:51.626 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:49:51.626 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:49:51.628 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:49:51.630 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 43.8464ms
2025-10-13 22:49:51.633 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:49:51.635 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 46.465ms
2025-10-13 22:49:51.643 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:49:51.648 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:49:51.656 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:49:51.661 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:49:51.664 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.8771ms
2025-10-13 22:49:51.666 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:49:51.668 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 41.5696ms
2025-10-13 22:50:02.258 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:50:02.263 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:50:02.265 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 7.269ms
2025-10-13 22:50:02.267 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:50:02.267 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:50:02.270 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:50:02.275 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:50:02.279 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:50:02.284 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:50:02.285 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 18.1364ms
2025-10-13 22:50:02.286 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 19.257ms
2025-10-13 22:50:02.289 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:50:02.292 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:50:02.299 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:50:02.302 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:50:02.306 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:50:02.308 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:50:02.308 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:50:02.312 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:50:02.315 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.1582ms
2025-10-13 22:50:02.316 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:50:02.317 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:50:02.321 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:50:02.322 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 51.9661ms
2025-10-13 22:50:02.325 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 11.3491ms
2025-10-13 22:50:02.327 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:50:02.331 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:50:02.335 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:50:02.338 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 46.2015ms
2025-10-13 22:50:02.341 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:50:02.348 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:50:02.357 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:50:02.361 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:50:02.363 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 13.1279ms
2025-10-13 22:50:02.365 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:50:02.368 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 40.6932ms
2025-10-13 22:50:16.929 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:50:16.931 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:50:16.931 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:50:16.934 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:50:16.937 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:50:16.940 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:50:16.941 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 11.8356ms
2025-10-13 22:50:16.942 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 11.2322ms
2025-10-13 22:50:16.943 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 12.4667ms
2025-10-13 22:50:16.947 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:50:16.947 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:50:16.958 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:50:16.961 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:50:16.963 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:50:16.963 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:50:16.964 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:50:16.966 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:50:16.986 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:50:16.986 +04:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:50:16.990 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:50:16.993 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:50:16.994 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 23.7958ms
2025-10-13 22:50:16.995 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:50:16.996 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 27.8434ms
2025-10-13 22:50:16.998 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:50:17.002 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:50:17.003 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:50:17.005 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 57.7779ms
2025-10-13 22:50:17.007 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:50:17.007 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 60.9022ms
2025-10-13 22:50:17.013 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:50:17.033 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:50:17.036 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:50:17.039 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 19.0331ms
2025-10-13 22:50:17.041 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:50:17.042 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 46.9698ms
2025-10-13 22:50:36.993 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:50:36.993 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:50:36.993 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:50:36.998 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:50:37.001 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:50:37.005 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:50:37.005 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 12.0463ms
2025-10-13 22:50:37.006 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 12.9806ms
2025-10-13 22:50:37.008 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 14.1154ms
2025-10-13 22:50:37.012 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:50:37.013 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:50:37.025 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:50:37.030 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:50:37.031 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:50:37.032 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:50:37.033 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:50:37.035 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:50:37.055 +04:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:50:37.055 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:50:37.060 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:50:37.063 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:50:37.064 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 26.9925ms
2025-10-13 22:50:37.066 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 26.07ms
2025-10-13 22:50:37.071 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:50:37.072 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:50:37.073 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:50:37.075 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 62.9722ms
2025-10-13 22:50:37.079 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:50:37.080 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 66.5581ms
2025-10-13 22:50:37.088 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:50:37.093 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:50:37.099 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:50:37.103 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:50:37.105 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.1372ms
2025-10-13 22:50:37.107 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:50:37.108 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 36.5201ms
2025-10-13 22:51:59.829 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:51:59.829 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:51:59.829 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:51:59.833 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:51:59.837 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:51:59.841 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:51:59.842 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 13.052ms
2025-10-13 22:51:59.843 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 14.1503ms
2025-10-13 22:51:59.844 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 14.6853ms
2025-10-13 22:51:59.846 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:51:59.849 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:51:59.861 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:51:59.863 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:51:59.865 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:51:59.866 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:51:59.867 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:51:59.869 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:51:59.888 +04:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:51:59.888 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:51:59.891 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:51:59.894 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:51:59.897 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 25.6383ms
2025-10-13 22:51:59.898 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 24.887ms
2025-10-13 22:51:59.899 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:51:59.900 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:51:59.902 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:51:59.905 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:51:59.907 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 60.3397ms
2025-10-13 22:51:59.908 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 59.1144ms
2025-10-13 22:51:59.910 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:51:59.919 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:51:59.924 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:51:59.927 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:51:59.930 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.2933ms
2025-10-13 22:51:59.932 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:51:59.933 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 33.7921ms
2025-10-13 22:52:03.885 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:52:03.885 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:52:03.886 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 22:52:03.889 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:03.891 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:03.894 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:03.896 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:52:03.896 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:52:03.897 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 11.0087ms
2025-10-13 22:52:03.899 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:52:03.899 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 22:52:03.900 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:52:03.909 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:52:03.910 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:03.915 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:52:03.916 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:52:03.917 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:52:03.919 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:52:03.921 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 13.9848ms
2025-10-13 22:52:03.922 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:52:03.922 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:52:03.923 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.4563ms
2025-10-13 22:52:03.925 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:52:03.927 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:03.931 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:52:03.931 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:52:03.932 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 47.4828ms
2025-10-13 22:52:03.933 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:52:03.934 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 49.7182ms
2025-10-13 22:52:03.937 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:52:03.942 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:52:03.947 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 17.6618ms
2025-10-13 22:52:03.951 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:52:03.951 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:52:03.952 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 52.713ms
2025-10-13 22:52:03.955 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:52:03.959 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:52:03.960 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 10.6025ms
2025-10-13 22:52:03.961 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:52:03.963 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:03.964 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:52:03.968 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:03.969 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:52:03.971 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 49.5181ms
2025-10-13 22:52:03.972 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:52:03.974 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:52:03.979 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:52:03.983 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:52:03.986 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:52:03.987 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:52:03.990 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:52:03.991 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.0461ms
2025-10-13 22:52:03.993 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.4655ms
2025-10-13 22:52:03.994 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:52:03.995 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:52:03.997 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:52:04.000 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:04.002 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 42.817ms
2025-10-13 22:52:04.004 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - null null
2025-10-13 22:52:04.004 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 43.0193ms
2025-10-13 22:52:04.006 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:52:04.015 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:04.021 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:52:04.023 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - 204 null null 18.7421ms
2025-10-13 22:52:04.025 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - application/json null
2025-10-13 22:52:04.026 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:52:04.032 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:04.035 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:52:04.037 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.5437ms
2025-10-13 22:52:04.039 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:52:04.041 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 22:52:04.041 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 47.1711ms
2025-10-13 22:52:04.052 +04:00 [INF] Route matched with {action = "GetCustomerByUserId", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerByUserId(System.String) on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-13 22:52:04.135 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-10-13 22:52:04.177 +04:00 [INF] Executed DbCommand (29ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 22:52:04.209 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto'.
2025-10-13 22:52:04.212 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API) in 157.3581ms
2025-10-13 22:52:04.213 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 22:52:04.214 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - 200 null application/json; charset=utf-8 189.1768ms
2025-10-13 22:52:04.217 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - null null
2025-10-13 22:52:04.220 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:04.221 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - 204 null null 4.1476ms
2025-10-13 22:52:04.232 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - application/json null
2025-10-13 22:52:04.235 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:04.239 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 22:52:04.243 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 22:52:04.289 +04:00 [INF] Executed DbCommand (19ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 22:52:04.294 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 48.3831ms
2025-10-13 22:52:04.295 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 22:52:04.299 +04:00 [ERR] An unhandled exception has occurred while executing the request.
GreenZone.Application.Exceptions.NotFoundException: Basket not found for the customer.
   at GreenZone.Application.Service.BasketService.GetBasketByCustomerAsync(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\BasketService.cs:line 75
   at GreenZone.API.Controllers.BasketController.GetBasketByCustomerId(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\BasketController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-13 22:52:04.346 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - 500 null text/plain; charset=utf-8 113.6314ms
2025-10-13 22:52:07.933 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:52:07.933 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:52:07.933 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:52:07.933 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:52:07.938 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:07.945 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:07.949 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:07.952 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:07.953 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 20.1333ms
2025-10-13 22:52:07.954 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 21.1164ms
2025-10-13 22:52:07.955 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 21.9202ms
2025-10-13 22:52:07.956 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 22.9585ms
2025-10-13 22:52:07.956 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:52:07.957 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:52:07.977 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:07.980 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:07.981 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:52:07.982 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:52:07.984 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:52:07.985 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:52:07.990 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:52:07.993 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:52:07.993 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:52:07.997 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:52:07.998 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.5779ms
2025-10-13 22:52:07.999 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:52:07.999 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.9191ms
2025-10-13 22:52:08.000 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:52:08.001 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:52:08.004 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:08.007 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:52:08.010 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:08.011 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 55.1069ms
2025-10-13 22:52:08.012 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:52:08.014 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 56.2039ms
2025-10-13 22:52:08.015 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:52:08.020 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:52:08.025 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:52:08.030 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:52:08.031 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:52:08.033 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:52:08.036 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:52:08.038 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.1336ms
2025-10-13 22:52:08.040 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.5459ms
2025-10-13 22:52:08.041 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:52:08.042 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:52:08.044 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 44.5495ms
2025-10-13 22:52:08.045 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 44.9557ms
2025-10-13 22:52:11.787 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - null null
2025-10-13 22:52:11.792 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:11.793 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - 204 null null 5.6138ms
2025-10-13 22:52:11.794 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7100/api/Auth/login - application/json 42
2025-10-13 22:52:11.800 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:11.801 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:52:11.806 +04:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(GreenZone.Contracts.Dtos.LogInDto) on controller GreenZone.API.Controllers.AuthController (GreenZone.API).
2025-10-13 22:52:11.830 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-10-13 22:52:11.918 +04:00 [INF] User Oasis logged in successfully.
2025-10-13 22:52:11.946 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-10-13 22:52:11.966 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 22:52:11.973 +04:00 [INF] User Oasis logged in successfully.
2025-10-13 22:52:11.975 +04:00 [INF] Oasis logIn 
2025-10-13 22:52:11.977 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.AuthResultDto'.
2025-10-13 22:52:11.981 +04:00 [INF] Executed action GreenZone.API.Controllers.AuthController.Login (GreenZone.API) in 172.5905ms
2025-10-13 22:52:11.983 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:52:11.985 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7100/api/Auth/login - 200 null application/json; charset=utf-8 190.3431ms
2025-10-13 22:52:12.043 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:52:12.043 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:52:12.045 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:52:12.045 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:52:12.047 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:12.050 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:12.052 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:12.055 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:12.056 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 13.5015ms
2025-10-13 22:52:12.057 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 14.4583ms
2025-10-13 22:52:12.058 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 13.3968ms
2025-10-13 22:52:12.059 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:52:12.060 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 14.6662ms
2025-10-13 22:52:12.061 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:52:12.074 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:12.081 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:12.082 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:52:12.083 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:52:12.084 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:52:12.085 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:52:12.089 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:52:12.090 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:52:12.092 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:52:12.095 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:52:12.096 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.8954ms
2025-10-13 22:52:12.097 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:52:12.097 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.0786ms
2025-10-13 22:52:12.098 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:52:12.099 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:52:12.102 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:12.103 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:52:12.106 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:12.107 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 48.1409ms
2025-10-13 22:52:12.109 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:52:12.109 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 48.7776ms
2025-10-13 22:52:12.111 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:52:12.115 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:52:12.120 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:52:12.124 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:52:12.126 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:52:12.127 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:52:12.130 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:52:12.131 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 7.9584ms
2025-10-13 22:52:12.132 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 6.9816ms
2025-10-13 22:52:12.134 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:52:12.135 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:52:12.136 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 39.2077ms
2025-10-13 22:52:12.137 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 38.6427ms
2025-10-13 22:52:19.021 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - null null
2025-10-13 22:52:19.026 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:19.026 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - 204 null null 5.2623ms
2025-10-13 22:52:19.029 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7100/api/Auth/login - application/json 42
2025-10-13 22:52:19.033 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:19.034 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:52:19.036 +04:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(GreenZone.Contracts.Dtos.LogInDto) on controller GreenZone.API.Controllers.AuthController (GreenZone.API).
2025-10-13 22:52:19.041 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-10-13 22:52:19.114 +04:00 [INF] User Oasis logged in successfully.
2025-10-13 22:52:19.119 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-10-13 22:52:19.125 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 22:52:19.128 +04:00 [INF] User Oasis logged in successfully.
2025-10-13 22:52:19.130 +04:00 [INF] Oasis logIn 
2025-10-13 22:52:19.131 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.AuthResultDto'.
2025-10-13 22:52:19.134 +04:00 [INF] Executed action GreenZone.API.Controllers.AuthController.Login (GreenZone.API) in 95.9021ms
2025-10-13 22:52:19.136 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:52:19.138 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7100/api/Auth/login - 200 null application/json; charset=utf-8 109.1072ms
2025-10-13 22:52:19.227 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:52:19.227 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:52:19.228 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:52:19.228 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:52:19.231 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:19.235 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:19.239 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:19.243 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:19.244 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 16.8727ms
2025-10-13 22:52:19.245 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 17.9788ms
2025-10-13 22:52:19.245 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:52:19.246 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:52:19.246 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 18.8098ms
2025-10-13 22:52:19.248 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 19.7445ms
2025-10-13 22:52:19.259 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:19.262 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:19.272 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:52:19.273 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:52:19.275 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:52:19.276 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:52:19.280 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:52:19.281 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:52:19.283 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:52:19.285 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:52:19.287 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.4549ms
2025-10-13 22:52:19.287 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:52:19.288 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.1804ms
2025-10-13 22:52:19.289 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:52:19.290 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:52:19.293 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:19.296 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:52:19.299 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:19.300 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 54.9989ms
2025-10-13 22:52:19.302 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:52:19.303 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 56.9898ms
2025-10-13 22:52:19.304 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:52:19.309 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:52:19.313 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:52:19.320 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:52:19.320 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:52:19.322 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:52:19.325 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:52:19.326 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.8514ms
2025-10-13 22:52:19.328 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.9049ms
2025-10-13 22:52:19.330 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:52:19.332 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:52:19.333 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 45.7162ms
2025-10-13 22:52:19.335 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 45.1934ms
2025-10-13 22:52:26.071 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:52:26.071 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:52:26.071 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 22:52:26.074 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:26.078 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:26.082 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:26.083 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 11.9859ms
2025-10-13 22:52:26.084 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 12.8949ms
2025-10-13 22:52:26.085 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:52:26.085 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 13.6713ms
2025-10-13 22:52:26.085 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:52:26.086 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 22:52:26.098 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:26.105 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:26.108 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:26.109 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - null null
2025-10-13 22:52:26.110 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:52:26.111 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:52:26.112 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:52:26.115 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:26.116 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:52:26.118 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:52:26.119 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:52:26.120 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - 204 null null 10.4016ms
2025-10-13 22:52:26.121 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - application/json null
2025-10-13 22:52:26.124 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:52:26.126 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:52:26.136 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:52:26.136 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:26.139 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:52:26.142 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:52:26.145 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:52:26.147 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 22:52:26.147 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 24.8957ms
2025-10-13 22:52:26.148 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:52:26.149 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 24.0398ms
2025-10-13 22:52:26.150 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:52:26.151 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 23.6432ms
2025-10-13 22:52:26.153 +04:00 [INF] Route matched with {action = "GetCustomerByUserId", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerByUserId(System.String) on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-13 22:52:26.155 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:52:26.158 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:26.160 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:52:26.163 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:26.165 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:52:26.168 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 83.525ms
2025-10-13 22:52:26.170 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:52:26.170 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 22:52:26.171 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 85.9611ms
2025-10-13 22:52:26.172 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:52:26.173 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 87.4923ms
2025-10-13 22:52:26.179 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:52:26.182 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto'.
2025-10-13 22:52:26.187 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:52:26.195 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API) in 27.2698ms
2025-10-13 22:52:26.195 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:52:26.198 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 22:52:26.199 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:52:26.201 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:52:26.202 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - 200 null application/json; charset=utf-8 81.2296ms
2025-10-13 22:52:26.204 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - null null
2025-10-13 22:52:26.205 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:52:26.207 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 14.2564ms
2025-10-13 22:52:26.214 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:26.216 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 18.7019ms
2025-10-13 22:52:26.217 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:52:26.218 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - 204 null null 14.0362ms
2025-10-13 22:52:26.219 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - application/json null
2025-10-13 22:52:26.220 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:52:26.222 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 73.3474ms
2025-10-13 22:52:26.229 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:26.230 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 80.0785ms
2025-10-13 22:52:26.234 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 22:52:26.239 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 22:52:26.244 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 22:52:26.248 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 6.0677ms
2025-10-13 22:52:26.250 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 22:52:26.251 +04:00 [ERR] An unhandled exception has occurred while executing the request.
GreenZone.Application.Exceptions.NotFoundException: Basket not found for the customer.
   at GreenZone.Application.Service.BasketService.GetBasketByCustomerAsync(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\BasketService.cs:line 75
   at GreenZone.API.Controllers.BasketController.GetBasketByCustomerId(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\BasketController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-13 22:52:26.258 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - 500 null text/plain; charset=utf-8 38.6388ms
2025-10-13 22:52:34.307 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - null null
2025-10-13 22:52:34.313 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:34.314 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - 204 null null 6.8743ms
2025-10-13 22:52:34.315 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7100/api/Auth/login - application/json 42
2025-10-13 22:52:34.322 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:34.323 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:52:34.324 +04:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(GreenZone.Contracts.Dtos.LogInDto) on controller GreenZone.API.Controllers.AuthController (GreenZone.API).
2025-10-13 22:52:34.353 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-10-13 22:52:34.421 +04:00 [INF] User Oasis logged in successfully.
2025-10-13 22:52:34.434 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-10-13 22:52:34.465 +04:00 [INF] Executed DbCommand (28ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 22:52:34.471 +04:00 [INF] User Oasis logged in successfully.
2025-10-13 22:52:34.474 +04:00 [INF] Oasis logIn 
2025-10-13 22:52:34.476 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.AuthResultDto'.
2025-10-13 22:52:34.478 +04:00 [INF] Executed action GreenZone.API.Controllers.AuthController.Login (GreenZone.API) in 151.4842ms
2025-10-13 22:52:34.480 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:52:34.482 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7100/api/Auth/login - 200 null application/json; charset=utf-8 166.201ms
2025-10-13 22:52:34.538 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:52:34.540 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:52:34.540 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:52:34.540 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:52:34.544 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:34.548 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:34.552 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:34.557 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:34.558 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 19.6253ms
2025-10-13 22:52:34.559 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 18.8434ms
2025-10-13 22:52:34.559 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:52:34.560 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 20.3482ms
2025-10-13 22:52:34.561 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 21.4901ms
2025-10-13 22:52:34.561 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:52:34.572 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:34.584 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:34.586 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:52:34.587 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:52:34.589 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:52:34.590 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:52:34.599 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:52:34.599 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:52:34.603 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:52:34.606 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:52:34.607 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.236ms
2025-10-13 22:52:34.608 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:52:34.610 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 17.3071ms
2025-10-13 22:52:34.610 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:52:34.611 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:52:34.614 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:34.616 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:52:34.618 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:52:34.619 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 58.0572ms
2025-10-13 22:52:34.621 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:52:34.622 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 62.7569ms
2025-10-13 22:52:34.623 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:52:34.628 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:52:34.634 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:52:34.637 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:52:34.639 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:52:34.641 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:52:34.643 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:52:34.645 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.1727ms
2025-10-13 22:52:34.647 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.4522ms
2025-10-13 22:52:34.648 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:52:34.650 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:52:34.652 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 43.5222ms
2025-10-13 22:52:34.653 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 42.8059ms
2025-10-13 22:53:27.144 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:53:27.144 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:53:27.149 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:53:27.154 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:53:27.155 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 11.3113ms
2025-10-13 22:53:27.156 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 11.6023ms
2025-10-13 22:53:27.162 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:53:27.162 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:53:27.170 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:53:27.173 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:53:27.174 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:53:27.175 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:53:27.176 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:53:27.177 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:53:27.183 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:53:27.184 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:53:27.186 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:53:27.189 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:53:27.190 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.075ms
2025-10-13 22:53:27.192 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.7669ms
2025-10-13 22:53:27.193 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:53:27.195 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:53:27.197 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 34.9643ms
2025-10-13 22:53:27.198 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 36.0597ms
2025-10-13 22:53:29.795 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:53:29.795 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:53:29.799 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:53:29.803 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:53:29.804 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:53:29.805 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:53:29.806 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:53:29.808 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:53:29.812 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:53:29.813 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:53:29.815 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:53:29.818 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:53:29.819 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.5661ms
2025-10-13 22:53:29.820 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 7.9051ms
2025-10-13 22:53:29.822 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:53:29.824 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:53:29.825 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 30.0989ms
2025-10-13 22:53:29.827 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 31.6231ms
2025-10-13 22:53:35.661 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:53:35.661 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:53:35.664 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:53:35.667 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:53:35.668 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 7.1886ms
2025-10-13 22:53:35.669 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 7.9181ms
2025-10-13 22:53:35.671 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:53:35.671 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:53:35.681 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:53:35.684 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:53:35.686 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:53:35.686 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:53:35.687 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:53:35.688 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:53:35.701 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:53:35.701 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:53:35.704 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:53:35.707 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:53:35.708 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 17.6535ms
2025-10-13 22:53:35.709 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 16.8613ms
2025-10-13 22:53:35.711 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:53:35.713 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:53:35.714 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 42.803ms
2025-10-13 22:53:35.716 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 44.08ms
2025-10-13 22:53:42.830 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:53:42.830 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:53:42.837 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:53:42.841 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:53:42.842 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 11.4229ms
2025-10-13 22:53:42.843 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 12.4465ms
2025-10-13 22:53:42.847 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:53:42.847 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:53:42.855 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:53:42.858 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:53:42.860 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:53:42.860 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:53:42.862 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:53:42.863 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:53:42.874 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:53:42.874 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:53:42.877 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:53:42.881 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:53:42.882 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 16.7021ms
2025-10-13 22:53:42.883 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 16.0836ms
2025-10-13 22:53:42.885 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:53:42.887 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:53:42.889 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 42.1186ms
2025-10-13 22:53:42.890 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 43.407ms
2025-10-13 22:53:47.751 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:53:47.751 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:53:47.757 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:53:47.760 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:53:47.762 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:53:47.763 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:53:47.764 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:53:47.766 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:53:47.770 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:53:47.773 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:53:47.774 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:53:47.776 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:53:47.778 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.1835ms
2025-10-13 22:53:47.780 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.0613ms
2025-10-13 22:53:47.781 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:53:47.783 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:53:47.785 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 33.9776ms
2025-10-13 22:53:47.786 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 35.6682ms
2025-10-13 22:54:02.088 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:54:02.088 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:54:02.093 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:54:02.097 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:54:02.098 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 9.792ms
2025-10-13 22:54:02.099 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 10.7739ms
2025-10-13 22:54:02.102 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:54:02.102 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:54:02.111 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:54:02.114 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:54:02.116 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:54:02.117 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:54:02.118 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:54:02.120 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:54:02.125 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:54:02.127 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:54:02.128 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:54:02.130 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:54:02.132 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.6223ms
2025-10-13 22:54:02.134 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.3158ms
2025-10-13 22:54:02.135 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:54:02.137 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:54:02.138 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 36.4465ms
2025-10-13 22:54:02.139 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 37.7146ms
2025-10-13 22:54:07.177 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:54:07.177 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:54:07.181 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:54:07.185 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:54:07.186 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 9.5373ms
2025-10-13 22:54:07.187 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 9.9839ms
2025-10-13 22:54:07.190 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:54:07.191 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:54:07.200 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:54:07.203 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:54:07.204 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:54:07.205 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:54:07.207 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:54:07.209 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:54:07.212 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:54:07.214 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:54:07.216 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:54:07.218 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:54:07.219 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.4865ms
2025-10-13 22:54:07.221 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.0359ms
2025-10-13 22:54:07.223 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:54:07.224 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:54:07.226 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 35.0195ms
2025-10-13 22:54:07.227 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 36.4273ms
2025-10-13 22:54:24.234 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:54:24.234 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:54:24.239 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:54:24.244 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:54:24.245 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 10.7315ms
2025-10-13 22:54:24.246 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 12.0343ms
2025-10-13 22:54:24.248 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:54:24.250 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:54:24.259 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:54:24.262 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:54:24.263 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:54:24.264 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:54:24.265 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:54:24.266 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:54:24.270 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:54:24.271 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:54:24.273 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:54:24.276 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:54:24.278 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.4747ms
2025-10-13 22:54:24.279 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.18ms
2025-10-13 22:54:24.281 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:54:24.282 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:54:24.284 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 35.6351ms
2025-10-13 22:54:24.285 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 34.9395ms
2025-10-13 22:54:29.223 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:54:29.223 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:54:29.223 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 22:54:29.227 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:54:29.231 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:54:29.234 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:54:29.235 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:54:29.237 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:54:29.238 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 14.8991ms
2025-10-13 22:54:29.239 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 22:54:29.240 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:54:29.241 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:54:29.251 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:54:29.252 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:54:29.252 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:54:29.255 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:54:29.258 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:54:29.258 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:54:29.261 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:54:29.265 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:54:29.267 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - null null
2025-10-13 22:54:29.268 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:54:29.269 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:54:29.272 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:54:29.272 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 20.2218ms
2025-10-13 22:54:29.274 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 21.2371ms
2025-10-13 22:54:29.277 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:54:29.279 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 25.8013ms
2025-10-13 22:54:29.280 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:54:29.283 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:54:29.283 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 26.3505ms
2025-10-13 22:54:29.284 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:54:29.292 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - 204 null null 25.2335ms
2025-10-13 22:54:29.293 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - application/json null
2025-10-13 22:54:29.294 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:54:29.297 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:54:29.300 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:54:29.301 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:54:29.305 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:54:29.313 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:54:29.314 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 91.4748ms
2025-10-13 22:54:29.316 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:54:29.318 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 36.6669ms
2025-10-13 22:54:29.319 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 96.391ms
2025-10-13 22:54:29.321 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:54:29.322 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 22:54:29.328 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:54:29.330 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:54:29.335 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:54:29.336 +04:00 [INF] Route matched with {action = "GetCustomerByUserId", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerByUserId(System.String) on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-13 22:54:29.340 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 100.4966ms
2025-10-13 22:54:29.341 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:54:29.344 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:54:29.352 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:54:29.355 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:54:29.356 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 17.7012ms
2025-10-13 22:54:29.358 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 15.1828ms
2025-10-13 22:54:29.360 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:54:29.362 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:54:29.364 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 83.6015ms
2025-10-13 22:54:29.365 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 81.3946ms
2025-10-13 22:54:29.371 +04:00 [INF] Executed DbCommand (21ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 22:54:29.377 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto'.
2025-10-13 22:54:29.379 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API) in 33.6231ms
2025-10-13 22:54:29.381 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 22:54:29.382 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - 200 null application/json; charset=utf-8 88.7634ms
2025-10-13 22:54:29.384 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - null null
2025-10-13 22:54:29.391 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:54:29.392 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - 204 null null 7.7434ms
2025-10-13 22:54:29.394 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - application/json null
2025-10-13 22:54:29.400 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:54:29.401 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 22:54:29.402 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 22:54:29.415 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 22:54:29.418 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 13.7792ms
2025-10-13 22:54:29.420 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 22:54:29.422 +04:00 [ERR] An unhandled exception has occurred while executing the request.
GreenZone.Application.Exceptions.NotFoundException: Basket not found for the customer.
   at GreenZone.Application.Service.BasketService.GetBasketByCustomerAsync(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\BasketService.cs:line 75
   at GreenZone.API.Controllers.BasketController.GetBasketByCustomerId(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\BasketController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-13 22:54:29.430 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - 500 null text/plain; charset=utf-8 36.0116ms
2025-10-13 22:54:37.876 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - null null
2025-10-13 22:54:37.882 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:54:37.883 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - 204 null null 6.6615ms
2025-10-13 22:54:37.884 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7100/api/Auth/login - application/json 42
2025-10-13 22:54:37.890 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:54:37.891 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:54:37.892 +04:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(GreenZone.Contracts.Dtos.LogInDto) on controller GreenZone.API.Controllers.AuthController (GreenZone.API).
2025-10-13 22:54:37.900 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-10-13 22:54:37.965 +04:00 [INF] User Oasis logged in successfully.
2025-10-13 22:54:37.973 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-10-13 22:54:37.976 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 22:54:37.979 +04:00 [INF] User Oasis logged in successfully.
2025-10-13 22:54:37.980 +04:00 [INF] Oasis logIn 
2025-10-13 22:54:37.981 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.AuthResultDto'.
2025-10-13 22:54:37.982 +04:00 [INF] Executed action GreenZone.API.Controllers.AuthController.Login (GreenZone.API) in 86.8536ms
2025-10-13 22:54:37.983 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:54:37.984 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7100/api/Auth/login - 200 null application/json; charset=utf-8 100.1109ms
2025-10-13 22:54:38.030 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:54:38.030 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:54:38.030 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:54:38.030 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:54:38.033 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:54:38.037 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:54:38.041 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:54:38.044 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:54:38.045 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 15.0413ms
2025-10-13 22:54:38.046 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 16.0806ms
2025-10-13 22:54:38.047 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 16.9779ms
2025-10-13 22:54:38.048 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:54:38.048 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:54:38.048 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 17.8405ms
2025-10-13 22:54:38.061 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:54:38.064 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:54:38.069 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:54:38.069 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:54:38.070 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:54:38.072 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:54:38.075 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:54:38.077 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:54:38.078 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:54:38.079 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:54:38.080 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 6.2758ms
2025-10-13 22:54:38.081 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:54:38.082 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 5.6159ms
2025-10-13 22:54:38.082 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:54:38.083 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:54:38.084 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:54:38.085 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:54:38.087 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:54:38.088 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 40.5441ms
2025-10-13 22:54:38.089 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:54:38.089 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 41.8128ms
2025-10-13 22:54:38.090 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:54:38.094 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:54:38.099 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:54:38.102 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:54:38.104 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:54:38.106 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:54:38.109 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:54:38.110 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.7475ms
2025-10-13 22:54:38.112 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.29ms
2025-10-13 22:54:38.113 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:54:38.115 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:54:38.116 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 34.5773ms
2025-10-13 22:54:38.117 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 34.6396ms
2025-10-13 22:55:01.628 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:55:01.628 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:55:01.628 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:55:01.629 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:55:01.632 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:01.636 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:01.639 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:01.643 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:01.644 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 15.9305ms
2025-10-13 22:55:01.645 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 16.4145ms
2025-10-13 22:55:01.646 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 17.2274ms
2025-10-13 22:55:01.647 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 17.7357ms
2025-10-13 22:55:01.647 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:55:01.647 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:55:01.664 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:01.667 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:01.668 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:55:01.669 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:55:01.670 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:55:01.672 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:55:01.685 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:55:01.685 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:55:01.687 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:55:01.689 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:55:01.691 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 14.9382ms
2025-10-13 22:55:01.692 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:55:01.693 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 19.065ms
2025-10-13 22:55:01.693 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:55:01.694 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:55:01.697 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:01.699 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:55:01.702 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:01.704 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 56.4927ms
2025-10-13 22:55:01.705 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:55:01.706 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 59.1434ms
2025-10-13 22:55:01.707 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:55:01.711 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:55:01.716 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:55:01.720 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:55:01.722 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:55:01.723 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:55:01.725 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:55:01.726 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.2598ms
2025-10-13 22:55:01.728 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.3586ms
2025-10-13 22:55:01.729 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:55:01.730 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:55:01.733 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 41.1582ms
2025-10-13 22:55:01.734 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 40.7949ms
2025-10-13 22:55:05.843 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - null null
2025-10-13 22:55:05.846 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:05.847 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - 204 null null 4.5738ms
2025-10-13 22:55:05.849 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7100/api/Auth/login - application/json 42
2025-10-13 22:55:05.853 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:05.853 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:55:05.854 +04:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(GreenZone.Contracts.Dtos.LogInDto) on controller GreenZone.API.Controllers.AuthController (GreenZone.API).
2025-10-13 22:55:05.862 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-10-13 22:55:05.931 +04:00 [INF] User Oasis logged in successfully.
2025-10-13 22:55:05.940 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-10-13 22:55:05.963 +04:00 [INF] Executed DbCommand (17ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 22:55:05.968 +04:00 [INF] User Oasis logged in successfully.
2025-10-13 22:55:05.970 +04:00 [INF] Oasis logIn 
2025-10-13 22:55:05.972 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.AuthResultDto'.
2025-10-13 22:55:05.973 +04:00 [INF] Executed action GreenZone.API.Controllers.AuthController.Login (GreenZone.API) in 117.9221ms
2025-10-13 22:55:05.975 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:55:05.977 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7100/api/Auth/login - 200 null application/json; charset=utf-8 128.4274ms
2025-10-13 22:55:06.021 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:55:06.021 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:55:06.021 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:55:06.021 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:55:06.025 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:06.028 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:06.031 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:06.034 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:06.035 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 13.6698ms
2025-10-13 22:55:06.035 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 14.4599ms
2025-10-13 22:55:06.036 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 15.0556ms
2025-10-13 22:55:06.037 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:55:06.037 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 15.7688ms
2025-10-13 22:55:06.037 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:55:06.051 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:06.058 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:06.060 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:55:06.061 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:55:06.062 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:55:06.063 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:55:06.066 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:55:06.068 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:55:06.070 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:55:06.072 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:55:06.074 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.2315ms
2025-10-13 22:55:06.075 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:55:06.075 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.0544ms
2025-10-13 22:55:06.076 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:55:06.077 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:55:06.080 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:06.082 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:55:06.084 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:06.086 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 49.1644ms
2025-10-13 22:55:06.087 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:55:06.088 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 51.1633ms
2025-10-13 22:55:06.089 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:55:06.094 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:55:06.100 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:55:06.104 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:55:06.106 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:55:06.106 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:55:06.109 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:55:06.110 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 7.5935ms
2025-10-13 22:55:06.112 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.1149ms
2025-10-13 22:55:06.114 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:55:06.116 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:55:06.117 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 41.9741ms
2025-10-13 22:55:06.118 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 42.2057ms
2025-10-13 22:55:30.703 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:55:30.703 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:55:30.703 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:55:30.704 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:55:30.708 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:30.711 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:30.715 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:30.717 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:30.718 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 15.0567ms
2025-10-13 22:55:30.720 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 16.0261ms
2025-10-13 22:55:30.721 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 17.1899ms
2025-10-13 22:55:30.721 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:55:30.721 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:55:30.722 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 17.7918ms
2025-10-13 22:55:30.736 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:30.739 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:30.744 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:55:30.745 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:55:30.746 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:55:30.747 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:55:30.751 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:55:30.752 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:55:30.753 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:55:30.756 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:55:30.758 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.72ms
2025-10-13 22:55:30.759 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:55:30.760 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.0652ms
2025-10-13 22:55:30.761 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:55:30.762 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:55:30.765 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:30.766 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:55:30.769 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:30.770 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 49.1077ms
2025-10-13 22:55:30.771 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:55:30.772 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 50.9667ms
2025-10-13 22:55:30.773 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:55:30.778 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:55:30.783 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:55:30.786 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:55:30.788 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:55:30.789 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:55:30.792 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:55:30.793 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.2692ms
2025-10-13 22:55:30.794 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.7554ms
2025-10-13 22:55:30.796 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:55:30.797 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:55:30.798 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 39.7283ms
2025-10-13 22:55:30.800 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 39.0296ms
2025-10-13 22:55:35.558 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:55:35.558 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:55:35.561 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:35.563 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:35.564 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:55:35.565 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:55:35.566 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:55:35.567 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:55:35.570 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:55:35.572 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:55:35.573 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:55:35.576 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:55:35.577 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 7.9311ms
2025-10-13 22:55:35.578 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:55:35.578 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.5612ms
2025-10-13 22:55:35.579 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:55:35.580 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:55:35.582 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:35.583 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:55:35.586 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:35.587 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 29.8633ms
2025-10-13 22:55:35.588 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:55:35.589 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 31.9259ms
2025-10-13 22:55:35.590 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:55:35.596 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:55:35.601 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:55:35.604 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:55:35.606 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:55:35.608 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:55:35.611 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:55:35.612 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.3624ms
2025-10-13 22:55:35.614 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.0861ms
2025-10-13 22:55:35.616 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:55:35.617 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:55:35.618 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 40.559ms
2025-10-13 22:55:35.620 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 41.0682ms
2025-10-13 22:55:43.104 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:55:43.106 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:55:43.106 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:55:43.107 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:55:43.108 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:43.110 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:43.114 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:43.117 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:43.118 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 13.8026ms
2025-10-13 22:55:43.119 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 12.7861ms
2025-10-13 22:55:43.119 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:55:43.120 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:55:43.120 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 13.809ms
2025-10-13 22:55:43.121 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 14.8613ms
2025-10-13 22:55:43.133 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:43.136 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:43.146 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:55:43.146 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:55:43.148 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:55:43.149 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:55:43.152 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:55:43.154 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:55:43.155 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:55:43.158 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:55:43.159 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.1409ms
2025-10-13 22:55:43.160 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:55:43.161 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.9891ms
2025-10-13 22:55:43.161 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:55:43.162 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:55:43.164 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:43.165 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:55:43.166 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:43.167 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 47.5955ms
2025-10-13 22:55:43.168 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:55:43.169 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 48.5113ms
2025-10-13 22:55:43.169 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:55:43.172 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:55:43.175 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:55:43.178 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:55:43.178 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:55:43.180 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:55:43.182 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:55:43.183 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 6.4533ms
2025-10-13 22:55:43.185 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.8199ms
2025-10-13 22:55:43.186 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:55:43.187 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:55:43.188 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 26.3243ms
2025-10-13 22:55:43.189 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 28.6382ms
2025-10-13 22:55:45.032 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:55:45.032 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:55:45.036 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:45.039 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:45.040 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:55:45.041 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:55:45.042 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:55:45.043 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:55:45.046 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:55:45.048 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:55:45.050 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:55:45.053 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:55:45.055 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.1154ms
2025-10-13 22:55:45.056 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:55:45.057 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.7667ms
2025-10-13 22:55:45.057 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:55:45.058 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:55:45.062 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:45.063 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:55:45.066 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:45.067 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 34.8771ms
2025-10-13 22:55:45.068 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:55:45.069 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 36.4275ms
2025-10-13 22:55:45.070 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:55:45.075 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:55:45.079 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:55:45.084 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:55:45.085 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:55:45.087 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:55:45.090 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:55:45.092 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.5165ms
2025-10-13 22:55:45.093 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.8665ms
2025-10-13 22:55:45.095 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:55:45.096 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:55:45.098 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 42.081ms
2025-10-13 22:55:45.099 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 41.8844ms
2025-10-13 22:55:49.842 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - null null
2025-10-13 22:55:49.846 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:49.847 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - 204 null null 5.2612ms
2025-10-13 22:55:49.848 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7100/api/Auth/login - application/json 42
2025-10-13 22:55:49.854 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:49.855 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:55:49.857 +04:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(GreenZone.Contracts.Dtos.LogInDto) on controller GreenZone.API.Controllers.AuthController (GreenZone.API).
2025-10-13 22:55:49.867 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-10-13 22:55:49.939 +04:00 [INF] User Oasis logged in successfully.
2025-10-13 22:55:49.950 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-10-13 22:55:49.981 +04:00 [INF] Executed DbCommand (24ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 22:55:49.987 +04:00 [INF] User Oasis logged in successfully.
2025-10-13 22:55:49.989 +04:00 [INF] Oasis logIn 
2025-10-13 22:55:49.990 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.AuthResultDto'.
2025-10-13 22:55:49.993 +04:00 [INF] Executed action GreenZone.API.Controllers.AuthController.Login (GreenZone.API) in 133.8269ms
2025-10-13 22:55:49.995 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:55:49.996 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7100/api/Auth/login - 200 null application/json; charset=utf-8 148.0897ms
2025-10-13 22:55:50.045 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:55:50.045 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:55:50.045 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:55:50.045 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:55:50.050 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:50.054 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:50.057 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:50.060 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:50.061 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 16.6621ms
2025-10-13 22:55:50.063 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 17.9733ms
2025-10-13 22:55:50.063 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:55:50.064 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 19.0083ms
2025-10-13 22:55:50.064 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:55:50.065 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 19.9991ms
2025-10-13 22:55:50.077 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:50.084 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:50.090 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:55:50.091 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:55:50.092 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:55:50.094 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:55:50.102 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:55:50.103 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:55:50.106 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:55:50.109 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:55:50.110 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 14.1635ms
2025-10-13 22:55:50.111 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:55:50.112 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 13.4691ms
2025-10-13 22:55:50.112 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:55:50.113 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:55:50.116 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:50.119 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:55:50.123 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:55:50.124 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 61.049ms
2025-10-13 22:55:50.125 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:55:50.126 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 62.0348ms
2025-10-13 22:55:50.128 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:55:50.133 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:55:50.138 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:55:50.142 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:55:50.145 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:55:50.146 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:55:50.148 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:55:50.150 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.2647ms
2025-10-13 22:55:50.152 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.1879ms
2025-10-13 22:55:50.153 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:55:50.155 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:55:50.157 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 45.4275ms
2025-10-13 22:55:50.158 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 45.7836ms
2025-10-13 22:57:09.242 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - null null
2025-10-13 22:57:09.246 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:57:09.247 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - 204 null null 4.7639ms
2025-10-13 22:57:09.249 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7100/api/Auth/login - application/json 42
2025-10-13 22:57:09.255 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:57:09.256 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:57:09.258 +04:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(GreenZone.Contracts.Dtos.LogInDto) on controller GreenZone.API.Controllers.AuthController (GreenZone.API).
2025-10-13 22:57:09.275 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-10-13 22:57:09.345 +04:00 [INF] User Oasis logged in successfully.
2025-10-13 22:57:09.353 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-10-13 22:57:09.376 +04:00 [INF] Executed DbCommand (19ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 22:57:09.382 +04:00 [INF] User Oasis logged in successfully.
2025-10-13 22:57:09.383 +04:00 [INF] Oasis logIn 
2025-10-13 22:57:09.384 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.AuthResultDto'.
2025-10-13 22:57:09.386 +04:00 [INF] Executed action GreenZone.API.Controllers.AuthController.Login (GreenZone.API) in 125.9603ms
2025-10-13 22:57:09.389 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:57:09.390 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7100/api/Auth/login - 200 null application/json; charset=utf-8 141.3702ms
2025-10-13 22:57:09.448 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:57:09.448 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:57:09.448 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:57:09.448 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:57:09.452 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:57:09.454 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:57:09.456 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 7.5957ms
2025-10-13 22:57:09.458 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:57:09.460 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:57:09.461 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 13.5514ms
2025-10-13 22:57:09.463 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:57:09.465 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:57:09.471 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:57:09.472 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 23.9126ms
2025-10-13 22:57:09.479 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:57:09.480 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 31.3729ms
2025-10-13 22:57:09.481 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:57:09.486 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:57:09.490 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:57:09.492 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:57:09.499 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:57:09.499 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:57:09.502 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:57:09.505 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:57:09.506 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.4753ms
2025-10-13 22:57:09.507 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:57:09.508 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 11.9701ms
2025-10-13 22:57:09.509 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:57:09.509 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:57:09.512 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:57:09.514 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:57:09.517 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:57:09.518 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 59.637ms
2025-10-13 22:57:09.519 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:57:09.520 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 57.1937ms
2025-10-13 22:57:09.521 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:57:09.526 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:57:09.531 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:57:09.534 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:57:09.536 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:57:09.537 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:57:09.540 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:57:09.541 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.8549ms
2025-10-13 22:57:09.542 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 7.4494ms
2025-10-13 22:57:09.543 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:57:09.545 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:57:09.546 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 38.5044ms
2025-10-13 22:57:09.547 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 38.3039ms
2025-10-13 22:57:13.301 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:57:13.301 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:57:13.301 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 22:57:13.305 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:57:13.308 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:57:13.312 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:57:13.313 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:57:13.314 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:57:13.315 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 13.417ms
2025-10-13 22:57:13.316 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:57:13.316 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 22:57:13.317 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:57:13.324 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:57:13.326 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:57:13.329 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:57:13.330 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:57:13.331 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:57:13.334 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:57:13.335 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.4058ms
2025-10-13 22:57:13.336 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:57:13.336 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:57:13.338 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.9742ms
2025-10-13 22:57:13.339 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:57:13.340 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:57:13.340 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - null null
2025-10-13 22:57:13.342 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:57:13.346 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:57:13.346 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:57:13.349 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:57:13.351 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 49.456ms
2025-10-13 22:57:13.354 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:57:13.355 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:57:13.358 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:57:13.359 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 57.6663ms
2025-10-13 22:57:13.360 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:57:13.364 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - 204 null null 23.7059ms
2025-10-13 22:57:13.365 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:57:13.365 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - application/json null
2025-10-13 22:57:13.367 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 22.2097ms
2025-10-13 22:57:13.371 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:57:13.378 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:57:13.379 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:57:13.380 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:57:13.383 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:57:13.384 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:57:13.385 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 22:57:13.386 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 70.1402ms
2025-10-13 22:57:13.389 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:57:13.391 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 14.1908ms
2025-10-13 22:57:13.392 +04:00 [INF] Route matched with {action = "GetCustomerByUserId", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerByUserId(System.String) on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-13 22:57:13.398 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 15.6843ms
2025-10-13 22:57:13.399 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:57:13.403 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:57:13.404 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 22:57:13.404 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 68.4056ms
2025-10-13 22:57:13.406 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 67.1729ms
2025-10-13 22:57:13.409 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto'.
2025-10-13 22:57:13.418 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API) in 16.2872ms
2025-10-13 22:57:13.420 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 22:57:13.421 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - 200 null application/json; charset=utf-8 56.1828ms
2025-10-13 22:57:13.424 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - null null
2025-10-13 22:57:13.428 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:57:13.429 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - 204 null null 5.2118ms
2025-10-13 22:57:13.431 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - application/json null
2025-10-13 22:57:13.436 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:57:13.438 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 22:57:13.439 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 22:57:13.450 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 22:57:13.454 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 13.09ms
2025-10-13 22:57:13.456 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 22:57:13.458 +04:00 [ERR] An unhandled exception has occurred while executing the request.
GreenZone.Application.Exceptions.NotFoundException: Basket not found for the customer.
   at GreenZone.Application.Service.BasketService.GetBasketByCustomerAsync(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\BasketService.cs:line 75
   at GreenZone.API.Controllers.BasketController.GetBasketByCustomerId(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\BasketController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-13 22:57:13.465 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - 500 null text/plain; charset=utf-8 34.5169ms
2025-10-13 22:57:18.496 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - null null
2025-10-13 22:57:18.501 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:57:18.502 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - 204 null null 5.2454ms
2025-10-13 22:57:18.503 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7100/api/Auth/login - application/json 42
2025-10-13 22:57:18.508 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:57:18.509 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:57:18.510 +04:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(GreenZone.Contracts.Dtos.LogInDto) on controller GreenZone.API.Controllers.AuthController (GreenZone.API).
2025-10-13 22:57:18.514 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-10-13 22:57:18.580 +04:00 [INF] User Oasis logged in successfully.
2025-10-13 22:57:18.583 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-10-13 22:57:18.585 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 22:57:18.588 +04:00 [INF] User Oasis logged in successfully.
2025-10-13 22:57:18.589 +04:00 [INF] Oasis logIn 
2025-10-13 22:57:18.589 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.AuthResultDto'.
2025-10-13 22:57:18.590 +04:00 [INF] Executed action GreenZone.API.Controllers.AuthController.Login (GreenZone.API) in 78.208ms
2025-10-13 22:57:18.592 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:57:18.592 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7100/api/Auth/login - 200 null application/json; charset=utf-8 89.2891ms
2025-10-13 22:57:18.630 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:57:18.630 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:57:18.630 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:57:18.630 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:57:18.634 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:57:18.637 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:57:18.640 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:57:18.644 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:57:18.644 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 14.6518ms
2025-10-13 22:57:18.645 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 15.5681ms
2025-10-13 22:57:18.646 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:57:18.646 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:57:18.646 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 16.4941ms
2025-10-13 22:57:18.649 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:57:18.659 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:57:18.660 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 29.9484ms
2025-10-13 22:57:18.664 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:57:18.665 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:57:18.668 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:57:18.669 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:57:18.672 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:57:18.673 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:57:18.675 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:57:18.678 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:57:18.679 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.706ms
2025-10-13 22:57:18.679 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:57:18.680 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 7.0102ms
2025-10-13 22:57:18.680 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:57:18.681 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:57:18.683 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:57:18.685 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:57:18.687 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:57:18.689 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 42.3481ms
2025-10-13 22:57:18.690 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:57:18.690 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 43.9142ms
2025-10-13 22:57:18.691 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:57:18.695 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:57:18.700 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:57:18.702 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:57:18.704 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:57:18.706 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:57:18.708 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:57:18.709 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.9991ms
2025-10-13 22:57:18.711 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 7.3824ms
2025-10-13 22:57:18.712 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:57:18.713 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:57:18.714 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 34.7159ms
2025-10-13 22:57:18.715 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 35.1272ms
2025-10-13 22:59:19.179 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - null null
2025-10-13 22:59:19.184 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:59:19.185 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - 204 null null 6.0027ms
2025-10-13 22:59:19.187 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7100/api/Auth/login - application/json 42
2025-10-13 22:59:19.193 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:59:19.194 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:59:19.195 +04:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(GreenZone.Contracts.Dtos.LogInDto) on controller GreenZone.API.Controllers.AuthController (GreenZone.API).
2025-10-13 22:59:19.210 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-10-13 22:59:19.272 +04:00 [INF] User Oasis logged in successfully.
2025-10-13 22:59:19.280 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-10-13 22:59:19.302 +04:00 [INF] Executed DbCommand (19ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 22:59:19.307 +04:00 [INF] User Oasis logged in successfully.
2025-10-13 22:59:19.308 +04:00 [INF] Oasis logIn 
2025-10-13 22:59:19.309 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.AuthResultDto'.
2025-10-13 22:59:19.311 +04:00 [INF] Executed action GreenZone.API.Controllers.AuthController.Login (GreenZone.API) in 115.0419ms
2025-10-13 22:59:19.314 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 22:59:19.315 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7100/api/Auth/login - 200 null application/json; charset=utf-8 128.0862ms
2025-10-13 22:59:19.385 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:59:19.385 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:59:19.385 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 22:59:19.385 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 22:59:19.391 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:59:19.395 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:59:19.398 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:59:19.402 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:59:19.403 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 18.1102ms
2025-10-13 22:59:19.404 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 19.172ms
2025-10-13 22:59:19.405 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 20.1652ms
2025-10-13 22:59:19.406 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:59:19.406 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:59:19.406 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 21.0274ms
2025-10-13 22:59:19.422 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:59:19.425 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:59:19.430 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:59:19.431 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:59:19.432 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:59:19.434 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:59:19.444 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:59:19.444 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:59:19.446 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:59:19.448 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:59:19.450 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 10.0662ms
2025-10-13 22:59:19.451 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 22:59:19.451 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 14.144ms
2025-10-13 22:59:19.452 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 22:59:19.452 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:59:19.455 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:59:19.457 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:59:19.460 +04:00 [INF] CORS policy execution successful.
2025-10-13 22:59:19.461 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 54.7215ms
2025-10-13 22:59:19.461 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:59:19.462 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 56.4266ms
2025-10-13 22:59:19.464 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:59:19.469 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 22:59:19.474 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 22:59:19.478 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 22:59:19.481 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 22:59:19.482 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:59:19.485 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 22:59:19.486 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.1919ms
2025-10-13 22:59:19.488 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 7.8648ms
2025-10-13 22:59:19.489 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 22:59:19.490 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 22:59:19.491 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 40.7116ms
2025-10-13 22:59:19.493 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 41.185ms
2025-10-13 23:08:04.824 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - null null
2025-10-13 23:08:04.828 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:08:04.829 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - 204 null null 4.9734ms
2025-10-13 23:08:04.830 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - application/json null
2025-10-13 23:08:04.836 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:08:04.837 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 23:08:04.838 +04:00 [INF] Route matched with {action = "GetCustomerByUserId", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerByUserId(System.String) on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-13 23:08:04.876 +04:00 [INF] Executed DbCommand (27ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 23:08:04.879 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto'.
2025-10-13 23:08:04.881 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API) in 40.7252ms
2025-10-13 23:08:04.883 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 23:08:04.884 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - 200 null application/json; charset=utf-8 53.8144ms
2025-10-13 23:08:04.886 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - null null
2025-10-13 23:08:04.891 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:08:04.891 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - 204 null null 5.3918ms
2025-10-13 23:08:04.895 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - application/json null
2025-10-13 23:08:04.898 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:08:04.900 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:08:04.901 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 23:08:04.912 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 23:08:04.915 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 11.3105ms
2025-10-13 23:08:04.916 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:08:04.918 +04:00 [ERR] An unhandled exception has occurred while executing the request.
GreenZone.Application.Exceptions.NotFoundException: Basket not found for the customer.
   at GreenZone.Application.Service.BasketService.GetBasketByCustomerAsync(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\BasketService.cs:line 75
   at GreenZone.API.Controllers.BasketController.GetBasketByCustomerId(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\BasketController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-13 23:08:04.924 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - 500 null text/plain; charset=utf-8 28.5469ms
2025-10-13 23:10:04.203 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - null null
2025-10-13 23:10:04.208 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:10:04.210 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - 204 null null 6.7873ms
2025-10-13 23:10:04.213 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - application/json null
2025-10-13 23:10:04.218 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:10:04.220 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 23:10:04.221 +04:00 [INF] Route matched with {action = "GetCustomerByUserId", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerByUserId(System.String) on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-13 23:10:04.255 +04:00 [INF] Executed DbCommand (30ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 23:10:04.261 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto'.
2025-10-13 23:10:04.264 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API) in 39.611ms
2025-10-13 23:10:04.266 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 23:10:04.267 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - 200 null application/json; charset=utf-8 54.5663ms
2025-10-13 23:10:04.271 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - null null
2025-10-13 23:10:04.276 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:10:04.277 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - 204 null null 6.5581ms
2025-10-13 23:10:04.279 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - application/json null
2025-10-13 23:10:04.286 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:10:04.288 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:10:04.289 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 23:10:04.301 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 23:10:04.306 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 14.0849ms
2025-10-13 23:10:04.308 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:10:04.310 +04:00 [ERR] An unhandled exception has occurred while executing the request.
GreenZone.Application.Exceptions.NotFoundException: Basket not found for the customer.
   at GreenZone.Application.Service.BasketService.GetBasketByCustomerAsync(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\BasketService.cs:line 75
   at GreenZone.API.Controllers.BasketController.GetBasketByCustomerId(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\BasketController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-13 23:10:04.318 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - 500 null text/plain; charset=utf-8 38.5562ms
2025-10-13 23:12:02.171 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Auth/register - null null
2025-10-13 23:12:02.176 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:02.177 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Auth/register - 204 null null 6.3057ms
2025-10-13 23:12:02.181 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7100/api/Auth/register - application/json 210
2025-10-13 23:12:02.184 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:02.185 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.AuthController.Register (GreenZone.API)'
2025-10-13 23:12:02.190 +04:00 [INF] Route matched with {action = "Register", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(GreenZone.Contracts.Dtos.RegisterDto) on controller GreenZone.API.Controllers.AuthController (GreenZone.API).
2025-10-13 23:12:02.278 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-10-13 23:12:02.355 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 256), @p4='?' (DbType = Boolean), @p5='?' (Size = 100), @p6='?' (Size = 100), @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTimeOffset), @p9='?' (Size = 256), @p10='?' (Size = 256), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (DbType = Boolean), @p14='?' (Size = 4000), @p15='?' (DbType = Boolean), @p16='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AspNetUsers] ([Id], [AccessFailedCount], [ConcurrencyStamp], [Email], [EmailConfirmed], [FirstName], [LastName], [LockoutEnabled], [LockoutEnd], [NormalizedEmail], [NormalizedUserName], [PasswordHash], [PhoneNumber], [PhoneNumberConfirmed], [SecurityStamp], [TwoFactorEnabled], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2025-10-13 23:12:04.448 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-10-13 23:12:04.463 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (Size = 450), @__p_1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[UserId], [a].[RoleId]
FROM [AspNetUserRoles] AS [a]
WHERE [a].[UserId] = @__p_0 AND [a].[RoleId] = @__p_1
2025-10-13 23:12:04.467 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-10-13 23:12:04.477 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-10-13 23:12:04.510 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 450), @p18='?' (Size = 450), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p19='?' (Size = 4000), @p4='?' (Size = 256), @p5='?' (DbType = Boolean), @p6='?' (Size = 100), @p7='?' (Size = 100), @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTimeOffset), @p10='?' (Size = 256), @p11='?' (Size = 256), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (DbType = Boolean), @p15='?' (Size = 4000), @p16='?' (DbType = Boolean), @p17='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AspNetUserRoles] ([RoleId], [UserId])
VALUES (@p0, @p1);
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p2, [ConcurrencyStamp] = @p3, [Email] = @p4, [EmailConfirmed] = @p5, [FirstName] = @p6, [LastName] = @p7, [LockoutEnabled] = @p8, [LockoutEnd] = @p9, [NormalizedEmail] = @p10, [NormalizedUserName] = @p11, [PasswordHash] = @p12, [PhoneNumber] = @p13, [PhoneNumberConfirmed] = @p14, [SecurityStamp] = @p15, [TwoFactorEnabled] = @p16, [UserName] = @p17
OUTPUT 1
WHERE [Id] = @p18 AND [ConcurrencyStamp] = @p19;
2025-10-13 23:12:04.540 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (Size = 100), @p3='?' (DbType = Boolean), @p4='?' (DbType = DateTime2), @p5='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Customers] ([Id], [CreatedAt], [IdentityCard], [IsDeleted], [UpdatedAt], [UserId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2025-10-13 23:12:04.557 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Guid), @p3='?' (DbType = Boolean), @p4='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Baskets] ([Id], [CreatedAt], [CustomerId], [IsDeleted], [UpdatedAt])
VALUES (@p0, @p1, @p2, @p3, @p4);
2025-10-13 23:12:04.560 +04:00 [INF] Oasises registered
2025-10-13 23:12:04.561 +04:00 [INF] Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Identity.IdentityResult'.
2025-10-13 23:12:04.563 +04:00 [INF] Executed action GreenZone.API.Controllers.AuthController.Register (GreenZone.API) in 2371.1011ms
2025-10-13 23:12:04.564 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.AuthController.Register (GreenZone.API)'
2025-10-13 23:12:04.565 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7100/api/Auth/register - 200 null application/json; charset=utf-8 2384.5931ms
2025-10-13 23:12:05.413 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 23:12:05.413 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 23:12:05.418 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:05.422 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:05.424 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 10.2278ms
2025-10-13 23:12:05.425 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 11.4196ms
2025-10-13 23:12:05.452 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - null null
2025-10-13 23:12:05.453 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - null null
2025-10-13 23:12:05.453 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 23:12:05.455 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:05.459 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:05.462 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:05.463 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - 204 null null 11.2241ms
2025-10-13 23:12:05.464 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - 204 null null 11.1051ms
2025-10-13 23:12:05.465 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:12:05.467 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - application/json null
2025-10-13 23:12:05.474 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:12:05.478 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:05.481 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 23:12:05.483 +04:00 [INF] Route matched with {action = "GetCustomerByUserId", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerByUserId(System.String) on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-13 23:12:05.486 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:12:05.489 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:12:05.490 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 10.3506ms
2025-10-13 23:12:05.492 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 23:12:05.492 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:12:05.495 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:05.497 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 44.0826ms
2025-10-13 23:12:05.498 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:12:05.504 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:12:05.508 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:12:05.510 +04:00 [INF] Executed DbCommand (16ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 23:12:05.512 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:12:05.516 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto'.
2025-10-13 23:12:05.517 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 10.008ms
2025-10-13 23:12:05.518 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API) in 32.9545ms
2025-10-13 23:12:05.519 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - application/json null
2025-10-13 23:12:05.520 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:12:05.522 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 23:12:05.526 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:05.527 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 35.4044ms
2025-10-13 23:12:05.528 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - 200 null application/json; charset=utf-8 60.9576ms
2025-10-13 23:12:05.529 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 23:12:05.532 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - null null
2025-10-13 23:12:05.538 +04:00 [INF] Route matched with {action = "GetCustomerByUserId", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerByUserId(System.String) on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-13 23:12:05.541 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:05.544 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - 204 null null 12.1236ms
2025-10-13 23:12:05.545 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 23:12:05.545 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - application/json null
2025-10-13 23:12:05.551 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto'.
2025-10-13 23:12:05.553 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:05.555 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API) in 12.42ms
2025-10-13 23:12:05.557 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:12:05.558 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 23:12:05.559 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 23:12:05.560 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/ad7b0679-20d4-45d6-b753-16f0311debbb - 200 null application/json; charset=utf-8 41.113ms
2025-10-13 23:12:05.571 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 23:12:05.574 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 11.6954ms
2025-10-13 23:12:05.576 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:12:05.578 +04:00 [ERR] An unhandled exception has occurred while executing the request.
GreenZone.Application.Exceptions.NotFoundException: Basket not found for the customer.
   at GreenZone.Application.Service.BasketService.GetBasketByCustomerAsync(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\BasketService.cs:line 75
   at GreenZone.API.Controllers.BasketController.GetBasketByCustomerId(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\BasketController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-13 23:12:05.585 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - 500 null text/plain; charset=utf-8 39.6354ms
2025-10-13 23:12:05.586 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - application/json null
2025-10-13 23:12:05.592 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:05.593 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:12:05.594 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 23:12:05.598 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 23:12:05.601 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 4.5072ms
2025-10-13 23:12:05.603 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:12:05.604 +04:00 [ERR] An unhandled exception has occurred while executing the request.
GreenZone.Application.Exceptions.NotFoundException: Basket not found for the customer.
   at GreenZone.Application.Service.BasketService.GetBasketByCustomerAsync(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\BasketService.cs:line 75
   at GreenZone.API.Controllers.BasketController.GetBasketByCustomerId(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\BasketController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-13 23:12:05.611 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/ac60ee72-40fb-4fbc-baf8-b5b1ebea4271 - 500 null text/plain; charset=utf-8 25.4098ms
2025-10-13 23:12:14.769 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/auth/confirm-email?userId=b3b7d117-9f6c-4ba1-9404-a066da56c779&code=Q2ZESjhPSnhIVjZ1emlaTHFRbk0rZkFHNXVOdmFGR2dOOWQveHdsbkVUNXhpcHoyTDl5cmk4ck1QcTE5M1owR0hRd2JwVVNaN2Rrb1g5bUhVa0FGTEt4eGJGTXV0bVJLZHVaYm5DRGlVN3RMTSs4aE9yMUo1ZWx0VDk5Nm05SFpMN2N3L2hoanptS2dwTkg0dWVzeHJDbmhNbXhqWTdtQlI4aFEySGFkSU9QbS9MRFovRDdlL0tDRkdJYlR4MlloWnNCZTNreGlxZjFPOEs2RTd1MVIwWTRDV2ltZE9KTFRNLzd2OUNDNTltNk5jKzY4SnN3SXpLOWVUZHd3aG5ZMEN6Q2VJUT09 - null null
2025-10-13 23:12:14.776 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.AuthController.ConfirmEmail (GreenZone.API)'
2025-10-13 23:12:14.779 +04:00 [INF] Route matched with {action = "ConfirmEmail", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ConfirmEmail(System.String, System.String) on controller GreenZone.API.Controllers.AuthController (GreenZone.API).
2025-10-13 23:12:14.792 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-10-13 23:12:14.798 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-10-13 23:12:14.807 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[@p16='?' (Size = 450), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p17='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (Size = 100), @p5='?' (Size = 100), @p6='?' (DbType = Boolean), @p7='?' (DbType = DateTimeOffset), @p8='?' (Size = 256), @p9='?' (Size = 256), @p10='?' (Size = 4000), @p11='?' (Size = 4000), @p12='?' (DbType = Boolean), @p13='?' (Size = 4000), @p14='?' (DbType = Boolean), @p15='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [FirstName] = @p4, [LastName] = @p5, [LockoutEnabled] = @p6, [LockoutEnd] = @p7, [NormalizedEmail] = @p8, [NormalizedUserName] = @p9, [PasswordHash] = @p10, [PhoneNumber] = @p11, [PhoneNumberConfirmed] = @p12, [SecurityStamp] = @p13, [TwoFactorEnabled] = @p14, [UserName] = @p15
OUTPUT 1
WHERE [Id] = @p16 AND [ConcurrencyStamp] = @p17;
2025-10-13 23:12:14.810 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-10-13 23:12:14.814 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p16='?' (Size = 450), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p17='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (Size = 100), @p5='?' (Size = 100), @p6='?' (DbType = Boolean), @p7='?' (DbType = DateTimeOffset), @p8='?' (Size = 256), @p9='?' (Size = 256), @p10='?' (Size = 4000), @p11='?' (Size = 4000), @p12='?' (DbType = Boolean), @p13='?' (Size = 4000), @p14='?' (DbType = Boolean), @p15='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [FirstName] = @p4, [LastName] = @p5, [LockoutEnabled] = @p6, [LockoutEnd] = @p7, [NormalizedEmail] = @p8, [NormalizedUserName] = @p9, [PasswordHash] = @p10, [PhoneNumber] = @p11, [PhoneNumberConfirmed] = @p12, [SecurityStamp] = @p13, [TwoFactorEnabled] = @p14, [UserName] = @p15
OUTPUT 1
WHERE [Id] = @p16 AND [ConcurrencyStamp] = @p17;
2025-10-13 23:12:14.817 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2025-10-13 23:12:14.819 +04:00 [INF] Executed action GreenZone.API.Controllers.AuthController.ConfirmEmail (GreenZone.API) in 37.9206ms
2025-10-13 23:12:14.820 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.AuthController.ConfirmEmail (GreenZone.API)'
2025-10-13 23:12:14.821 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/auth/confirm-email?userId=b3b7d117-9f6c-4ba1-9404-a066da56c779&code=Q2ZESjhPSnhIVjZ1emlaTHFRbk0rZkFHNXVOdmFGR2dOOWQveHdsbkVUNXhpcHoyTDl5cmk4ck1QcTE5M1owR0hRd2JwVVNaN2Rrb1g5bUhVa0FGTEt4eGJGTXV0bVJLZHVaYm5DRGlVN3RMTSs4aE9yMUo1ZWx0VDk5Nm05SFpMN2N3L2hoanptS2dwTkg0dWVzeHJDbmhNbXhqWTdtQlI4aFEySGFkSU9QbS9MRFovRDdlL0tDRkdJYlR4MlloWnNCZTNreGlxZjFPOEs2RTd1MVIwWTRDV2ltZE9KTFRNLzd2OUNDNTltNk5jKzY4SnN3SXpLOWVUZHd3aG5ZMEN6Q2VJUT09 - 200 null text/plain; charset=utf-8 51.9128ms
2025-10-13 23:12:23.417 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 23:12:23.417 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 23:12:23.417 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 23:12:23.417 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 23:12:23.421 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:23.425 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:23.428 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:23.430 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:23.431 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 14.0337ms
2025-10-13 23:12:23.432 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 14.77ms
2025-10-13 23:12:23.433 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 23:12:23.433 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 23:12:23.433 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 15.931ms
2025-10-13 23:12:23.436 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:23.446 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:23.447 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 29.634ms
2025-10-13 23:12:23.452 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:12:23.453 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:12:23.458 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:12:23.459 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 23:12:23.474 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 23:12:23.474 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:12:23.476 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:12:23.479 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:12:23.481 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 17.6499ms
2025-10-13 23:12:23.482 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 23:12:23.483 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 21.6303ms
2025-10-13 23:12:23.483 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 23:12:23.484 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:12:23.488 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:23.489 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:12:23.493 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:23.494 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 61.3209ms
2025-10-13 23:12:23.496 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:12:23.497 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 63.4545ms
2025-10-13 23:12:23.498 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:12:23.502 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 23:12:23.508 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:12:23.512 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 23:12:23.514 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:12:23.515 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:12:23.518 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:12:23.520 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.0687ms
2025-10-13 23:12:23.521 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.4136ms
2025-10-13 23:12:23.523 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:12:23.525 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:12:23.526 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 43.784ms
2025-10-13 23:12:23.527 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 43.6901ms
2025-10-13 23:12:24.339 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 23:12:24.339 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 23:12:24.342 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:24.345 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:24.347 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:12:24.348 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:12:24.349 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 23:12:24.350 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:12:24.353 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 23:12:24.355 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:12:24.356 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:12:24.358 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:12:24.359 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 7.7519ms
2025-10-13 23:12:24.361 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 6.9594ms
2025-10-13 23:12:24.362 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:12:24.364 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:12:24.365 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 26.5878ms
2025-10-13 23:12:24.367 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 27.8235ms
2025-10-13 23:12:37.790 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - null null
2025-10-13 23:12:37.795 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:37.796 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Auth/login - 204 null null 6.3271ms
2025-10-13 23:12:37.797 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7100/api/Auth/login - application/json 44
2025-10-13 23:12:37.803 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:37.805 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 23:12:37.806 +04:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(GreenZone.Contracts.Dtos.LogInDto) on controller GreenZone.API.Controllers.AuthController (GreenZone.API).
2025-10-13 23:12:37.814 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-10-13 23:12:37.880 +04:00 [INF] User Oasises logged in successfully.
2025-10-13 23:12:37.888 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-10-13 23:12:37.907 +04:00 [INF] Executed DbCommand (17ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 23:12:37.912 +04:00 [INF] User Oasises logged in successfully.
2025-10-13 23:12:37.914 +04:00 [INF] Oasises logIn 
2025-10-13 23:12:37.915 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.AuthResultDto'.
2025-10-13 23:12:37.917 +04:00 [INF] Executed action GreenZone.API.Controllers.AuthController.Login (GreenZone.API) in 108.4566ms
2025-10-13 23:12:37.918 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.AuthController.Login (GreenZone.API)'
2025-10-13 23:12:37.919 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7100/api/Auth/login - 200 null application/json; charset=utf-8 122.2709ms
2025-10-13 23:12:38.008 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 23:12:38.009 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 23:12:38.009 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 23:12:38.010 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - null null
2025-10-13 23:12:38.010 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - null null
2025-10-13 23:12:38.010 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 23:12:38.010 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 23:12:38.010 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 23:12:38.012 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:38.015 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:38.018 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:38.022 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:38.026 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:38.029 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:38.032 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:38.035 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:38.036 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 28.4067ms
2025-10-13 23:12:38.037 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 27.8734ms
2025-10-13 23:12:38.038 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 28.5263ms
2025-10-13 23:12:38.039 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 23:12:38.039 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - 204 null null 29.3231ms
2025-10-13 23:12:38.039 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 23:12:38.039 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 23:12:38.040 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - application/json null
2025-10-13 23:12:38.040 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - 204 null null 30.4072ms
2025-10-13 23:12:38.041 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 31.5773ms
2025-10-13 23:12:38.042 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 32.4582ms
2025-10-13 23:12:38.043 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 33.533ms
2025-10-13 23:12:38.059 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:38.068 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:38.071 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:38.075 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:38.094 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:12:38.095 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:12:38.096 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:12:38.097 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 23:12:38.099 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 23:12:38.100 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:12:38.102 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:12:38.103 +04:00 [INF] Route matched with {action = "GetCustomerByUserId", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerByUserId(System.String) on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-13 23:12:38.106 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 23:12:38.108 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:12:38.113 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:12:38.114 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:12:38.115 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:12:38.117 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.5598ms
2025-10-13 23:12:38.118 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 23:12:38.120 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:12:38.122 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 14.7393ms
2025-10-13 23:12:38.122 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 23:12:38.124 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 23:12:38.124 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:12:38.127 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:38.129 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 20.111ms
2025-10-13 23:12:38.130 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 23:12:38.131 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:12:38.134 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:38.137 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto'.
2025-10-13 23:12:38.138 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 99.2424ms
2025-10-13 23:12:38.139 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:12:38.141 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:12:38.144 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:38.145 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 105.7819ms
2025-10-13 23:12:38.146 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:12:38.147 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API) in 36.6166ms
2025-10-13 23:12:38.149 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - application/json null
2025-10-13 23:12:38.152 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 23:12:38.153 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 114.0969ms
2025-10-13 23:12:38.154 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:12:38.159 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:12:38.161 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 23:12:38.163 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:38.167 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 23:12:38.171 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:12:38.175 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:12:38.175 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - 200 null application/json; charset=utf-8 135.3184ms
2025-10-13 23:12:38.176 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 23:12:38.177 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - null null
2025-10-13 23:12:38.179 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:12:38.182 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:12:38.184 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:12:38.189 +04:00 [INF] Route matched with {action = "GetCustomerByUserId", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerByUserId(System.String) on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-13 23:12:38.192 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:38.194 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 27.9688ms
2025-10-13 23:12:38.196 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:12:38.197 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 23.6591ms
2025-10-13 23:12:38.201 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - 204 null null 23.9152ms
2025-10-13 23:12:38.202 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 23:12:38.203 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - application/json null
2025-10-13 23:12:38.203 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:12:38.204 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 23.3287ms
2025-10-13 23:12:38.206 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:12:38.213 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto'.
2025-10-13 23:12:38.216 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:38.217 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 99.1733ms
2025-10-13 23:12:38.219 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:12:38.220 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 98.1299ms
2025-10-13 23:12:38.222 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API) in 22.2459ms
2025-10-13 23:12:38.223 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:12:38.228 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 97.8448ms
2025-10-13 23:12:38.232 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 23:12:38.234 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 23:12:38.239 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - 200 null application/json; charset=utf-8 90.0909ms
2025-10-13 23:12:38.251 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 23:12:38.260 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-13 23:12:38.264 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 22.424ms
2025-10-13 23:12:38.265 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - application/json null
2025-10-13 23:12:38.265 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:12:38.269 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:38.270 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - 200 null application/json; charset=utf-8 67.5444ms
2025-10-13 23:12:38.271 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:12:38.276 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 23:12:38.279 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 23:12:38.282 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-13 23:12:38.284 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 5.9738ms
2025-10-13 23:12:38.285 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:12:38.287 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - 200 null application/json; charset=utf-8 21.907ms
2025-10-13 23:12:52.106 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 23:12:52.107 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 23:12:52.107 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 23:12:52.111 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:52.114 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:52.118 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:52.119 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 13.0229ms
2025-10-13 23:12:52.121 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 13.9143ms
2025-10-13 23:12:52.121 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 23:12:52.121 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 14.4437ms
2025-10-13 23:12:52.122 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 23:12:52.123 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 23:12:52.134 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:52.142 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:52.146 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:52.147 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:12:52.148 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:12:52.149 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:12:52.151 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 23:12:52.152 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:12:52.154 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:12:52.158 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 23:12:52.160 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:12:52.162 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:12:52.163 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:12:52.166 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:12:52.169 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:12:52.170 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 14.0919ms
2025-10-13 23:12:52.171 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 23:12:52.172 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 13.8305ms
2025-10-13 23:12:52.173 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 23:12:52.174 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 13.3706ms
2025-10-13 23:12:52.176 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:12:52.179 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:52.181 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:12:52.184 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:52.186 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:12:52.187 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 66.1697ms
2025-10-13 23:12:52.187 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - null null
2025-10-13 23:12:52.188 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:12:52.190 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 67.349ms
2025-10-13 23:12:52.191 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:12:52.192 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 68.7376ms
2025-10-13 23:12:52.200 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:52.201 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 23:12:52.207 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:12:52.212 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - 204 null null 24.2587ms
2025-10-13 23:12:52.214 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - application/json null
2025-10-13 23:12:52.216 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 23:12:52.218 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:12:52.224 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:52.227 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:12:52.230 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:12:52.231 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 23:12:52.232 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 17.7821ms
2025-10-13 23:12:52.234 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 17.3811ms
2025-10-13 23:12:52.235 +04:00 [INF] Route matched with {action = "GetCustomerByUserId", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerByUserId(System.String) on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-13 23:12:52.237 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:12:52.238 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:12:52.242 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 70.784ms
2025-10-13 23:12:52.243 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 23:12:52.243 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 70.3381ms
2025-10-13 23:12:52.250 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto'.
2025-10-13 23:12:52.255 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API) in 15.0029ms
2025-10-13 23:12:52.257 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 23:12:52.258 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - 200 null application/json; charset=utf-8 44.7007ms
2025-10-13 23:12:52.264 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - null null
2025-10-13 23:12:52.267 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:52.268 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - 204 null null 4.4278ms
2025-10-13 23:12:52.270 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - application/json null
2025-10-13 23:12:52.275 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:12:52.277 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:12:52.278 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 23:12:52.281 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 23:12:52.285 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-13 23:12:52.286 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 6.6196ms
2025-10-13 23:12:52.288 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:12:52.289 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - 200 null application/json; charset=utf-8 19.4027ms
2025-10-13 23:13:15.609 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 23:13:15.610 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 23:13:15.610 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 23:13:15.610 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 23:13:15.611 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 23:13:15.611 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 23:13:15.614 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:15.618 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:15.621 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:15.624 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:15.628 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:15.632 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:15.633 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 23.7739ms
2025-10-13 23:13:15.634 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 24.4203ms
2025-10-13 23:13:15.635 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 25.055ms
2025-10-13 23:13:15.636 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 23:13:15.636 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 23:13:15.636 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 25.7533ms
2025-10-13 23:13:15.637 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 26.572ms
2025-10-13 23:13:15.638 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 27.3574ms
2025-10-13 23:13:15.653 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:15.656 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:15.669 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:13:15.670 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:13:15.672 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 23:13:15.674 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:13:15.678 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 23:13:15.681 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:13:15.683 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:13:15.686 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:13:15.688 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 11.726ms
2025-10-13 23:13:15.689 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 23:13:15.690 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 10.1441ms
2025-10-13 23:13:15.690 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 23:13:15.691 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:13:15.696 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:15.698 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:13:15.702 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:15.703 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 67.343ms
2025-10-13 23:13:15.704 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:13:15.705 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 69.5368ms
2025-10-13 23:13:15.706 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:13:15.711 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 23:13:15.716 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:13:15.720 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 23:13:15.722 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:13:15.724 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:13:15.727 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:13:15.729 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.2289ms
2025-10-13 23:13:15.730 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.4895ms
2025-10-13 23:13:15.731 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 23:13:15.732 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:13:15.734 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:13:15.737 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:15.738 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 48.9834ms
2025-10-13 23:13:15.740 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 49.4648ms
2025-10-13 23:13:15.741 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:13:15.750 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:13:15.754 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:13:15.757 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:13:15.759 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 6.4012ms
2025-10-13 23:13:15.761 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 23:13:15.761 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:13:15.765 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:15.766 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 35.0876ms
2025-10-13 23:13:15.768 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:13:15.773 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:13:15.779 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:13:15.782 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:13:15.784 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 6.5909ms
2025-10-13 23:13:15.786 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:13:15.787 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 26.4191ms
2025-10-13 23:13:34.682 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product/f17fe991-aa7c-445a-a9cc-beae4a564a7d - null null
2025-10-13 23:13:34.682 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product/f17fe991-aa7c-445a-a9cc-beae4a564a7d - null null
2025-10-13 23:13:34.682 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 23:13:34.682 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 23:13:34.686 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:34.689 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:34.692 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:34.695 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:34.696 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product/f17fe991-aa7c-445a-a9cc-beae4a564a7d - 204 null null 13.8197ms
2025-10-13 23:13:34.697 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product/f17fe991-aa7c-445a-a9cc-beae4a564a7d - 204 null null 14.6724ms
2025-10-13 23:13:34.697 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 15.5408ms
2025-10-13 23:13:34.698 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product/f17fe991-aa7c-445a-a9cc-beae4a564a7d - application/json null
2025-10-13 23:13:34.698 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 23:13:34.698 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 16.4333ms
2025-10-13 23:13:34.712 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:34.715 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:34.720 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetProductById (GreenZone.API)'
2025-10-13 23:13:34.721 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:13:34.724 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:13:34.725 +04:00 [INF] Route matched with {action = "GetProductById", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductById(System.Guid) on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 23:13:34.737 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:13:34.739 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:13:34.740 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 14.1881ms
2025-10-13 23:13:34.741 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 23:13:34.742 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:13:34.746 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:34.747 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 48.9686ms
2025-10-13 23:13:34.749 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:13:34.751 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CreatedAt], [t].[Description], [t].[ImageUrl], [t].[IsDeleted], [t].[MaxThickness], [t].[MinThickness], [t].[PricePerSquareMeter], [t].[Title], [t].[UpdatedAt], [t].[Id0], [t].[CreatedAt0], [t].[Description0], [t].[IsDeleted0], [t].[Name], [t].[UpdatedAt0], [p0].[Id], [p0].[CreatedAt], [p0].[DocumentUrl], [p0].[IsDeleted], [p0].[ProductId], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id] AS [Id0], [c].[CreatedAt] AS [CreatedAt0], [c].[Description] AS [Description0], [c].[IsDeleted] AS [IsDeleted0], [c].[Name], [c].[UpdatedAt] AS [UpdatedAt0]
    FROM [Products] AS [p]
    INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
    WHERE [p].[Id] = @__id_0 AND [p].[IsDeleted] = CAST(0 AS bit)
) AS [t]
LEFT JOIN [ProductDocuments] AS [p0] ON [t].[Id] = [p0].[ProductId]
ORDER BY [t].[Id], [t].[Id0]
2025-10-13 23:13:34.754 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:13:34.759 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:13:34.762 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto'.
2025-10-13 23:13:34.762 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:13:34.763 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetProductById (GreenZone.API) in 34.8561ms
2025-10-13 23:13:34.765 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product/f17fe991-aa7c-445a-a9cc-beae4a564a7d - application/json null
2025-10-13 23:13:34.765 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 6.8987ms
2025-10-13 23:13:34.767 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetProductById (GreenZone.API)'
2025-10-13 23:13:34.769 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:34.770 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:13:34.772 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product/f17fe991-aa7c-445a-a9cc-beae4a564a7d - 200 null application/json; charset=utf-8 74.0584ms
2025-10-13 23:13:34.773 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetProductById (GreenZone.API)'
2025-10-13 23:13:34.774 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 32.3094ms
2025-10-13 23:13:34.778 +04:00 [INF] Route matched with {action = "GetProductById", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductById(System.Guid) on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 23:13:34.785 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CreatedAt], [t].[Description], [t].[ImageUrl], [t].[IsDeleted], [t].[MaxThickness], [t].[MinThickness], [t].[PricePerSquareMeter], [t].[Title], [t].[UpdatedAt], [t].[Id0], [t].[CreatedAt0], [t].[Description0], [t].[IsDeleted0], [t].[Name], [t].[UpdatedAt0], [p0].[Id], [p0].[CreatedAt], [p0].[DocumentUrl], [p0].[IsDeleted], [p0].[ProductId], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id] AS [Id0], [c].[CreatedAt] AS [CreatedAt0], [c].[Description] AS [Description0], [c].[IsDeleted] AS [IsDeleted0], [c].[Name], [c].[UpdatedAt] AS [UpdatedAt0]
    FROM [Products] AS [p]
    INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
    WHERE [p].[Id] = @__id_0 AND [p].[IsDeleted] = CAST(0 AS bit)
) AS [t]
LEFT JOIN [ProductDocuments] AS [p0] ON [t].[Id] = [p0].[ProductId]
ORDER BY [t].[Id], [t].[Id0]
2025-10-13 23:13:34.788 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto'.
2025-10-13 23:13:34.790 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetProductById (GreenZone.API) in 6.0901ms
2025-10-13 23:13:34.792 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetProductById (GreenZone.API)'
2025-10-13 23:13:34.793 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product/f17fe991-aa7c-445a-a9cc-beae4a564a7d - 200 null application/json; charset=utf-8 28.2825ms
2025-10-13 23:13:43.775 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - null null
2025-10-13 23:13:43.779 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:43.781 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - 204 null null 5.3262ms
2025-10-13 23:13:43.782 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - application/json null
2025-10-13 23:13:43.788 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:43.790 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 23:13:43.791 +04:00 [INF] Route matched with {action = "GetCustomerByUserId", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerByUserId(System.String) on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-13 23:13:43.814 +04:00 [INF] Executed DbCommand (20ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 23:13:43.819 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto'.
2025-10-13 23:13:43.821 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API) in 27.6234ms
2025-10-13 23:13:43.823 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 23:13:43.824 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - 200 null application/json; charset=utf-8 41.516ms
2025-10-13 23:13:43.826 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c/items - null null
2025-10-13 23:13:43.829 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:43.830 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c/items - 204 null null 3.8521ms
2025-10-13 23:13:43.831 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c/items - application/json 115
2025-10-13 23:13:43.834 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:43.835 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.AddItemsToBasket (GreenZone.API)'
2025-10-13 23:13:43.838 +04:00 [INF] Route matched with {action = "AddItemsToBasket", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddItemsToBasket(System.Guid, GreenZone.Contracts.Dtos.BasketItemsDtos.BasketItemsCreateDto) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 23:13:43.870 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 23:13:43.891 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Boolean), @p4='?' (DbType = Guid), @p5='?' (DbType = Int32), @p6='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [BasketItems] ([Id], [BasketId], [CreatedAt], [IsDeleted], [ProductId], [Quantity], [UpdatedAt])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-10-13 23:13:43.894 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 23:13:43.897 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-13 23:13:43.899 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.AddItemsToBasket (GreenZone.API) in 59.0251ms
2025-10-13 23:13:43.900 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.AddItemsToBasket (GreenZone.API)'
2025-10-13 23:13:43.902 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c/items - 200 null application/json; charset=utf-8 71.1607ms
2025-10-13 23:13:43.904 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - null null
2025-10-13 23:13:43.906 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:43.907 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - 204 null null 3.2149ms
2025-10-13 23:13:43.908 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - application/json null
2025-10-13 23:13:43.911 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:43.912 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:13:43.913 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 23:13:43.916 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 23:13:43.919 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-13 23:13:43.920 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 5.9107ms
2025-10-13 23:13:43.922 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:13:43.923 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - 200 null application/json; charset=utf-8 14.8056ms
2025-10-13 23:13:45.594 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/b3b7d117-9f6c-4ba1-9404-a066da56c779 - null null
2025-10-13 23:13:45.599 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:45.600 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/b3b7d117-9f6c-4ba1-9404-a066da56c779 - 204 null null 5.9767ms
2025-10-13 23:13:45.601 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/b3b7d117-9f6c-4ba1-9404-a066da56c779 - application/json null
2025-10-13 23:13:45.608 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:45.609 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:13:45.611 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 23:13:45.615 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 23:13:45.618 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 4.6634ms
2025-10-13 23:13:45.620 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:13:45.622 +04:00 [ERR] An unhandled exception has occurred while executing the request.
GreenZone.Application.Exceptions.NotFoundException: Basket not found for the customer.
   at GreenZone.Application.Service.BasketService.GetBasketByCustomerAsync(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\BasketService.cs:line 75
   at GreenZone.API.Controllers.BasketController.GetBasketByCustomerId(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\BasketController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-13 23:13:45.630 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/b3b7d117-9f6c-4ba1-9404-a066da56c779 - 500 null text/plain; charset=utf-8 28.8596ms
2025-10-13 23:13:45.732 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - application/json null
2025-10-13 23:13:45.735 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:45.736 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 23:13:45.737 +04:00 [INF] Route matched with {action = "GetCustomerByUserId", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerByUserId(System.String) on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-13 23:13:45.741 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 23:13:45.745 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto'.
2025-10-13 23:13:45.747 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API) in 7.4892ms
2025-10-13 23:13:45.748 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - application/json null
2025-10-13 23:13:45.749 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 23:13:45.752 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:45.754 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - 200 null application/json; charset=utf-8 22.0503ms
2025-10-13 23:13:45.755 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 23:13:45.759 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - application/json null
2025-10-13 23:13:45.759 +04:00 [INF] Route matched with {action = "GetCustomerByUserId", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerByUserId(System.String) on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-13 23:13:45.761 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:45.765 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:13:45.765 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 23:13:45.766 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 23:13:45.769 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto'.
2025-10-13 23:13:45.773 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API) in 9.104ms
2025-10-13 23:13:45.773 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 23:13:45.775 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 23:13:45.778 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-13 23:13:45.779 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - 200 null application/json; charset=utf-8 31.1623ms
2025-10-13 23:13:45.781 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 9.9108ms
2025-10-13 23:13:45.782 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - application/json null
2025-10-13 23:13:45.787 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:13:45.790 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:45.791 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - 200 null application/json; charset=utf-8 32.7096ms
2025-10-13 23:13:45.792 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:13:45.793 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 23:13:45.793 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 23:13:45.798 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 23:13:45.801 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:45.804 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:45.808 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 15.2165ms
2025-10-13 23:13:45.808 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 23:13:45.809 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 23:13:45.809 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 16.4659ms
2025-10-13 23:13:45.810 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 23:13:45.815 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-13 23:13:45.819 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:45.826 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:45.828 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 21.3842ms
2025-10-13 23:13:45.829 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:13:45.831 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:13:45.832 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:13:45.834 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 23:13:45.835 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:13:45.836 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - 200 null application/json; charset=utf-8 54.7843ms
2025-10-13 23:13:45.842 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 23:13:45.842 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:13:45.849 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:13:45.851 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:13:45.853 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 13.9049ms
2025-10-13 23:13:45.853 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 23:13:45.854 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.829ms
2025-10-13 23:13:45.855 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 23:13:45.855 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:13:45.858 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:45.860 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:13:45.863 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:45.865 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 55.8129ms
2025-10-13 23:13:45.867 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:13:45.868 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 57.5262ms
2025-10-13 23:13:45.869 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:13:45.874 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 23:13:45.878 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:13:45.881 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 23:13:45.883 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:13:45.884 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:13:45.886 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:13:45.887 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 7.0198ms
2025-10-13 23:13:45.888 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 5.8732ms
2025-10-13 23:13:45.890 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:13:45.891 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:13:45.892 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 39.0886ms
2025-10-13 23:13:45.894 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 39.555ms
2025-10-13 23:13:52.076 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c/items - null null
2025-10-13 23:13:52.081 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:52.083 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c/items - 204 null null 6.5067ms
2025-10-13 23:13:52.084 +04:00 [INF] Request starting HTTP/2 PUT https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c/items - application/json 67
2025-10-13 23:13:52.089 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:52.091 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API)'
2025-10-13 23:13:52.095 +04:00 [INF] Route matched with {action = "UpdateItemsInBasket", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateItemsInBasket(System.Guid, GreenZone.Contracts.Dtos.BasketItemsDtos.BasketItemsUpdateDto) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 23:13:52.107 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 23:13:52.124 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[@__productId_0='?' (DbType = Guid), @__basketId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BasketId], [b].[CreatedAt], [b].[IsDeleted], [b].[ProductId], [b].[Quantity], [b].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [BasketItems] AS [b]
INNER JOIN [Products] AS [p] ON [b].[ProductId] = [p].[Id]
WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[ProductId] = @__productId_0 AND [b].[BasketId] = @__basketId_1
2025-10-13 23:13:52.150 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@p6='?' (DbType = Guid), @p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [BasketItems] SET [BasketId] = @p0, [CreatedAt] = @p1, [IsDeleted] = @p2, [ProductId] = @p3, [Quantity] = @p4, [UpdatedAt] = @p5
OUTPUT 1
WHERE [Id] = @p6;
2025-10-13 23:13:52.156 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 23:13:52.160 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-13 23:13:52.161 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API) in 63.4072ms
2025-10-13 23:13:52.163 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API)'
2025-10-13 23:13:52.165 +04:00 [INF] Request finished HTTP/2 PUT https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c/items - 200 null application/json; charset=utf-8 80.3778ms
2025-10-13 23:13:52.168 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - null null
2025-10-13 23:13:52.171 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:52.173 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - 204 null null 4.4431ms
2025-10-13 23:13:52.175 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - application/json null
2025-10-13 23:13:52.179 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:52.180 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:13:52.182 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 23:13:52.186 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 23:13:52.189 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-13 23:13:52.191 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 6.9083ms
2025-10-13 23:13:52.193 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:13:52.194 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - 200 null application/json; charset=utf-8 19.5932ms
2025-10-13 23:13:52.197 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 23:13:52.197 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 23:13:52.200 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:52.204 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:52.205 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 8.093ms
2025-10-13 23:13:52.206 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 8.9098ms
2025-10-13 23:13:52.207 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 23:13:52.207 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 23:13:52.217 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:52.219 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:13:52.220 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:13:52.222 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:13:52.223 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 23:13:52.224 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:13:52.227 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 23:13:52.230 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:13:52.231 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:13:52.233 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:13:52.235 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.1606ms
2025-10-13 23:13:52.236 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.0403ms
2025-10-13 23:13:52.238 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:13:52.239 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:13:52.241 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 34.2163ms
2025-10-13 23:13:52.242 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 35.2ms
2025-10-13 23:17:14.743 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - null null
2025-10-13 23:17:14.749 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:17:14.751 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - 204 null null 6.9925ms
2025-10-13 23:17:14.759 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - application/json null
2025-10-13 23:17:14.763 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:17:14.765 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:17:14.766 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 23:17:14.786 +04:00 [INF] Executed DbCommand (16ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 23:17:14.790 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-13 23:17:14.792 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 22.3983ms
2025-10-13 23:17:14.794 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:17:14.796 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - 200 null application/json; charset=utf-8 36.5825ms
2025-10-13 23:17:14.798 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 23:17:14.799 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 23:17:14.803 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:17:14.806 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:17:14.807 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 8.4927ms
2025-10-13 23:17:14.808 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 9.3499ms
2025-10-13 23:17:14.810 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 23:17:14.810 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 23:17:14.819 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:17:14.822 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:17:14.823 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:17:14.824 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:17:14.825 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 23:17:14.827 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:17:14.834 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 23:17:14.836 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:17:14.837 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:17:14.841 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:17:14.842 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.7016ms
2025-10-13 23:17:14.843 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.0702ms
2025-10-13 23:17:14.845 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:17:14.847 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:17:14.848 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 38.6228ms
2025-10-13 23:17:14.850 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 40.178ms
2025-10-13 23:26:32.074 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - null null
2025-10-13 23:26:32.079 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:26:32.081 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - 204 null null 6.7675ms
2025-10-13 23:26:32.086 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - application/json null
2025-10-13 23:26:32.091 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:26:32.093 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:26:32.094 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 23:26:32.122 +04:00 [INF] Executed DbCommand (16ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 23:26:32.127 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-13 23:26:32.131 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 33.0694ms
2025-10-13 23:26:32.133 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:26:32.135 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - 200 null application/json; charset=utf-8 48.5785ms
2025-10-13 23:26:32.138 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 23:26:32.138 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 23:26:32.143 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:26:32.147 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:26:32.148 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 10.259ms
2025-10-13 23:26:32.149 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 10.8775ms
2025-10-13 23:26:32.150 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 23:26:32.151 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 23:26:32.159 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:26:32.162 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:26:32.163 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:26:32.164 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:26:32.165 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 23:26:32.166 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:26:32.174 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 23:26:32.177 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:26:32.179 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.0323ms
2025-10-13 23:26:32.179 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:26:32.181 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:26:32.183 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:26:32.184 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 34.2033ms
2025-10-13 23:26:32.186 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 14.7569ms
2025-10-13 23:26:32.192 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:26:32.193 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 42.5201ms
2025-10-13 23:37:20.308 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/category - null null
2025-10-13 23:37:20.314 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:37:20.316 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/category - 204 null null 7.6287ms
2025-10-13 23:37:20.321 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/category - application/json null
2025-10-13 23:37:20.323 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - null null
2025-10-13 23:37:20.325 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:37:20.330 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:37:20.332 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:37:20.333 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - null null
2025-10-13 23:37:20.333 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - 204 null null 9.4318ms
2025-10-13 23:37:20.334 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:37:20.335 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - application/json null
2025-10-13 23:37:20.339 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:37:20.349 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:37:20.350 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - 204 null null 17.76ms
2025-10-13 23:37:20.352 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 23:37:20.357 +04:00 [INF] Route matched with {action = "GetCustomerByUserId", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerByUserId(System.String) on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-13 23:37:20.360 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:37:20.364 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:37:20.366 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 19.3767ms
2025-10-13 23:37:20.367 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:37:20.369 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/category - 200 null application/json; charset=utf-8 48.1415ms
2025-10-13 23:37:20.383 +04:00 [INF] Executed DbCommand (17ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 23:37:20.386 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto'.
2025-10-13 23:37:20.388 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API) in 27.4524ms
2025-10-13 23:37:20.389 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - application/json null
2025-10-13 23:37:20.389 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 23:37:20.393 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:37:20.394 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - 200 null application/json; charset=utf-8 59.3557ms
2025-10-13 23:37:20.395 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 23:37:20.400 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - null null
2025-10-13 23:37:20.400 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - null null
2025-10-13 23:37:20.400 +04:00 [INF] Route matched with {action = "GetCustomerByUserId", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerByUserId(System.String) on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-13 23:37:20.403 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:37:20.406 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:37:20.409 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - 204 null null 9.8515ms
2025-10-13 23:37:20.410 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - 204 null null 10.5472ms
2025-10-13 23:37:20.411 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 23:37:20.411 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - application/json null
2025-10-13 23:37:20.422 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto'.
2025-10-13 23:37:20.425 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:37:20.426 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API) in 17.765ms
2025-10-13 23:37:20.427 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:37:20.429 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 23:37:20.430 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 23:37:20.431 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - 200 null application/json; charset=utf-8 42.6004ms
2025-10-13 23:37:20.446 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 23:37:20.448 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-13 23:37:20.450 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 16.5198ms
2025-10-13 23:37:20.451 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - application/json null
2025-10-13 23:37:20.451 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:37:20.454 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:37:20.455 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - 200 null application/json; charset=utf-8 44.037ms
2025-10-13 23:37:20.456 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:37:20.457 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 23:37:20.457 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 23:37:20.461 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 23:37:20.464 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:37:20.466 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:37:20.470 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 12.6064ms
2025-10-13 23:37:20.470 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 23:37:20.470 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 13.1478ms
2025-10-13 23:37:20.471 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 23:37:20.471 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 23:37:20.477 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-13 23:37:20.483 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:37:20.486 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:37:20.488 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 19.0367ms
2025-10-13 23:37:20.488 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - application/json null
2025-10-13 23:37:20.489 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:37:20.491 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:37:20.492 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:37:20.494 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:37:20.495 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 23:37:20.496 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:37:20.497 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:37:20.498 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - 200 null application/json; charset=utf-8 47.4653ms
2025-10-13 23:37:20.502 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 23:37:20.505 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:37:20.506 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 23:37:20.513 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:37:20.516 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 23:37:20.516 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:37:20.518 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 13.6607ms
2025-10-13 23:37:20.518 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 23:37:20.521 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-13 23:37:20.522 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 21.4557ms
2025-10-13 23:37:20.524 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 23:37:20.524 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:37:20.527 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:37:20.529 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 18.259ms
2025-10-13 23:37:20.530 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:37:20.534 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:37:20.535 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 63.6545ms
2025-10-13 23:37:20.536 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:37:20.538 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:37:20.539 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 67.9752ms
2025-10-13 23:37:20.540 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:37:20.546 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:37:20.547 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - 200 null application/json; charset=utf-8 58.5093ms
2025-10-13 23:37:20.552 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 23:37:20.556 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:37:20.564 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 23:37:20.565 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:37:20.567 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:37:20.568 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 13.8304ms
2025-10-13 23:37:20.570 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.5262ms
2025-10-13 23:37:20.572 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:37:20.573 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:37:20.575 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 56.3052ms
2025-10-13 23:37:20.576 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 52.4112ms
2025-10-13 23:37:35.898 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - null null
2025-10-13 23:37:35.900 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:37:35.901 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - 204 null null 2.7532ms
2025-10-13 23:37:35.903 +04:00 [INF] Request starting HTTP/2 DELETE https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - application/json null
2025-10-13 23:37:35.906 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:37:35.906 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.ClearBasket (GreenZone.API)'
2025-10-13 23:37:35.909 +04:00 [INF] Route matched with {action = "ClearBasket", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ClearBasket(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 23:37:35.923 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 23:37:35.934 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [BasketItems]
OUTPUT 1
WHERE [Id] = @p0;
2025-10-13 23:37:35.941 +04:00 [INF] Executing StatusCodeResult, setting HTTP status code 204
2025-10-13 23:37:35.943 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.ClearBasket (GreenZone.API) in 31.6568ms
2025-10-13 23:37:35.945 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.ClearBasket (GreenZone.API)'
2025-10-13 23:37:35.946 +04:00 [INF] Request finished HTTP/2 DELETE https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - 204 null null 43.7272ms
2025-10-13 23:37:36.749 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 23:37:36.749 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 23:37:36.749 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 23:37:36.749 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 23:37:36.754 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:37:36.758 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:37:36.761 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:37:36.765 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:37:36.766 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 16.8348ms
2025-10-13 23:37:36.767 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 17.5782ms
2025-10-13 23:37:36.768 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 23:37:36.768 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 18.8235ms
2025-10-13 23:37:36.768 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 23:37:36.769 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 19.9905ms
2025-10-13 23:37:36.781 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:37:36.788 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:37:36.794 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:37:36.796 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:37:36.797 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 23:37:36.799 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:37:36.802 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 23:37:36.804 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:37:36.806 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:37:36.810 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:37:36.812 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 10.9009ms
2025-10-13 23:37:36.813 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 23:37:36.813 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.7426ms
2025-10-13 23:37:36.813 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 23:37:36.815 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:37:36.817 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:37:36.819 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:37:36.822 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:37:36.824 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 56.0141ms
2025-10-13 23:37:36.825 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:37:36.826 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 57.8947ms
2025-10-13 23:37:36.827 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:37:36.832 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 23:37:36.837 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:37:36.840 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 23:37:36.843 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:37:36.844 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:37:36.847 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:37:36.848 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.5603ms
2025-10-13 23:37:36.850 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.1704ms
2025-10-13 23:37:36.851 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:37:36.853 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:37:36.854 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 41.0438ms
2025-10-13 23:37:36.855 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 41.7826ms
2025-10-13 23:42:16.446 +04:00 [WRN] No store type was specified for the decimal property 'Quantity' on entity type 'OrderItem'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-10-13 23:42:16.788 +04:00 [INF] Executed DbCommand (24ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-13 23:42:16.819 +04:00 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-13 23:42:16.825 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-13 23:42:16.830 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-13 23:42:16.848 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-10-13 23:42:16.865 +04:00 [INF] No migrations were applied. The database is already up to date.
2025-10-13 23:42:16.868 +04:00 [INF] Migrations applied
2025-10-13 23:42:17.065 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-13 23:42:17.094 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-13 23:42:17.098 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-13 23:42:17.112 +04:00 [INF] User profile is available. Using 'C:\Users\ASUS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-13 23:42:17.127 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-10-13 23:42:17.161 +04:00 [INF] Admin user already exists: admin@greenzone.com
2025-10-13 23:42:17.308 +04:00 [INF] Now listening on: https://localhost:7100
2025-10-13 23:42:17.337 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-13 23:42:17.338 +04:00 [INF] Hosting environment: Development
2025-10-13 23:42:17.339 +04:00 [INF] Content root path: C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API
2025-10-13 23:42:21.826 +04:00 [WRN] No store type was specified for the decimal property 'Quantity' on entity type 'OrderItem'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-10-13 23:42:22.032 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-13 23:42:22.051 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-13 23:42:22.055 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-13 23:42:22.057 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-13 23:42:22.067 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-10-13 23:42:22.077 +04:00 [INF] No migrations were applied. The database is already up to date.
2025-10-13 23:42:22.078 +04:00 [INF] Migrations applied
2025-10-13 23:42:22.196 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-13 23:42:22.221 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-13 23:42:22.224 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-13 23:42:22.232 +04:00 [INF] User profile is available. Using 'C:\Users\ASUS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-13 23:42:22.242 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-10-13 23:42:22.263 +04:00 [INF] Admin user already exists: admin@greenzone.com
2025-10-13 23:42:22.356 +04:00 [INF] Now listening on: https://localhost:7100
2025-10-13 23:42:22.379 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-13 23:42:22.381 +04:00 [INF] Hosting environment: Development
2025-10-13 23:42:22.381 +04:00 [INF] Content root path: C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API
2025-10-13 23:42:29.605 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/index.html - null null
2025-10-13 23:42:29.695 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/index.html - 200 null text/html;charset=utf-8 91.3868ms
2025-10-13 23:42:29.734 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - null null
2025-10-13 23:42:29.734 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_vs/browserLink - null null
2025-10-13 23:42:29.744 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - 200 16511 application/javascript; charset=utf-8 10.2658ms
2025-10-13 23:42:29.766 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_vs/browserLink - 200 null text/javascript; charset=UTF-8 32.5944ms
2025-10-13 23:42:29.844 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - null null
2025-10-13 23:42:29.874 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 30.2227ms
2025-10-13 23:42:36.683 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/b3b7d117-9f6c-4ba1-9404-a066da56c779 - null null
2025-10-13 23:42:36.692 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:42:36.695 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/b3b7d117-9f6c-4ba1-9404-a066da56c779 - 204 null null 11.9629ms
2025-10-13 23:42:36.701 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/b3b7d117-9f6c-4ba1-9404-a066da56c779 - application/json null
2025-10-13 23:42:36.707 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:42:36.772 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:42:36.784 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 23:42:36.970 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 23:42:36.977 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 187.8931ms
2025-10-13 23:42:36.979 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:42:36.981 +04:00 [ERR] An unhandled exception has occurred while executing the request.
GreenZone.Application.Exceptions.NotFoundException: Basket not found for the customer.
   at GreenZone.Application.Service.BasketService.GetBasketByCustomerAsync(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\BasketService.cs:line 75
   at GreenZone.API.Controllers.BasketController.GetBasketByCustomerId(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\BasketController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-13 23:42:36.997 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/b3b7d117-9f6c-4ba1-9404-a066da56c779 - 500 null text/plain; charset=utf-8 295.5679ms
2025-10-13 23:42:37.100 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - null null
2025-10-13 23:42:37.100 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - null null
2025-10-13 23:42:37.104 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:42:37.109 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:42:37.111 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - 204 null null 10.3672ms
2025-10-13 23:42:37.112 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - 204 null null 11.3165ms
2025-10-13 23:42:37.113 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - application/json null
2025-10-13 23:42:37.123 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:42:37.128 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 23:42:37.135 +04:00 [INF] Route matched with {action = "GetCustomerByUserId", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerByUserId(System.String) on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-13 23:42:37.229 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-10-13 23:42:37.256 +04:00 [INF] Executed DbCommand (18ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 23:42:37.304 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto'.
2025-10-13 23:42:37.311 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API) in 172.8921ms
2025-10-13 23:42:37.312 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - application/json null
2025-10-13 23:42:37.313 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 23:42:37.315 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:42:37.316 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - 200 null application/json; charset=utf-8 203.2728ms
2025-10-13 23:42:37.320 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 23:42:37.322 +04:00 [INF] Route matched with {action = "GetCustomerByUserId", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerByUserId(System.String) on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-13 23:42:37.322 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - null null
2025-10-13 23:42:37.323 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - null null
2025-10-13 23:42:37.327 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:42:37.329 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 23:42:37.330 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:42:37.331 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - 204 null null 8.5017ms
2025-10-13 23:42:37.333 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - application/json null
2025-10-13 23:42:37.335 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - 204 null null 11.7296ms
2025-10-13 23:42:37.335 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto'.
2025-10-13 23:42:37.342 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:42:37.348 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API) in 23.6093ms
2025-10-13 23:42:37.349 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:42:37.350 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 23:42:37.351 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 23:42:37.352 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - 200 null application/json; charset=utf-8 40.8547ms
2025-10-13 23:42:37.358 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 23:42:37.367 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-13 23:42:37.374 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 19.0068ms
2025-10-13 23:42:37.375 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - application/json null
2025-10-13 23:42:37.376 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:42:37.378 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:42:37.380 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - 200 null application/json; charset=utf-8 47.0069ms
2025-10-13 23:42:37.381 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:42:37.382 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 23:42:37.382 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 23:42:37.386 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 23:42:37.389 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:42:37.393 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:42:37.396 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 13.367ms
2025-10-13 23:42:37.397 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 14.1864ms
2025-10-13 23:42:37.398 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 23:42:37.399 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 23:42:37.401 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 23:42:37.409 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:42:37.412 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:42:37.415 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-13 23:42:37.416 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:42:37.417 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:42:37.418 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 23.9508ms
2025-10-13 23:42:37.422 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:42:37.423 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 23:42:37.424 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - 200 null application/json; charset=utf-8 49.2628ms
2025-10-13 23:42:37.424 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:42:37.458 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:42:37.475 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 23:42:37.492 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:42:37.510 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:42:37.521 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 94.5125ms
2025-10-13 23:42:37.521 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 89.1579ms
2025-10-13 23:42:37.522 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 23:42:37.522 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 23:42:37.523 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:42:37.525 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:42:37.528 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:42:37.532 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:42:37.533 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 134.7383ms
2025-10-13 23:42:37.534 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 135.6294ms
2025-10-13 23:42:37.536 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:42:37.537 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:42:37.546 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 23:42:37.548 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:42:37.554 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 23:42:37.554 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:42:37.557 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:42:37.560 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:42:37.561 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 11.0246ms
2025-10-13 23:42:37.563 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 10.8694ms
2025-10-13 23:42:37.564 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:42:37.566 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:42:37.567 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 45.3631ms
2025-10-13 23:42:37.568 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 46.608ms
2025-10-13 23:43:05.480 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 23:43:05.480 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 23:43:05.480 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 23:43:05.484 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:05.487 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:05.487 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 23:43:05.487 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 23:43:05.488 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 23:43:05.490 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:05.491 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 11.1858ms
2025-10-13 23:43:05.492 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 12.0745ms
2025-10-13 23:43:05.493 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 23:43:05.493 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 23:43:05.495 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:05.498 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:05.500 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:05.501 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 21.0693ms
2025-10-13 23:43:05.511 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:05.514 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:05.515 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 28.2503ms
2025-10-13 23:43:05.516 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 29.2975ms
2025-10-13 23:43:05.517 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 29.7415ms
2025-10-13 23:43:05.524 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:43:05.524 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:43:05.537 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:43:05.538 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 23:43:05.550 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 23:43:05.550 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:43:05.553 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:43:05.556 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:43:05.557 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 14.1868ms
2025-10-13 23:43:05.558 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 23:43:05.560 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 19.1175ms
2025-10-13 23:43:05.561 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 23:43:05.561 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:43:05.564 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:05.566 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:43:05.569 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:05.571 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 77.0898ms
2025-10-13 23:43:05.572 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:43:05.573 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 79.7215ms
2025-10-13 23:43:05.574 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:43:05.579 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 23:43:05.584 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:43:05.589 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 23:43:05.590 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:43:05.592 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:43:05.594 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:43:05.595 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.2553ms
2025-10-13 23:43:05.597 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.0244ms
2025-10-13 23:43:05.598 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 23:43:05.598 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:43:05.600 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:43:05.603 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:05.604 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 46.3937ms
2025-10-13 23:43:05.606 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 45.1141ms
2025-10-13 23:43:05.607 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:43:05.616 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:43:05.620 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:43:05.624 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:43:05.626 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.6364ms
2025-10-13 23:43:05.627 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 23:43:05.627 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:43:05.631 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:05.632 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 33.8682ms
2025-10-13 23:43:05.633 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:43:05.638 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:43:05.642 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:43:05.645 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:43:05.648 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.4141ms
2025-10-13 23:43:05.649 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:43:05.651 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 24.7038ms
2025-10-13 23:43:10.326 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product/da83d42d-1208-4f6c-b8b9-6863eaf467cd - null null
2025-10-13 23:43:10.328 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 23:43:10.328 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product/da83d42d-1208-4f6c-b8b9-6863eaf467cd - null null
2025-10-13 23:43:10.331 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:10.334 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:10.337 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:10.338 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product/da83d42d-1208-4f6c-b8b9-6863eaf467cd - 204 null null 11.7658ms
2025-10-13 23:43:10.339 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product/da83d42d-1208-4f6c-b8b9-6863eaf467cd - application/json null
2025-10-13 23:43:10.339 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:43:10.340 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product/da83d42d-1208-4f6c-b8b9-6863eaf467cd - 204 null null 12.4465ms
2025-10-13 23:43:10.347 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:10.348 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:43:10.353 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetProductById (GreenZone.API)'
2025-10-13 23:43:10.360 +04:00 [INF] Route matched with {action = "GetProductById", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductById(System.Guid) on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 23:43:10.361 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:43:10.366 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:43:10.368 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 14.1399ms
2025-10-13 23:43:10.369 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 23:43:10.370 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:43:10.373 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:10.374 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 46.1803ms
2025-10-13 23:43:10.375 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:43:10.380 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:43:10.384 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:43:10.387 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:43:10.388 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CreatedAt], [t].[Description], [t].[ImageUrl], [t].[IsDeleted], [t].[MaxThickness], [t].[MinThickness], [t].[PricePerSquareMeter], [t].[Title], [t].[UpdatedAt], [t].[Id0], [t].[CreatedAt0], [t].[Description0], [t].[IsDeleted0], [t].[Name], [t].[UpdatedAt0], [p0].[Id], [p0].[CreatedAt], [p0].[DocumentUrl], [p0].[IsDeleted], [p0].[ProductId], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id] AS [Id0], [c].[CreatedAt] AS [CreatedAt0], [c].[Description] AS [Description0], [c].[IsDeleted] AS [IsDeleted0], [c].[Name], [c].[UpdatedAt] AS [UpdatedAt0]
    FROM [Products] AS [p]
    INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
    WHERE [p].[Id] = @__id_0 AND [p].[IsDeleted] = CAST(0 AS bit)
) AS [t]
LEFT JOIN [ProductDocuments] AS [p0] ON [t].[Id] = [p0].[ProductId]
ORDER BY [t].[Id], [t].[Id0]
2025-10-13 23:43:10.389 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 7.0904ms
2025-10-13 23:43:10.393 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:43:10.394 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 24.8726ms
2025-10-13 23:43:10.398 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto'.
2025-10-13 23:43:10.400 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetProductById (GreenZone.API) in 36.6957ms
2025-10-13 23:43:10.401 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product/da83d42d-1208-4f6c-b8b9-6863eaf467cd - application/json null
2025-10-13 23:43:10.402 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetProductById (GreenZone.API)'
2025-10-13 23:43:10.405 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:10.406 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product/da83d42d-1208-4f6c-b8b9-6863eaf467cd - 200 null application/json; charset=utf-8 66.6232ms
2025-10-13 23:43:10.407 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetProductById (GreenZone.API)'
2025-10-13 23:43:10.412 +04:00 [INF] Route matched with {action = "GetProductById", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductById(System.Guid) on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 23:43:10.417 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CreatedAt], [t].[Description], [t].[ImageUrl], [t].[IsDeleted], [t].[MaxThickness], [t].[MinThickness], [t].[PricePerSquareMeter], [t].[Title], [t].[UpdatedAt], [t].[Id0], [t].[CreatedAt0], [t].[Description0], [t].[IsDeleted0], [t].[Name], [t].[UpdatedAt0], [p0].[Id], [p0].[CreatedAt], [p0].[DocumentUrl], [p0].[IsDeleted], [p0].[ProductId], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id] AS [Id0], [c].[CreatedAt] AS [CreatedAt0], [c].[Description] AS [Description0], [c].[IsDeleted] AS [IsDeleted0], [c].[Name], [c].[UpdatedAt] AS [UpdatedAt0]
    FROM [Products] AS [p]
    INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
    WHERE [p].[Id] = @__id_0 AND [p].[IsDeleted] = CAST(0 AS bit)
) AS [t]
LEFT JOIN [ProductDocuments] AS [p0] ON [t].[Id] = [p0].[ProductId]
ORDER BY [t].[Id], [t].[Id0]
2025-10-13 23:43:10.420 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto'.
2025-10-13 23:43:10.422 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetProductById (GreenZone.API) in 7.6236ms
2025-10-13 23:43:10.423 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetProductById (GreenZone.API)'
2025-10-13 23:43:10.425 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product/da83d42d-1208-4f6c-b8b9-6863eaf467cd - 200 null application/json; charset=utf-8 24.13ms
2025-10-13 23:43:23.101 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - null null
2025-10-13 23:43:23.106 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:23.107 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - 204 null null 5.5417ms
2025-10-13 23:43:23.109 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - application/json null
2025-10-13 23:43:23.115 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:23.116 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 23:43:23.118 +04:00 [INF] Route matched with {action = "GetCustomerByUserId", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerByUserId(System.String) on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-13 23:43:23.147 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 23:43:23.154 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto'.
2025-10-13 23:43:23.156 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API) in 35.5938ms
2025-10-13 23:43:23.158 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 23:43:23.159 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - 200 null application/json; charset=utf-8 49.3174ms
2025-10-13 23:43:23.161 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c/items - null null
2025-10-13 23:43:23.168 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:23.169 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c/items - 204 null null 7.6173ms
2025-10-13 23:43:23.171 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c/items - application/json 115
2025-10-13 23:43:23.176 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:23.177 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.AddItemsToBasket (GreenZone.API)'
2025-10-13 23:43:23.185 +04:00 [INF] Route matched with {action = "AddItemsToBasket", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddItemsToBasket(System.Guid, GreenZone.Contracts.Dtos.BasketItemsDtos.BasketItemsCreateDto) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 23:43:23.223 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 23:43:23.328 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Boolean), @p4='?' (DbType = Guid), @p5='?' (DbType = Int32), @p6='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [BasketItems] ([Id], [BasketId], [CreatedAt], [IsDeleted], [ProductId], [Quantity], [UpdatedAt])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-10-13 23:43:23.346 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 23:43:23.349 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-13 23:43:23.350 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.AddItemsToBasket (GreenZone.API) in 162.3882ms
2025-10-13 23:43:23.352 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.AddItemsToBasket (GreenZone.API)'
2025-10-13 23:43:23.353 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c/items - 200 null application/json; charset=utf-8 181.4203ms
2025-10-13 23:43:23.355 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - null null
2025-10-13 23:43:23.358 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:23.359 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - 204 null null 3.7421ms
2025-10-13 23:43:23.360 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - application/json null
2025-10-13 23:43:23.363 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:23.364 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:43:23.365 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 23:43:23.377 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 23:43:23.382 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-13 23:43:23.384 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 16.5833ms
2025-10-13 23:43:23.386 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:43:23.388 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - 200 null application/json; charset=utf-8 27.566ms
2025-10-13 23:43:24.266 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/b3b7d117-9f6c-4ba1-9404-a066da56c779 - null null
2025-10-13 23:43:24.272 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:24.273 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/b3b7d117-9f6c-4ba1-9404-a066da56c779 - 204 null null 6.6102ms
2025-10-13 23:43:24.275 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/b3b7d117-9f6c-4ba1-9404-a066da56c779 - application/json null
2025-10-13 23:43:24.280 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:24.281 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:43:24.283 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 23:43:24.295 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 23:43:24.298 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 13.2844ms
2025-10-13 23:43:24.300 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:43:24.301 +04:00 [ERR] An unhandled exception has occurred while executing the request.
GreenZone.Application.Exceptions.NotFoundException: Basket not found for the customer.
   at GreenZone.Application.Service.BasketService.GetBasketByCustomerAsync(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.Application\Service\BasketService.cs:line 75
   at GreenZone.API.Controllers.BasketController.GetBasketByCustomerId(Guid customerId) in C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API\Controllers\BasketController.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-13 23:43:24.307 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/b3b7d117-9f6c-4ba1-9404-a066da56c779 - 500 null text/plain; charset=utf-8 32.2113ms
2025-10-13 23:43:24.380 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - application/json null
2025-10-13 23:43:24.384 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:24.386 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 23:43:24.387 +04:00 [INF] Route matched with {action = "GetCustomerByUserId", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerByUserId(System.String) on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-13 23:43:24.411 +04:00 [INF] Executed DbCommand (18ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 23:43:24.417 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto'.
2025-10-13 23:43:24.418 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API) in 27.3238ms
2025-10-13 23:43:24.420 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - application/json null
2025-10-13 23:43:24.420 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 23:43:24.424 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:24.425 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - 200 null application/json; charset=utf-8 45.2706ms
2025-10-13 23:43:24.427 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 23:43:24.429 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - application/json null
2025-10-13 23:43:24.431 +04:00 [INF] Route matched with {action = "GetCustomerByUserId", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerByUserId(System.String) on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-13 23:43:24.434 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:24.437 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:43:24.438 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[IdentityCard], [t].[IsDeleted], [t].[UpdatedAt], [t].[UserId], [t].[Id0], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[FirstName], [t].[LastName], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[TwoFactorEnabled], [t].[UserName], [t].[Id1], [t].[CreatedAt0], [t].[CustomerId], [t].[IsDeleted0], [t].[UpdatedAt0], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p0].[Id], [p0].[Amount], [p0].[CreatedAt], [p0].[CustomerId], [p0].[IsDeleted], [p0].[PaymentDate], [p0].[PaymentMethodId], [p0].[RefundDate], [p0].[Status], [p0].[UpdatedAt]
FROM (
    SELECT TOP(1) [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id] AS [Id0], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [b].[Id] AS [Id1], [b].[CreatedAt] AS [CreatedAt0], [b].[CustomerId], [b].[IsDeleted] AS [IsDeleted0], [b].[UpdatedAt] AS [UpdatedAt0]
    FROM [Customers] AS [c]
    INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
    LEFT JOIN [Baskets] AS [b] ON [c].[Id] = [b].[CustomerId]
    WHERE [c].[IsDeleted] = CAST(0 AS bit) AND [c].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id1] = [t0].[BasketId]
LEFT JOIN [Orders] AS [o] ON [t].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p0] ON [t].[Id] = [p0].[CustomerId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t0].[Id], [t0].[Id0], [o].[Id]
2025-10-13 23:43:24.438 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 23:43:24.441 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto'.
2025-10-13 23:43:24.444 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API) in 8.4943ms
2025-10-13 23:43:24.447 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetCustomerByUserId (GreenZone.API)'
2025-10-13 23:43:24.448 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Customer/by-user/b3b7d117-9f6c-4ba1-9404-a066da56c779 - 200 null application/json; charset=utf-8 28.3258ms
2025-10-13 23:43:24.452 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 23:43:24.455 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-13 23:43:24.457 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 14.3028ms
2025-10-13 23:43:24.458 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - application/json null
2025-10-13 23:43:24.458 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:43:24.461 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:24.463 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - 200 null application/json; charset=utf-8 33.6745ms
2025-10-13 23:43:24.464 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:43:24.466 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 23:43:24.466 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 23:43:24.469 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 23:43:24.471 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:24.474 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:24.477 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 11.1343ms
2025-10-13 23:43:24.478 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 23:43:24.478 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 12.2154ms
2025-10-13 23:43:24.479 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 23:43:24.480 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 23:43:24.485 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-13 23:43:24.491 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:24.495 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:24.497 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 20.5715ms
2025-10-13 23:43:24.498 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:43:24.499 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:43:24.500 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:43:24.501 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:43:24.502 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 23:43:24.503 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - 200 null application/json; charset=utf-8 45.4345ms
2025-10-13 23:43:24.510 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:43:24.512 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 23:43:24.514 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:43:24.516 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:43:24.517 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 11.937ms
2025-10-13 23:43:24.518 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 23:43:24.519 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 11.1623ms
2025-10-13 23:43:24.520 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 23:43:24.520 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:43:24.524 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:24.525 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:43:24.528 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:24.529 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 50.4705ms
2025-10-13 23:43:24.530 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:43:24.531 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 51.09ms
2025-10-13 23:43:24.532 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:43:24.537 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:43:24.541 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 23:43:24.545 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:43:24.547 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 23:43:24.549 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:43:24.551 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:43:24.552 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.6653ms
2025-10-13 23:43:24.553 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.0051ms
2025-10-13 23:43:24.555 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:43:24.556 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:43:24.557 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 39.2511ms
2025-10-13 23:43:24.559 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 39.1366ms
2025-10-13 23:43:32.002 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c/items - null null
2025-10-13 23:43:32.003 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:32.004 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c/items - 204 null null 2.5244ms
2025-10-13 23:43:32.006 +04:00 [INF] Request starting HTTP/2 PUT https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c/items - application/json 67
2025-10-13 23:43:32.011 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:32.012 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API)'
2025-10-13 23:43:32.016 +04:00 [INF] Route matched with {action = "UpdateItemsInBasket", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateItemsInBasket(System.Guid, GreenZone.Contracts.Dtos.BasketItemsDtos.BasketItemsUpdateDto) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 23:43:32.036 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 23:43:32.053 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__productId_0='?' (DbType = Guid), @__basketId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BasketId], [b].[CreatedAt], [b].[IsDeleted], [b].[ProductId], [b].[Quantity], [b].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [BasketItems] AS [b]
INNER JOIN [Products] AS [p] ON [b].[ProductId] = [p].[Id]
WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[ProductId] = @__productId_0 AND [b].[BasketId] = @__basketId_1
2025-10-13 23:43:32.079 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@p6='?' (DbType = Guid), @p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [BasketItems] SET [BasketId] = @p0, [CreatedAt] = @p1, [IsDeleted] = @p2, [ProductId] = @p3, [Quantity] = @p4, [UpdatedAt] = @p5
OUTPUT 1
WHERE [Id] = @p6;
2025-10-13 23:43:32.087 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 23:43:32.091 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-13 23:43:32.093 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API) in 75.1343ms
2025-10-13 23:43:32.095 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.UpdateItemsInBasket (GreenZone.API)'
2025-10-13 23:43:32.097 +04:00 [INF] Request finished HTTP/2 PUT https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c/items - 200 null application/json; charset=utf-8 90.9081ms
2025-10-13 23:43:32.101 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - null null
2025-10-13 23:43:32.105 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:32.107 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - 204 null null 5.9745ms
2025-10-13 23:43:32.109 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - application/json null
2025-10-13 23:43:32.114 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:32.116 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:43:32.117 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 23:43:32.122 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 23:43:32.126 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-13 23:43:32.128 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 8.0055ms
2025-10-13 23:43:32.130 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-13 23:43:32.131 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - 200 null application/json; charset=utf-8 22.8896ms
2025-10-13 23:43:32.134 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 23:43:32.134 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 23:43:32.139 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:32.142 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:32.143 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 9.4329ms
2025-10-13 23:43:32.144 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 10.3372ms
2025-10-13 23:43:32.145 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 23:43:32.146 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 23:43:32.155 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:32.158 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:32.160 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:43:32.162 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:43:32.163 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 23:43:32.164 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:43:32.170 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 23:43:32.173 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:43:32.174 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:43:32.176 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:43:32.178 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 11.9016ms
2025-10-13 23:43:32.179 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 10.3436ms
2025-10-13 23:43:32.181 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:43:32.183 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:43:32.184 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 38.5118ms
2025-10-13 23:43:32.185 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 38.8533ms
2025-10-13 23:43:45.305 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - null null
2025-10-13 23:43:45.308 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:45.309 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - 204 null null 4.455ms
2025-10-13 23:43:45.311 +04:00 [INF] Request starting HTTP/2 DELETE https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - application/json null
2025-10-13 23:43:45.318 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:45.319 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.ClearBasket (GreenZone.API)'
2025-10-13 23:43:45.324 +04:00 [INF] Route matched with {action = "ClearBasket", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ClearBasket(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-13 23:43:45.359 +04:00 [INF] Executed DbCommand (19ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-13 23:43:45.375 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [BasketItems]
OUTPUT 1
WHERE [Id] = @p0;
2025-10-13 23:43:45.383 +04:00 [INF] Executing StatusCodeResult, setting HTTP status code 204
2025-10-13 23:43:45.386 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.ClearBasket (GreenZone.API) in 58.3089ms
2025-10-13 23:43:45.388 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.ClearBasket (GreenZone.API)'
2025-10-13 23:43:45.389 +04:00 [INF] Request finished HTTP/2 DELETE https://localhost:7100/api/Basket/9c85057d-aaa5-4fbc-bbf7-8d3dac073d3c - 204 null null 77.9808ms
2025-10-13 23:43:45.540 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 23:43:45.540 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 23:43:45.541 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-13 23:43:45.541 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-13 23:43:45.544 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:45.546 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:45.549 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:45.552 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:45.554 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 13.8956ms
2025-10-13 23:43:45.555 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 14.2491ms
2025-10-13 23:43:45.556 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 14.674ms
2025-10-13 23:43:45.556 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 23:43:45.556 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 23:43:45.557 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 15.5831ms
2025-10-13 23:43:45.572 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:45.574 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:45.579 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:43:45.580 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:43:45.581 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 23:43:45.582 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:43:45.589 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:43:45.590 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 23:43:45.592 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:43:45.594 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:43:45.596 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.4969ms
2025-10-13 23:43:45.596 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-13 23:43:45.597 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 13.2902ms
2025-10-13 23:43:45.598 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-13 23:43:45.599 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:43:45.602 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:45.603 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:43:45.606 +04:00 [INF] CORS policy execution successful.
2025-10-13 23:43:45.607 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 50.4173ms
2025-10-13 23:43:45.608 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:43:45.609 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 52.4217ms
2025-10-13 23:43:45.610 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:43:45.614 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-13 23:43:45.619 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-13 23:43:45.622 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-13 23:43:45.624 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-13 23:43:45.626 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:43:45.628 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-13 23:43:45.629 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.2704ms
2025-10-13 23:43:45.632 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 8.6838ms
2025-10-13 23:43:45.633 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-13 23:43:45.634 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-13 23:43:45.636 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 39.1964ms
2025-10-13 23:43:45.638 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 39.4619ms
