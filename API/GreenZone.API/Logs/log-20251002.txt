2025-10-02 20:22:57.395 +04:00 [WRN] No store type was specified for the decimal property 'Quantity' on entity type 'OrderItem'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-10-02 20:22:57.690 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-02 20:22:57.710 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-02 20:22:57.712 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-02 20:22:57.713 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-02 20:22:57.730 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-10-02 20:22:57.743 +04:00 [INF] No migrations were applied. The database is already up to date.
2025-10-02 20:22:57.744 +04:00 [INF] Migrations applied
2025-10-02 20:22:57.941 +04:00 [INF] Executed DbCommand (56ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-02 20:22:57.967 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-02 20:22:57.968 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-02 20:22:57.976 +04:00 [INF] User profile is available. Using 'C:\Users\ASUS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-02 20:22:57.988 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-10-02 20:22:58.008 +04:00 [INF] Admin user already exists: admin@greenzone.com
2025-10-02 20:22:58.169 +04:00 [INF] Now listening on: https://localhost:7100
2025-10-02 20:22:58.198 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-02 20:22:58.198 +04:00 [INF] Hosting environment: Development
2025-10-02 20:22:58.198 +04:00 [INF] Content root path: C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API
2025-10-02 20:22:58.601 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/index.html - null null
2025-10-02 20:22:58.788 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/index.html - 200 null text/html;charset=utf-8 189.0712ms
2025-10-02 20:22:58.794 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - null null
2025-10-02 20:22:58.794 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_vs/browserLink - null null
2025-10-02 20:22:58.798 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - 200 16511 application/javascript; charset=utf-8 4.2213ms
2025-10-02 20:22:58.840 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_vs/browserLink - 200 null text/javascript; charset=UTF-8 46.4833ms
2025-10-02 20:22:58.912 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - null null
2025-10-02 20:22:58.952 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 39.0927ms
2025-10-02 20:23:22.734 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 20:23:22.734 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-02 20:23:22.740 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:23:22.740 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:23:22.741 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 7.1217ms
2025-10-02 20:23:22.741 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 7.1245ms
2025-10-02 20:23:22.748 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 20:23:22.748 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 20:23:22.752 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:23:22.752 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:23:22.789 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-02 20:23:22.789 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:23:22.789 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.4318ms
2025-10-02 20:23:22.793 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-02 20:23:22.793 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:23:22.804 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 20:23:22.824 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-02 20:23:22.838 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:23:22'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 20:23:22.838 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:23:22'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 20:23:22.857 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:23:22'.
2025-10-02 20:23:22.857 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:23:22'.
2025-10-02 20:23:22.858 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 20:23:22.858 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 20:23:22.862 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 20:23:22.862 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 20:23:23.050 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 20:23:23.057 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-10-02 20:23:23.063 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 20:23:23.072 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-02 20:23:23.074 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 20:23:23.101 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 20:23:23.110 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 244.9418ms
2025-10-02 20:23:23.110 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 281.9259ms
2025-10-02 20:23:23.110 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 20:23:23.110 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 20:23:23.114 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 321.5348ms
2025-10-02 20:23:23.114 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 365.8229ms
2025-10-02 20:23:23.115 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-02 20:23:23.115 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:23:23.115 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.3293ms
2025-10-02 20:23:23.116 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 20:23:23.117 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-02 20:23:23.117 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:23:23.118 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:23:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 20:23:23.118 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:23:23'.
2025-10-02 20:23:23.118 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 20:23:23.119 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 257.4028ms
2025-10-02 20:23:23.119 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 20:23:23.120 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 371.3555ms
2025-10-02 20:23:23.126 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-02 20:23:23.199 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-02 20:23:23.219 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-02 20:23:23.221 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 94.979ms
2025-10-02 20:23:23.221 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 20:23:23.222 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 104.7465ms
2025-10-02 20:23:40.722 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-02 20:23:40.722 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 20:23:40.722 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:23:40.722 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:23:40.722 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.5022ms
2025-10-02 20:23:40.723 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.6152ms
2025-10-02 20:23:40.730 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 20:23:40.731 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:23:40.731 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:23:40'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 20:23:40.731 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:23:40'.
2025-10-02 20:23:40.732 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 20:23:40.732 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 20:23:40.732 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:23:40.732 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 20:23:40.732 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:23:40'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 20:23:40.733 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:23:40'.
2025-10-02 20:23:40.733 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 20:23:40.733 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 20:23:40.737 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 20:23:40.737 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 20:23:40.738 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 20:23:40.738 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 20:23:40.738 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 5.0946ms
2025-10-02 20:23:40.738 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 5.9605ms
2025-10-02 20:23:40.738 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 20:23:40.738 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 20:23:40.738 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 6.3899ms
2025-10-02 20:23:40.738 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 7.9173ms
2025-10-02 20:23:40.738 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-02 20:23:40.738 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:23:40.739 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.3153ms
2025-10-02 20:23:40.742 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-02 20:23:40.742 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:23:40.743 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 20:23:40.743 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-02 20:23:40.752 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-02 20:23:40.756 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 20:23:40.756 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 13.1638ms
2025-10-02 20:23:40.757 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 20:23:40.757 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 14.4823ms
2025-10-02 20:23:40.772 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-02 20:23:40.772 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:23:40.772 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.323ms
2025-10-02 20:23:40.775 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-02 20:23:40.775 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:23:40.776 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:23:40'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 20:23:40.776 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:23:40'.
2025-10-02 20:23:40.776 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 20:23:40.776 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-02 20:23:40.781 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-02 20:23:40.782 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-02 20:23:40.782 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 5.3722ms
2025-10-02 20:23:40.782 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 20:23:40.782 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 7.0583ms
2025-10-02 20:26:07.446 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-02 20:26:07.446 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:26:07.446 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.3993ms
2025-10-02 20:26:07.449 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-02 20:26:07.449 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:26:07.450 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 20:26:07.450 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-02 20:26:07.470 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-02 20:26:07.472 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 20:26:07.472 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 22.4371ms
2025-10-02 20:26:07.472 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 20:26:07.472 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 23.1178ms
2025-10-02 20:26:07.476 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-02 20:26:07.476 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:26:07.476 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.2199ms
2025-10-02 20:26:07.478 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-02 20:26:07.478 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:26:07.478 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:26:07'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 20:26:07.489 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:26:07'.
2025-10-02 20:26:07.489 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 20:26:07.489 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-02 20:26:07.502 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-02 20:26:07.503 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-02 20:26:07.503 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 13.7628ms
2025-10-02 20:26:07.503 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 20:26:07.503 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 25.2177ms
2025-10-02 20:26:28.516 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 20:26:28.516 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-02 20:26:28.516 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-02 20:26:28.516 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:26:28.516 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:26:28.516 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:26:28.516 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.6801ms
2025-10-02 20:26:28.517 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.7648ms
2025-10-02 20:26:28.516 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.7043ms
2025-10-02 20:26:28.518 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 20:26:28.518 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:26:28.519 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.3988ms
2025-10-02 20:26:28.525 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 20:26:28.525 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 20:26:28.525 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:26:28.525 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:26:28.525 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:26:28'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 20:26:28.525 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:26:28'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 20:26:28.526 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:26:28'.
2025-10-02 20:26:28.526 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:26:28'.
2025-10-02 20:26:28.526 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 20:26:28.526 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 20:26:28.526 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 20:26:28.526 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 20:26:28.540 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 20:26:28.540 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 20:26:28.540 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 20:26:28.540 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 20:26:28.540 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 13.8455ms
2025-10-02 20:26:28.540 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 20:26:28.540 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 13.9072ms
2025-10-02 20:26:28.540 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 20:26:28.540 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 15.7169ms
2025-10-02 20:26:28.540 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 15.7507ms
2025-10-02 20:26:28.542 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 20:26:28.542 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 20:26:28.543 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:26:28.543 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:26:28.544 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:26:28'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 20:26:28.544 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:26:28'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 20:26:28.544 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:26:28'.
2025-10-02 20:26:28.544 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:26:28'.
2025-10-02 20:26:28.545 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 20:26:28.545 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 20:26:28.545 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 20:26:28.545 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 20:26:28.547 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 20:26:28.547 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 20:26:28.548 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 20:26:28.548 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 20:26:28.548 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 2.9868ms
2025-10-02 20:26:28.548 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 2.9822ms
2025-10-02 20:26:28.548 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 20:26:28.548 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 20:26:28.548 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 5.7226ms
2025-10-02 20:26:28.548 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 5.7227ms
2025-10-02 20:28:28.899 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-02 20:28:28.899 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 20:28:28.899 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:28:28.899 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:28:28.899 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.3592ms
2025-10-02 20:28:28.899 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.6196ms
2025-10-02 20:28:28.906 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 20:28:28.906 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 20:28:28.906 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:28:28.906 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:28:28.907 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:28:28'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 20:28:28.907 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:28:28'.
2025-10-02 20:28:28.907 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:28:28'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 20:28:28.907 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 20:28:28.907 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:28:28'.
2025-10-02 20:28:28.907 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 20:28:28.907 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 20:28:28.907 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 20:28:28.916 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 20:28:28.916 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 20:28:28.916 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 20:28:28.916 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 20:28:28.917 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.3775ms
2025-10-02 20:28:28.917 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.4943ms
2025-10-02 20:28:28.917 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 20:28:28.917 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 20:28:28.917 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 10.969ms
2025-10-02 20:28:28.917 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 10.9689ms
2025-10-02 20:28:28.924 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-02 20:28:28.924 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:28:28.924 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.2512ms
2025-10-02 20:28:28.926 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-02 20:28:28.926 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:28:28.927 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 20:28:28.927 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-02 20:28:28.936 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-02 20:28:28.937 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 20:28:28.937 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 10.4059ms
2025-10-02 20:28:28.937 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 20:28:28.937 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 11.1056ms
2025-10-02 20:28:28.944 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-02 20:28:28.944 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:28:28.944 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.2707ms
2025-10-02 20:28:28.948 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-02 20:28:28.948 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:28:28.948 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:28:28'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 20:28:28.948 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:28:28'.
2025-10-02 20:28:28.949 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 20:28:28.949 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-02 20:28:28.959 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-02 20:28:28.959 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-02 20:28:28.960 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 10.8697ms
2025-10-02 20:28:28.960 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 20:28:28.960 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 12.3378ms
2025-10-02 20:28:56.139 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-02 20:28:56.139 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 20:28:56.139 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 20:28:56.139 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:28:56.139 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:28:56.139 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:28:56.139 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.3956ms
2025-10-02 20:28:56.139 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.1779ms
2025-10-02 20:28:56.139 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-02 20:28:56.139 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:28:56.139 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.4078ms
2025-10-02 20:28:56.139 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.1166ms
2025-10-02 20:28:56.144 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 20:28:56.144 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 20:28:56.144 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:28:56.144 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:28:56.145 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:28:56'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 20:28:56.145 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:28:56'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 20:28:56.146 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:28:56'.
2025-10-02 20:28:56.145 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:28:56'.
2025-10-02 20:28:56.146 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 20:28:56.146 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 20:28:56.146 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 20:28:56.146 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 20:28:56.156 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 20:28:56.157 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 20:28:56.157 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 20:28:56.157 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 10.9411ms
2025-10-02 20:28:56.157 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 20:28:56.157 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 20:28:56.157 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 13.3199ms
2025-10-02 20:28:56.157 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 11.2294ms
2025-10-02 20:28:56.157 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 20:28:56.157 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 13.5252ms
2025-10-02 20:28:56.159 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 20:28:56.159 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 20:28:56.159 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:28:56.159 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:28:56.160 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:28:56'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 20:28:56.160 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:28:56'.
2025-10-02 20:28:56.160 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:28:56'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 20:28:56.160 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 20:28:56.160 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:28:56'.
2025-10-02 20:28:56.161 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 20:28:56.161 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 20:28:56.161 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 20:28:56.163 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 20:28:56.163 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 20:28:56.163 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 20:28:56.163 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 20:28:56.163 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 2.3975ms
2025-10-02 20:28:56.163 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 2.5375ms
2025-10-02 20:28:56.163 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 20:28:56.163 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 20:28:56.163 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 4.8647ms
2025-10-02 20:28:56.163 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 4.8551ms
2025-10-02 20:35:57.577 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-02 20:35:57.577 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 20:35:57.578 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:35:57.578 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:35:57.578 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.6234ms
2025-10-02 20:35:57.578 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.6236ms
2025-10-02 20:35:57.585 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 20:35:57.585 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 20:35:57.586 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:35:57.586 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:35:57.586 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:35:57'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 20:35:57.587 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:35:57'.
2025-10-02 20:35:57.586 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:35:57'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 20:35:57.587 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:35:57'.
2025-10-02 20:35:57.587 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 20:35:57.587 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 20:35:57.587 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 20:35:57.587 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 20:35:57.650 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-02 20:35:57.650 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:35:57.650 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.2106ms
2025-10-02 20:35:57.651 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-02 20:35:57.651 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:35:57.652 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 20:35:57.652 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-02 20:35:57.668 +04:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 20:35:57.668 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 20:35:57.668 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 20:35:57.668 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 80.9101ms
2025-10-02 20:35:57.668 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 20:35:57.668 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 83.1754ms
2025-10-02 20:35:57.668 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 20:35:57.669 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 81.3283ms
2025-10-02 20:35:57.669 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 20:35:57.669 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 83.4399ms
2025-10-02 20:35:57.671 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-02 20:35:57.672 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 20:35:57.672 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 20.248ms
2025-10-02 20:35:57.672 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 20:35:57.672 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 20.6844ms
2025-10-02 20:35:57.697 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-02 20:35:57.697 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:35:57.697 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.2278ms
2025-10-02 20:35:57.698 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-02 20:35:57.698 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:35:57.699 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:35:57'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 20:35:57.699 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:35:57'.
2025-10-02 20:35:57.699 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 20:35:57.699 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-02 20:35:57.710 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-02 20:35:57.710 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-02 20:35:57.711 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 11.5328ms
2025-10-02 20:35:57.711 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 20:35:57.711 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 12.5345ms
2025-10-02 20:39:40.009 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-02 20:39:40.009 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:39:40.009 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.2391ms
2025-10-02 20:39:40.016 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-02 20:39:40.017 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:39:40.017 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 20:39:40.018 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-02 20:39:40.031 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-02 20:39:40.033 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 20:39:40.034 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 15.9647ms
2025-10-02 20:39:40.034 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 20:39:40.034 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 17.9718ms
2025-10-02 20:39:40.041 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-02 20:39:40.041 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:39:40.041 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.1787ms
2025-10-02 20:39:40.044 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-02 20:39:40.044 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:39:40.045 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:39:40'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 20:39:40.045 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:39:40'.
2025-10-02 20:39:40.046 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 20:39:40.046 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-02 20:39:40.063 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-02 20:39:40.063 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-02 20:39:40.064 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 18.2107ms
2025-10-02 20:39:40.064 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 20:39:40.064 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 20.3358ms
2025-10-02 20:41:23.797 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-02 20:41:23.797 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:41:23.797 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.2132ms
2025-10-02 20:41:23.800 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-02 20:41:23.800 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:41:23.800 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 20:41:23.800 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-02 20:41:23.814 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-02 20:41:23.815 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 20:41:23.815 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 14.7412ms
2025-10-02 20:41:23.815 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 20:41:23.815 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 15.3299ms
2025-10-02 20:41:23.833 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-02 20:41:23.833 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:41:23.833 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.2649ms
2025-10-02 20:41:23.835 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-02 20:41:23.835 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:41:23.836 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:41:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 20:41:23.836 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:41:23'.
2025-10-02 20:41:23.836 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 20:41:23.836 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-02 20:41:23.844 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-02 20:41:23.845 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-02 20:41:23.845 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 8.8108ms
2025-10-02 20:41:23.845 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 20:41:23.845 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 9.9805ms
2025-10-02 20:44:08.207 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/index.html - null null
2025-10-02 20:44:08.213 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/index.html - 200 null text/html;charset=utf-8 6.2908ms
2025-10-02 20:44:08.240 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_vs/browserLink - null null
2025-10-02 20:44:08.240 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - null null
2025-10-02 20:44:08.241 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - 200 16511 application/javascript; charset=utf-8 0.7844ms
2025-10-02 20:44:08.248 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_vs/browserLink - 200 null text/javascript; charset=UTF-8 7.7329ms
2025-10-02 20:44:08.462 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - null null
2025-10-02 20:44:08.496 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 34.3083ms
2025-10-02 20:48:50.570 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 20:48:50.570 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-02 20:48:50.571 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:48:50.571 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:48:50.571 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.6655ms
2025-10-02 20:48:50.571 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.6495ms
2025-10-02 20:48:50.579 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 20:48:50.579 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 20:48:50.579 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:48:50.579 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:48:50.580 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:48:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 20:48:50.580 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:48:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 20:48:50.580 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:48:50'.
2025-10-02 20:48:50.580 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:48:50'.
2025-10-02 20:48:50.581 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 20:48:50.581 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 20:48:50.581 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 20:48:50.581 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 20:48:50.629 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-02 20:48:50.629 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:48:50.629 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.4925ms
2025-10-02 20:48:50.634 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-02 20:48:50.634 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:48:50.634 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 20:48:50.634 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-02 20:48:50.679 +04:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 20:48:50.679 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 20:48:50.679 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 20:48:50.679 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 20:48:50.680 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 98.5446ms
2025-10-02 20:48:50.680 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 98.5584ms
2025-10-02 20:48:50.680 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 20:48:50.680 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 20:48:50.680 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 100.8536ms
2025-10-02 20:48:50.680 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 100.8534ms
2025-10-02 20:48:50.689 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-02 20:48:50.689 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 20:48:50.690 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 55.5051ms
2025-10-02 20:48:50.690 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 20:48:50.690 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 56.4021ms
2025-10-02 20:48:50.735 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-02 20:48:50.735 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:48:50.735 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.2062ms
2025-10-02 20:48:50.738 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-02 20:48:50.738 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:48:50.738 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:48:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 20:48:50.739 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:48:50'.
2025-10-02 20:48:50.739 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 20:48:50.739 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-02 20:48:50.753 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-02 20:48:50.754 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-02 20:48:50.755 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 15.8259ms
2025-10-02 20:48:50.755 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 20:48:50.755 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 17.2455ms
2025-10-02 20:49:25.448 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-02 20:49:25.448 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:49:25.448 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.5126ms
2025-10-02 20:49:25.449 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 20:49:25.449 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:49:25.449 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.2301ms
2025-10-02 20:49:25.455 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 20:49:25.455 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:49:25.455 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 20:49:25.456 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:49:25.456 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:49:25'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 20:49:25.456 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:49:25'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 20:49:25.457 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:49:25'.
2025-10-02 20:49:25.457 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:49:25'.
2025-10-02 20:49:25.458 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 20:49:25.458 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 20:49:25.458 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 20:49:25.458 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 20:49:25.470 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 20:49:25.471 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 20:49:25.471 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 20:49:25.472 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 13.8509ms
2025-10-02 20:49:25.472 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 20:49:25.473 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 17.7959ms
2025-10-02 20:49:25.473 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 20:49:25.473 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 14.6795ms
2025-10-02 20:49:25.473 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 20:49:25.473 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 17.6846ms
2025-10-02 20:49:25.511 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-02 20:49:25.511 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:49:25.511 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.1495ms
2025-10-02 20:49:25.512 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-02 20:49:25.512 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:49:25.512 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 20:49:25.512 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-02 20:49:25.520 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-02 20:49:25.521 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 20:49:25.521 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 8.7306ms
2025-10-02 20:49:25.521 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 20:49:25.521 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 9.1135ms
2025-10-02 20:49:25.544 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-02 20:49:25.544 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:49:25.545 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.2418ms
2025-10-02 20:49:25.546 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-02 20:49:25.546 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:49:25.547 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:49:25'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 20:49:25.547 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:49:25'.
2025-10-02 20:49:25.547 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 20:49:25.547 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-02 20:49:25.561 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-02 20:49:25.561 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-02 20:49:25.561 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 13.9266ms
2025-10-02 20:49:25.561 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 20:49:25.561 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 15.1923ms
2025-10-02 20:57:02.841 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 20:57:02.841 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:57:02.841 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-02 20:57:02.841 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 20:57:02.841 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:57:02.841 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.2481ms
2025-10-02 20:57:02.841 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.3032ms
2025-10-02 20:57:02.841 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:57:02.841 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-02 20:57:02.841 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.4597ms
2025-10-02 20:57:02.841 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:57:02.841 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.0926ms
2025-10-02 20:57:02.848 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 20:57:02.848 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 20:57:02.848 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:57:02.848 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:57:02.849 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-02 20:57:02.849 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:57:02.849 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.1557ms
2025-10-02 20:57:02.849 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:57:02'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 20:57:02.849 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:57:02'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 20:57:02.849 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-02 20:57:02.849 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:57:02'.
2025-10-02 20:57:02.849 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:57:02'.
2025-10-02 20:57:02.849 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:57:02.850 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.3723ms
2025-10-02 20:57:02.850 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 20:57:02.850 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 20:57:02.850 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 20:57:02.850 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 20:57:02.851 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-02 20:57:02.852 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:57:02.852 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 20:57:02.852 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-02 20:57:02.935 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 20:57:02.935 +04:00 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 20:57:02.935 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 20:57:02.935 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 85.3012ms
2025-10-02 20:57:02.935 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 20:57:02.936 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 20:57:02.936 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 85.4697ms
2025-10-02 20:57:02.936 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 20:57:02.936 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 87.446ms
2025-10-02 20:57:02.936 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 87.4644ms
2025-10-02 20:57:02.938 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 20:57:02.938 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:57:02.938 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 20:57:02.938 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:57:02.939 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:57:02'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 20:57:02.939 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:57:02'.
2025-10-02 20:57:02.939 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:57:02'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 20:57:02.939 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:57:02'.
2025-10-02 20:57:02.939 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 20:57:02.939 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 20:57:02.939 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 20:57:02.939 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 20:57:02.941 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 20:57:02.941 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 20:57:02.942 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 20:57:02.942 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 20:57:02.942 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 2.7748ms
2025-10-02 20:57:02.942 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 2.7955ms
2025-10-02 20:57:02.942 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 20:57:02.942 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 20:57:02.942 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 4.2287ms
2025-10-02 20:57:02.942 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 4.2369ms
2025-10-02 20:57:02.948 +04:00 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-02 20:57:02.949 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 20:57:02.949 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 97.2552ms
2025-10-02 20:57:02.949 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 20:57:02.949 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 97.874ms
2025-10-02 20:57:02.951 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-02 20:57:02.951 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:57:02.951 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 20:57:02.951 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-02 20:57:02.953 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-02 20:57:02.954 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 20:57:02.954 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 2.7215ms
2025-10-02 20:57:02.954 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 20:57:02.954 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 3.2966ms
2025-10-02 20:57:02.955 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-02 20:57:02.955 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:57:02.955 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.1917ms
2025-10-02 20:57:02.957 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-02 20:57:02.957 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:57:02.957 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:57:02'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 20:57:02.957 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:57:02'.
2025-10-02 20:57:02.958 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 20:57:02.958 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-02 20:57:02.967 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-02 20:57:02.968 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-02 20:57:02.968 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 10.1185ms
2025-10-02 20:57:02.968 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 20:57:02.968 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 11.2734ms
2025-10-02 20:57:02.969 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-02 20:57:02.969 +04:00 [INF] CORS policy execution successful.
2025-10-02 20:57:02.970 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:57:02'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 20:57:02.970 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 16:57:02'.
2025-10-02 20:57:02.970 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 20:57:02.970 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-02 20:57:02.972 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-02 20:57:02.972 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-02 20:57:02.972 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 1.7665ms
2025-10-02 20:57:02.972 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 20:57:02.972 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 2.8904ms
2025-10-02 21:09:36.591 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-02 21:09:36.591 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 21:09:36.591 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:09:36.591 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:09:36.591 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.2515ms
2025-10-02 21:09:36.591 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.2582ms
2025-10-02 21:09:36.596 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 21:09:36.596 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 21:09:36.597 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:09:36.597 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:09:36.597 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:09:36'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 21:09:36.597 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:09:36'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 21:09:36.598 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:09:36'.
2025-10-02 21:09:36.598 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:09:36'.
2025-10-02 21:09:36.598 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 21:09:36.598 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 21:09:36.598 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 21:09:36.598 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 21:09:36.640 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-02 21:09:36.640 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:09:36.640 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.1185ms
2025-10-02 21:09:36.641 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-02 21:09:36.641 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:09:36.641 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 21:09:36.642 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-02 21:09:36.668 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 21:09:36.668 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 21:09:36.668 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 21:09:36.668 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 21:09:36.668 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 70.3789ms
2025-10-02 21:09:36.668 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 70.4096ms
2025-10-02 21:09:36.668 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 21:09:36.668 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 21:09:36.668 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 71.9862ms
2025-10-02 21:09:36.668 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 71.9837ms
2025-10-02 21:09:36.677 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-02 21:09:36.678 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 21:09:36.678 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 36.471ms
2025-10-02 21:09:36.678 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 21:09:36.678 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 37.0936ms
2025-10-02 21:09:36.685 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-02 21:09:36.685 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:09:36.686 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.2519ms
2025-10-02 21:09:36.688 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-02 21:09:36.688 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:09:36.688 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:09:36'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 21:09:36.688 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:09:36'.
2025-10-02 21:09:36.688 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 21:09:36.689 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-02 21:09:36.703 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-02 21:09:36.703 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-02 21:09:36.703 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 14.8963ms
2025-10-02 21:09:36.703 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 21:09:36.704 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 15.8204ms
2025-10-02 21:22:46.800 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 21:22:46.800 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-02 21:22:46.800 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:22:46.800 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:22:46.800 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.2721ms
2025-10-02 21:22:46.800 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.2688ms
2025-10-02 21:22:46.806 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 21:22:46.806 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 21:22:46.806 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:22:46.806 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:22:46.806 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:22:46'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 21:22:46.806 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:22:46'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 21:22:46.807 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:22:46'.
2025-10-02 21:22:46.807 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:22:46'.
2025-10-02 21:22:46.807 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 21:22:46.807 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 21:22:46.807 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 21:22:46.807 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 21:22:46.873 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 21:22:46.873 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 21:22:46.873 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 21:22:46.873 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 66.2937ms
2025-10-02 21:22:46.873 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 21:22:46.873 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 67.4251ms
2025-10-02 21:22:46.873 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 21:22:46.874 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 66.5651ms
2025-10-02 21:22:46.874 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 21:22:46.874 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 67.6106ms
2025-10-02 21:22:46.984 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-02 21:22:46.984 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:22:46.984 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.1994ms
2025-10-02 21:22:46.991 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-02 21:22:46.991 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:22:46.991 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 21:22:46.991 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-02 21:22:47.005 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-02 21:22:47.006 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 21:22:47.007 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 15.6912ms
2025-10-02 21:22:47.007 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 21:22:47.007 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 16.3058ms
2025-10-02 21:22:47.040 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-02 21:22:47.040 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:22:47.040 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.2562ms
2025-10-02 21:22:47.044 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-02 21:22:47.044 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:22:47.045 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:22:47'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 21:22:47.045 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:22:47'.
2025-10-02 21:22:47.045 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 21:22:47.045 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-02 21:22:47.061 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-02 21:22:47.062 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-02 21:22:47.062 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 16.4925ms
2025-10-02 21:22:47.062 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 21:22:47.062 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 18.3649ms
2025-10-02 21:23:13.675 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-02 21:23:13.675 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:13.675 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.4303ms
2025-10-02 21:23:13.678 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 21:23:13.678 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:13.678 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.5751ms
2025-10-02 21:23:13.678 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 21:23:13.679 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:13.679 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:23:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 21:23:13.679 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:23:13'.
2025-10-02 21:23:13.680 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 21:23:13.680 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 21:23:13.680 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 21:23:13.681 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:13.681 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:23:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 21:23:13.681 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:23:13'.
2025-10-02 21:23:13.681 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 21:23:13.681 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 21:23:13.683 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 21:23:13.684 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 21:23:13.684 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 2.902ms
2025-10-02 21:23:13.684 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 21:23:13.685 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 3.9811ms
2025-10-02 21:23:13.686 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 21:23:13.686 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 21:23:13.686 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 6.4376ms
2025-10-02 21:23:13.686 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 21:23:13.686 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 7.8444ms
2025-10-02 21:23:13.689 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 21:23:13.689 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:13.689 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:23:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 21:23:13.690 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:23:13'.
2025-10-02 21:23:13.690 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 21:23:13.690 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 21:23:13.691 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 21:23:13.691 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:13.692 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:23:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 21:23:13.692 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:23:13'.
2025-10-02 21:23:13.692 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 21:23:13.692 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 21:23:13.693 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 21:23:13.694 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 21:23:13.694 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 3.3404ms
2025-10-02 21:23:13.694 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 21:23:13.694 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 21:23:13.694 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 5.1977ms
2025-10-02 21:23:13.694 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 21:23:13.694 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.7602ms
2025-10-02 21:23:13.694 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 21:23:13.694 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 3.415ms
2025-10-02 21:23:13.708 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-02 21:23:13.708 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:13.708 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.2052ms
2025-10-02 21:23:13.709 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-02 21:23:13.709 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:13.709 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.2085ms
2025-10-02 21:23:13.712 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-02 21:23:13.712 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:13.712 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 21:23:13.712 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-02 21:23:13.715 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-02 21:23:13.715 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 21:23:13.716 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 3.3101ms
2025-10-02 21:23:13.716 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 21:23:13.716 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 3.8859ms
2025-10-02 21:23:13.718 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-02 21:23:13.718 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:13.718 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 21:23:13.718 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-02 21:23:13.721 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-02 21:23:13.722 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 21:23:13.722 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 3.5215ms
2025-10-02 21:23:13.722 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 21:23:13.722 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 4.2534ms
2025-10-02 21:23:13.737 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-02 21:23:13.737 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:13.737 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.2909ms
2025-10-02 21:23:13.740 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-02 21:23:13.740 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:13.741 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:23:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 21:23:13.742 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:23:13'.
2025-10-02 21:23:13.742 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 21:23:13.742 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-02 21:23:13.746 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-02 21:23:13.746 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-02 21:23:13.746 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 3.9615ms
2025-10-02 21:23:13.746 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 21:23:13.746 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 6.4682ms
2025-10-02 21:23:13.748 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-02 21:23:13.748 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:13.749 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:23:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 21:23:13.749 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:23:13'.
2025-10-02 21:23:13.749 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 21:23:13.749 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-02 21:23:13.752 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-02 21:23:13.753 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-02 21:23:13.753 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 3.4749ms
2025-10-02 21:23:13.753 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 21:23:13.753 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 5.0899ms
2025-10-02 21:23:30.381 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-02 21:23:30.382 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:30.382 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.3726ms
2025-10-02 21:23:30.384 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 21:23:30.384 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:30.384 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.3562ms
2025-10-02 21:23:30.387 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 21:23:30.387 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:30.387 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:23:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 21:23:30.388 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 21:23:30.388 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:23:30'.
2025-10-02 21:23:30.388 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:30.388 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 21:23:30.389 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 21:23:30.389 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:23:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 21:23:30.389 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:23:30'.
2025-10-02 21:23:30.389 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 21:23:30.390 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 21:23:30.393 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 21:23:30.393 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 21:23:30.394 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 21:23:30.394 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 21:23:30.394 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 5.2818ms
2025-10-02 21:23:30.394 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 21:23:30.394 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 4.081ms
2025-10-02 21:23:30.394 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 7.3714ms
2025-10-02 21:23:30.394 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 21:23:30.394 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 6.7288ms
2025-10-02 21:23:30.396 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 21:23:30.397 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:30.397 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:23:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 21:23:30.398 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:23:30'.
2025-10-02 21:23:30.398 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 21:23:30.398 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 21:23:30.401 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 21:23:30.401 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:30.402 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:23:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 21:23:30.402 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:23:30'.
2025-10-02 21:23:30.402 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 21:23:30.402 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 21:23:30.402 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 21:23:30.403 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 21:23:30.403 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 5.0227ms
2025-10-02 21:23:30.403 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 21:23:30.403 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 6.9917ms
2025-10-02 21:23:30.406 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 21:23:30.408 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 21:23:30.408 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 5.6016ms
2025-10-02 21:23:30.408 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 21:23:30.408 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 7.613ms
2025-10-02 21:23:30.419 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-02 21:23:30.420 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:30.420 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.4617ms
2025-10-02 21:23:30.420 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-02 21:23:30.420 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:30.420 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.1832ms
2025-10-02 21:23:30.424 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-02 21:23:30.424 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:30.425 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 21:23:30.425 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-02 21:23:30.428 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-02 21:23:30.429 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 21:23:30.429 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 4.4591ms
2025-10-02 21:23:30.429 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 21:23:30.429 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 5.2685ms
2025-10-02 21:23:30.431 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-02 21:23:30.431 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:30.431 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 21:23:30.431 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-02 21:23:30.434 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-02 21:23:30.435 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 21:23:30.435 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 3.8757ms
2025-10-02 21:23:30.435 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 21:23:30.436 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 4.6519ms
2025-10-02 21:23:30.466 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-02 21:23:30.466 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:30.466 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.3371ms
2025-10-02 21:23:30.466 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-02 21:23:30.467 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:30.467 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.3205ms
2025-10-02 21:23:30.469 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-02 21:23:30.469 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:30.470 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:23:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 21:23:30.470 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:23:30'.
2025-10-02 21:23:30.470 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 21:23:30.471 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-02 21:23:30.475 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-02 21:23:30.475 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-02 21:23:30.476 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 5.0394ms
2025-10-02 21:23:30.476 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 21:23:30.476 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 6.4733ms
2025-10-02 21:23:30.477 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-02 21:23:30.477 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:30.478 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:23:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 21:23:30.479 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:23:30'.
2025-10-02 21:23:30.479 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 21:23:30.479 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-02 21:23:30.482 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-02 21:23:30.483 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-02 21:23:30.483 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 3.8072ms
2025-10-02 21:23:30.483 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 21:23:30.483 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 5.6573ms
2025-10-02 21:23:55.121 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-02 21:23:55.121 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:55.121 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.1523ms
2025-10-02 21:23:55.122 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 21:23:55.122 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:55.122 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.1059ms
2025-10-02 21:23:55.124 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 21:23:55.124 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:55.124 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 21:23:55.124 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:23:55'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 21:23:55.125 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:23:55'.
2025-10-02 21:23:55.124 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:55.125 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 21:23:55.125 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 21:23:55.125 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:23:55'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 21:23:55.125 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:23:55'.
2025-10-02 21:23:55.125 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 21:23:55.125 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 21:23:55.130 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 21:23:55.130 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 21:23:55.130 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 21:23:55.130 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 5.1824ms
2025-10-02 21:23:55.130 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 21:23:55.130 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 21:23:55.130 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 4.8324ms
2025-10-02 21:23:55.130 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 21:23:55.130 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 5.9917ms
2025-10-02 21:23:55.130 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 5.6761ms
2025-10-02 21:23:55.131 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 21:23:55.131 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 21:23:55.131 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:55.131 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:55.132 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:23:55'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 21:23:55.132 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:23:55'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 21:23:55.132 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:23:55'.
2025-10-02 21:23:55.132 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:23:55'.
2025-10-02 21:23:55.132 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 21:23:55.132 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 21:23:55.132 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 21:23:55.132 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 21:23:55.134 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 21:23:55.134 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 21:23:55.134 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 21:23:55.134 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 1.5959ms
2025-10-02 21:23:55.134 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 21:23:55.134 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 2.5071ms
2025-10-02 21:23:55.134 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 21:23:55.134 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.7269ms
2025-10-02 21:23:55.134 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 21:23:55.134 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 2.7354ms
2025-10-02 21:23:55.143 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-02 21:23:55.143 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:55.144 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.1883ms
2025-10-02 21:23:55.144 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-02 21:23:55.144 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:55.144 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.1666ms
2025-10-02 21:23:55.145 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-02 21:23:55.145 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:55.145 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 21:23:55.146 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-02 21:23:55.154 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-02 21:23:55.155 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 21:23:55.155 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 9.3889ms
2025-10-02 21:23:55.155 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 21:23:55.155 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 9.8169ms
2025-10-02 21:23:55.156 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-02 21:23:55.156 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:55.157 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 21:23:55.157 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-02 21:23:55.158 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-02 21:23:55.159 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 21:23:55.159 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 2.3162ms
2025-10-02 21:23:55.159 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 21:23:55.159 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 2.6761ms
2025-10-02 21:23:55.173 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-02 21:23:55.173 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:55.173 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.177ms
2025-10-02 21:23:55.175 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-02 21:23:55.175 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:55.175 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:23:55'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 21:23:55.175 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:23:55'.
2025-10-02 21:23:55.175 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 21:23:55.175 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-02 21:23:55.184 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-02 21:23:55.184 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-02 21:23:55.184 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 9.004ms
2025-10-02 21:23:55.184 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 21:23:55.184 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 9.8875ms
2025-10-02 21:23:55.185 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-02 21:23:55.185 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:23:55.186 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:23:55'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 21:23:55.186 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:23:55'.
2025-10-02 21:23:55.186 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 21:23:55.186 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-02 21:23:55.188 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-02 21:23:55.188 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-02 21:23:55.188 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 1.9639ms
2025-10-02 21:23:55.188 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 21:23:55.188 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 2.8276ms
2025-10-02 21:24:39.149 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-02 21:24:39.149 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:24:39.149 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.2932ms
2025-10-02 21:24:39.150 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 21:24:39.150 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:24:39.150 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.0969ms
2025-10-02 21:24:39.152 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 21:24:39.152 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:24:39.152 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 21:24:39.152 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:24:39.152 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:24:39'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 21:24:39.152 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:24:39'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 21:24:39.153 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:24:39'.
2025-10-02 21:24:39.153 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:24:39'.
2025-10-02 21:24:39.153 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 21:24:39.153 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 21:24:39.153 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 21:24:39.153 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 21:24:39.159 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 21:24:39.159 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 21:24:39.159 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 21:24:39.159 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 21:24:39.159 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 5.9221ms
2025-10-02 21:24:39.159 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 21:24:39.159 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 5.9845ms
2025-10-02 21:24:39.159 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 21:24:39.159 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 7.2193ms
2025-10-02 21:24:39.159 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 7.6032ms
2025-10-02 21:24:39.205 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-02 21:24:39.205 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:24:39.205 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.165ms
2025-10-02 21:24:39.207 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-02 21:24:39.207 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:24:39.207 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 21:24:39.207 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-02 21:24:39.218 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-02 21:24:39.219 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 21:24:39.219 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 11.9601ms
2025-10-02 21:24:39.219 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 21:24:39.219 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 12.3523ms
2025-10-02 21:24:39.227 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-02 21:24:39.227 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:24:39.228 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.2488ms
2025-10-02 21:24:39.230 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-02 21:24:39.230 +04:00 [INF] CORS policy execution successful.
2025-10-02 21:24:39.230 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:24:39'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 21:24:39.230 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 17:24:39'.
2025-10-02 21:24:39.230 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 21:24:39.230 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-02 21:24:39.241 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-02 21:24:39.242 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-02 21:24:39.242 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 11.5179ms
2025-10-02 21:24:39.242 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 21:24:39.242 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 12.3998ms
2025-10-02 22:12:41.645 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-02 22:12:41.645 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 22:12:41.646 +04:00 [INF] CORS policy execution successful.
2025-10-02 22:12:41.648 +04:00 [INF] CORS policy execution successful.
2025-10-02 22:12:41.648 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 3.0932ms
2025-10-02 22:12:41.648 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 3.1696ms
2025-10-02 22:12:41.658 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 22:12:41.658 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 22:12:41.658 +04:00 [INF] CORS policy execution successful.
2025-10-02 22:12:41.658 +04:00 [INF] CORS policy execution successful.
2025-10-02 22:12:41.658 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 18:12:41'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 22:12:41.659 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 18:12:41'.
2025-10-02 22:12:41.658 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 18:12:41'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 22:12:41.659 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 18:12:41'.
2025-10-02 22:12:41.659 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 22:12:41.659 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 22:12:41.659 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 22:12:41.659 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 22:12:41.736 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 22:12:41.736 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 22:12:41.737 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 22:12:41.737 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 77.3969ms
2025-10-02 22:12:41.737 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 22:12:41.737 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 79.0312ms
2025-10-02 22:12:41.737 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 22:12:41.737 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 77.7416ms
2025-10-02 22:12:41.737 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 22:12:41.737 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 79.3836ms
2025-10-02 22:12:41.756 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-02 22:12:41.756 +04:00 [INF] CORS policy execution successful.
2025-10-02 22:12:41.756 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.2015ms
2025-10-02 22:12:41.759 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-02 22:12:41.759 +04:00 [INF] CORS policy execution successful.
2025-10-02 22:12:41.759 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 22:12:41.759 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-02 22:12:41.771 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-02 22:12:41.772 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 22:12:41.772 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 13.0747ms
2025-10-02 22:12:41.772 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 22:12:41.773 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 13.8255ms
2025-10-02 22:12:41.944 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-02 22:12:41.945 +04:00 [INF] CORS policy execution successful.
2025-10-02 22:12:41.945 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.2979ms
2025-10-02 22:12:41.948 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-02 22:12:41.948 +04:00 [INF] CORS policy execution successful.
2025-10-02 22:12:41.949 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 18:12:41'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 22:12:41.950 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 18:12:41'.
2025-10-02 22:12:41.950 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 22:12:41.950 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-02 22:12:41.963 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-02 22:12:41.963 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-02 22:12:41.964 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 13.5976ms
2025-10-02 22:12:41.964 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 22:12:41.964 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 15.5674ms
2025-10-02 22:13:50.121 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-02 22:13:50.121 +04:00 [INF] CORS policy execution successful.
2025-10-02 22:13:50.121 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.2435ms
2025-10-02 22:13:50.122 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 22:13:50.122 +04:00 [INF] CORS policy execution successful.
2025-10-02 22:13:50.122 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.1134ms
2025-10-02 22:13:50.124 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 22:13:50.124 +04:00 [INF] CORS policy execution successful.
2025-10-02 22:13:50.124 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 22:13:50.124 +04:00 [INF] CORS policy execution successful.
2025-10-02 22:13:50.124 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 18:13:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 22:13:50.124 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 18:13:50'.
2025-10-02 22:13:50.124 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 18:13:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 22:13:50.125 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 18:13:50'.
2025-10-02 22:13:50.124 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 22:13:50.125 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 22:13:50.125 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 22:13:50.125 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 22:13:50.138 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 22:13:50.138 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 22:13:50.138 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 22:13:50.138 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 22:13:50.138 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 13.5111ms
2025-10-02 22:13:50.138 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 13.5248ms
2025-10-02 22:13:50.138 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 22:13:50.138 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 22:13:50.138 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 14.5026ms
2025-10-02 22:13:50.138 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 14.7631ms
2025-10-02 22:13:50.357 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-02 22:13:50.357 +04:00 [INF] CORS policy execution successful.
2025-10-02 22:13:50.358 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.1742ms
2025-10-02 22:13:50.362 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-02 22:13:50.362 +04:00 [INF] CORS policy execution successful.
2025-10-02 22:13:50.363 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 22:13:50.363 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-02 22:13:50.381 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-02 22:13:50.382 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 22:13:50.382 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 19.0915ms
2025-10-02 22:13:50.382 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 22:13:50.382 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 19.6673ms
2025-10-02 22:13:50.446 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-02 22:13:50.446 +04:00 [INF] CORS policy execution successful.
2025-10-02 22:13:50.446 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.1861ms
2025-10-02 22:13:50.447 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-02 22:13:50.448 +04:00 [INF] CORS policy execution successful.
2025-10-02 22:13:50.450 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 18:13:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 22:13:50.450 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 18:13:50'.
2025-10-02 22:13:50.450 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 22:13:50.450 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-02 22:13:50.463 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-02 22:13:50.463 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-02 22:13:50.463 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 13.0918ms
2025-10-02 22:13:50.463 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 22:13:50.463 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 15.8361ms
2025-10-02 22:27:39.850 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-02 22:27:39.850 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 22:27:39.850 +04:00 [INF] CORS policy execution successful.
2025-10-02 22:27:39.850 +04:00 [INF] CORS policy execution successful.
2025-10-02 22:27:39.851 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.4567ms
2025-10-02 22:27:39.851 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.4571ms
2025-10-02 22:27:39.856 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 22:27:39.856 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 22:27:39.856 +04:00 [INF] CORS policy execution successful.
2025-10-02 22:27:39.856 +04:00 [INF] CORS policy execution successful.
2025-10-02 22:27:39.857 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 18:27:39'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 22:27:39.857 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 18:27:39'.
2025-10-02 22:27:39.857 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 18:27:39'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 22:27:39.857 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 22:27:39.857 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 18:27:39'.
2025-10-02 22:27:39.857 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 22:27:39.857 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 22:27:39.857 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 22:27:39.866 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 22:27:39.866 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 22:27:39.867 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 22:27:39.867 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 22:27:39.867 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 9.5814ms
2025-10-02 22:27:39.867 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 22:27:39.867 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 9.6854ms
2025-10-02 22:27:39.867 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 22:27:39.867 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 10.8015ms
2025-10-02 22:27:39.867 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 10.8094ms
2025-10-02 22:27:39.939 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-02 22:27:39.939 +04:00 [INF] CORS policy execution successful.
2025-10-02 22:27:39.939 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.1372ms
2025-10-02 22:27:39.941 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-02 22:27:39.941 +04:00 [INF] CORS policy execution successful.
2025-10-02 22:27:39.941 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 22:27:39.941 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-02 22:27:39.953 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-02 22:27:39.954 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 22:27:39.954 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 12.6901ms
2025-10-02 22:27:39.954 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 22:27:39.954 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 13.147ms
2025-10-02 22:27:40.016 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-02 22:27:40.016 +04:00 [INF] CORS policy execution successful.
2025-10-02 22:27:40.016 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.3121ms
2025-10-02 22:27:40.019 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-02 22:27:40.019 +04:00 [INF] CORS policy execution successful.
2025-10-02 22:27:40.020 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 18:27:40'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 22:27:40.020 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 18:27:40'.
2025-10-02 22:27:40.020 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 22:27:40.020 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-02 22:27:40.032 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-02 22:27:40.033 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-02 22:27:40.033 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 12.8477ms
2025-10-02 22:27:40.033 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 22:27:40.033 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 13.7256ms
2025-10-02 23:03:05.594 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-02 23:03:05.594 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:03:05.594 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 23:03:05.594 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.2529ms
2025-10-02 23:03:05.594 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:03:05.595 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.5562ms
2025-10-02 23:03:05.599 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 23:03:05.599 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:03:05.599 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 23:03:05.599 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:03:05.599 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:03:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:03:05.599 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:03:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:03:05.599 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:03:05'.
2025-10-02 23:03:05.599 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:03:05'.
2025-10-02 23:03:05.599 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:03:05.599 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 23:03:05.599 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 23:03:05.599 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 23:03:05.629 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-02 23:03:05.629 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:03:05.629 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.1531ms
2025-10-02 23:03:05.630 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-02 23:03:05.630 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:03:05.631 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 23:03:05.631 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-02 23:03:05.665 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 23:03:05.665 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 23:03:05.665 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:03:05.666 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:03:05.666 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 66.1148ms
2025-10-02 23:03:05.666 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 65.9001ms
2025-10-02 23:03:05.666 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 23:03:05.666 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:03:05.666 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 67.0447ms
2025-10-02 23:03:05.666 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 66.9695ms
2025-10-02 23:03:05.668 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-02 23:03:05.669 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:03:05.669 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 38.4966ms
2025-10-02 23:03:05.669 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 23:03:05.669 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 38.9714ms
2025-10-02 23:03:05.680 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-02 23:03:05.680 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:03:05.680 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.1802ms
2025-10-02 23:03:05.682 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-02 23:03:05.682 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:03:05.682 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:03:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:03:05.683 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:03:05'.
2025-10-02 23:03:05.683 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 23:03:05.683 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-02 23:03:05.695 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-02 23:03:05.695 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-02 23:03:05.695 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 11.9051ms
2025-10-02 23:03:05.695 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 23:03:05.695 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 13.516ms
2025-10-02 23:03:49.748 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-02 23:03:49.748 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:03:49.748 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.4697ms
2025-10-02 23:03:49.750 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 23:03:49.751 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:03:49.751 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.186ms
2025-10-02 23:03:49.751 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 23:03:49.751 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:03:49.751 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:03:49'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:03:49.752 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:03:49'.
2025-10-02 23:03:49.752 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 23:03:49.752 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 23:03:49.752 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 23:03:49.753 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:03:49.753 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:03:49'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:03:49.753 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:03:49'.
2025-10-02 23:03:49.753 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:03:49.753 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 23:03:49.766 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 23:03:49.766 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 23:03:49.766 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:03:49.766 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:03:49.766 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.8516ms
2025-10-02 23:03:49.766 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 14.5521ms
2025-10-02 23:03:49.766 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:03:49.766 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 23:03:49.766 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 15.4587ms
2025-10-02 23:03:49.766 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 13.9985ms
2025-10-02 23:03:49.833 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-02 23:03:49.833 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:03:49.833 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.228ms
2025-10-02 23:03:49.836 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-02 23:03:49.836 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:03:49.836 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 23:03:49.836 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-02 23:03:49.850 +04:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-02 23:03:49.851 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:03:49.851 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 14.9026ms
2025-10-02 23:03:49.851 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 23:03:49.851 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 15.4828ms
2025-10-02 23:03:49.883 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-02 23:03:49.883 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:03:49.883 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.2387ms
2025-10-02 23:03:49.885 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-02 23:03:49.885 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:03:49.885 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:03:49'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:03:49.885 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:03:49'.
2025-10-02 23:03:49.885 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 23:03:49.885 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-02 23:03:49.899 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-02 23:03:49.899 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-02 23:03:49.899 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 13.9021ms
2025-10-02 23:03:49.899 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 23:03:49.899 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 14.4573ms
2025-10-02 23:03:51.451 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 23:03:51.451 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:03:51.451 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:03:51'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:03:51.451 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:03:51'.
2025-10-02 23:03:51.451 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 23:03:51.451 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 23:03:51.452 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 23:03:51.452 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:03:51.452 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:03:51'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:03:51.453 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:03:51'.
2025-10-02 23:03:51.453 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:03:51.453 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 23:03:51.453 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 23:03:51.453 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 23:03:51.454 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:03:51.454 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:03:51.454 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 2.4514ms
2025-10-02 23:03:51.454 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 23:03:51.454 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.0584ms
2025-10-02 23:03:51.454 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:03:51.454 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 3.1676ms
2025-10-02 23:03:51.454 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 1.3946ms
2025-10-02 23:03:51.586 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-02 23:03:51.586 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:03:51.586 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 23:03:51.586 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-02 23:03:51.587 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-02 23:03:51.591 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:03:51.591 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 5.2402ms
2025-10-02 23:03:51.591 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 23:03:51.591 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 5.565ms
2025-10-02 23:03:51.640 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-02 23:03:51.640 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:03:51.640 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:03:51'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:03:51.640 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:03:51'.
2025-10-02 23:03:51.640 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 23:03:51.640 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-02 23:03:51.642 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-02 23:03:51.642 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-02 23:03:51.642 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 1.9249ms
2025-10-02 23:03:51.642 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 23:03:51.642 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 2.5083ms
2025-10-02 23:03:58.805 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-02 23:03:58.805 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:03:58.805 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.401ms
2025-10-02 23:03:58.806 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 23:03:58.806 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:03:58.806 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.2155ms
2025-10-02 23:03:58.809 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 23:03:58.809 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 23:03:58.810 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:03:58.810 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:03:58.810 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:03:58'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:03:58.810 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:03:58'.
2025-10-02 23:03:58.810 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:03:58.810 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:03:58'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:03:58.810 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 23:03:58.811 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:03:58'.
2025-10-02 23:03:58.811 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 23:03:58.811 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 23:03:58.813 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 23:03:58.813 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 23:03:58.814 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:03:58.814 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 2.4932ms
2025-10-02 23:03:58.814 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:03:58.814 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 4.3885ms
2025-10-02 23:03:58.814 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:03:58.814 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 2.8401ms
2025-10-02 23:03:58.814 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 23:03:58.814 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 5.1178ms
2025-10-02 23:03:58.877 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-02 23:03:58.878 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:03:58.878 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.1279ms
2025-10-02 23:03:58.880 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-02 23:03:58.881 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:03:58.881 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 23:03:58.881 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-02 23:03:58.884 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-02 23:03:58.885 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:03:58.885 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 3.1785ms
2025-10-02 23:03:58.885 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 23:03:58.885 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 4.5281ms
2025-10-02 23:03:58.921 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-02 23:03:58.921 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:03:58.921 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.4215ms
2025-10-02 23:03:58.925 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-02 23:03:58.925 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:03:58.926 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:03:58'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:03:58.926 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:03:58'.
2025-10-02 23:03:58.926 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 23:03:58.926 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-02 23:03:58.940 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-02 23:03:58.941 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-02 23:03:58.941 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 15.3803ms
2025-10-02 23:03:58.941 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 23:03:58.941 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 16.2455ms
2025-10-02 23:04:13.836 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-02 23:04:13.836 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:04:13.836 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.1641ms
2025-10-02 23:04:13.837 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-02 23:04:13.837 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:04:13.837 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 23:04:13.837 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-02 23:04:13.839 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-02 23:04:13.840 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:04:13.840 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 2.7362ms
2025-10-02 23:04:13.840 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 23:04:13.840 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 3.2136ms
2025-10-02 23:04:13.845 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-02 23:04:13.845 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:04:13.845 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.1509ms
2025-10-02 23:04:13.847 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-02 23:04:13.848 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:04:13.848 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:04:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:04:13.848 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:04:13'.
2025-10-02 23:04:13.848 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 23:04:13.848 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-02 23:04:13.861 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-02 23:04:13.861 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-02 23:04:13.862 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 13.38ms
2025-10-02 23:04:13.862 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 23:04:13.862 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 14.472ms
2025-10-02 23:04:15.796 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-02 23:04:15.796 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 23:04:15.796 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-02 23:04:15.797 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:04:15.797 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:04:15.797 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:04:15.797 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.32ms
2025-10-02 23:04:15.797 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.5218ms
2025-10-02 23:04:15.797 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.4082ms
2025-10-02 23:04:15.798 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 23:04:15.798 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:04:15.798 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.0908ms
2025-10-02 23:04:15.801 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 23:04:15.801 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 23:04:15.801 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:04:15.801 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:04:15.802 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:04:15'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:04:15.802 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:04:15'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:04:15.802 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:04:15'.
2025-10-02 23:04:15.802 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:04:15'.
2025-10-02 23:04:15.802 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 23:04:15.802 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:04:15.802 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 23:04:15.802 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 23:04:15.805 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 23:04:15.805 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 23:04:15.805 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:04:15.805 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 2.9198ms
2025-10-02 23:04:15.805 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:04:15.805 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 23:04:15.805 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 3.0016ms
2025-10-02 23:04:15.805 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 4.1291ms
2025-10-02 23:04:15.805 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:04:15.805 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 4.2146ms
2025-10-02 23:04:15.807 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 23:04:15.807 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 23:04:15.807 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:04:15.807 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:04:15.807 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:04:15'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:04:15.807 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:04:15'.
2025-10-02 23:04:15.807 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:04:15'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:04:15.807 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:04:15.807 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:04:15'.
2025-10-02 23:04:15.807 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 23:04:15.807 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 23:04:15.807 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 23:04:15.810 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 23:04:15.810 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 23:04:15.810 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:04:15.810 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:04:15.811 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 3.3814ms
2025-10-02 23:04:15.811 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 23:04:15.811 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 4.1975ms
2025-10-02 23:04:15.811 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 3.874ms
2025-10-02 23:04:15.811 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:04:15.811 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 4.7315ms
2025-10-02 23:04:21.749 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-02 23:04:21.749 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:04:21.749 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.1988ms
2025-10-02 23:04:21.751 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 23:04:21.751 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:04:21.751 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 23:04:21.751 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.2867ms
2025-10-02 23:04:21.751 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:04:21.751 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.1282ms
2025-10-02 23:04:21.752 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 23:04:21.752 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-02 23:04:21.753 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:04:21.753 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 23:04:21.753 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:04:21.753 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:04:21.753 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.1616ms
2025-10-02 23:04:21.753 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.213ms
2025-10-02 23:04:21.753 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.2201ms
2025-10-02 23:04:21.754 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 23:04:21.754 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:04:21.754 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:04:21'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:04:21.754 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:04:21'.
2025-10-02 23:04:21.755 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 23:04:21.755 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 23:04:21.756 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 23:04:21.756 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:04:21.757 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:04:21'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:04:21.758 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:04:21'.
2025-10-02 23:04:21.758 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:04:21.758 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 23:04:21.759 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 23:04:21.759 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:04:21.759 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 4.408ms
2025-10-02 23:04:21.759 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 23:04:21.759 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 5.0954ms
2025-10-02 23:04:21.759 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 23:04:21.760 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:04:21.760 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 2.0276ms
2025-10-02 23:04:21.760 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:04:21.760 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 3.7744ms
2025-10-02 23:04:21.760 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 23:04:21.760 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:04:21.760 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 23:04:21.761 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:04:21.761 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:04:21'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:04:21.761 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:04:21'.
2025-10-02 23:04:21.761 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:04:21.761 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:04:21'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:04:21.761 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:04:21'.
2025-10-02 23:04:21.761 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 23:04:21.761 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 23:04:21.761 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 23:04:21.762 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 23:04:21.762 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:04:21.762 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 23:04:21.763 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.2718ms
2025-10-02 23:04:21.763 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:04:21.763 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:04:21.763 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 2.1781ms
2025-10-02 23:04:21.763 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 1.3704ms
2025-10-02 23:04:21.763 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 23:04:21.763 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 2.6091ms
2025-10-02 23:04:21.764 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 23:04:21.764 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:04:21.764 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:04:21'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:04:21.764 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:04:21'.
2025-10-02 23:04:21.765 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:04:21.765 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 23:04:21.766 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 23:04:21.766 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:04:21.766 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.6435ms
2025-10-02 23:04:21.766 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:04:21.766 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 2.6824ms
2025-10-02 23:04:21.767 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 23:04:21.767 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:04:21.767 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:04:21'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:04:21.768 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:04:21'.
2025-10-02 23:04:21.768 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:04:21.768 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 23:04:21.769 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 23:04:21.770 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:04:21.770 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.9969ms
2025-10-02 23:04:21.770 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:04:21.770 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 2.8329ms
2025-10-02 23:06:14.218 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-02 23:06:14.218 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 23:06:14.218 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:06:14.218 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:06:14.219 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.113ms
2025-10-02 23:06:14.219 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.2272ms
2025-10-02 23:06:14.219 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 23:06:14.219 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:06:14.219 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.0666ms
2025-10-02 23:06:14.219 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-02 23:06:14.219 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:06:14.219 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.1169ms
2025-10-02 23:06:14.220 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 23:06:14.220 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 23:06:14.220 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:06:14.220 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:06:14.220 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.1273ms
2025-10-02 23:06:14.220 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.1503ms
2025-10-02 23:06:14.221 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 23:06:14.221 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 23:06:14.221 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:06:14.222 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:06:14.222 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:06:14'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:06:14.222 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:06:14'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:06:14.222 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:06:14'.
2025-10-02 23:06:14.222 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:06:14'.
2025-10-02 23:06:14.222 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:06:14.222 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 23:06:14.222 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 23:06:14.222 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 23:06:14.233 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 23:06:14.234 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:06:14.234 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 11.3757ms
2025-10-02 23:06:14.234 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 23:06:14.233 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 23:06:14.234 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 12.3807ms
2025-10-02 23:06:14.234 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:06:14.234 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 11.6959ms
2025-10-02 23:06:14.234 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:06:14.234 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 12.6268ms
2025-10-02 23:06:14.234 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 23:06:14.234 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 23:06:14.235 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:06:14.235 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:06:14.235 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:06:14'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:06:14.235 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:06:14'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:06:14.235 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:06:14'.
2025-10-02 23:06:14.235 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:06:14'.
2025-10-02 23:06:14.235 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:06:14.235 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 23:06:14.235 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 23:06:14.235 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 23:06:14.237 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 23:06:14.237 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:06:14.237 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 23:06:14.237 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 2.0166ms
2025-10-02 23:06:14.237 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 23:06:14.237 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 3.0427ms
2025-10-02 23:06:14.238 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:06:14.238 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 2.347ms
2025-10-02 23:06:14.238 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:06:14.238 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 3.2312ms
2025-10-02 23:06:14.238 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 23:06:14.238 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:06:14.238 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:06:14'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:06:14.239 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:06:14'.
2025-10-02 23:06:14.239 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:06:14.239 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 23:06:14.240 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 23:06:14.240 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:06:14.240 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.3025ms
2025-10-02 23:06:14.240 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:06:14.240 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 2.0062ms
2025-10-02 23:06:14.241 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 23:06:14.241 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:06:14.241 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:06:14'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:06:14.241 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:06:14'.
2025-10-02 23:06:14.241 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:06:14.241 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 23:06:14.242 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 23:06:14.243 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:06:14.243 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.5077ms
2025-10-02 23:06:14.243 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:06:14.243 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 2.175ms
2025-10-02 23:06:18.358 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 23:06:18.358 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 23:06:18.358 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:06:18.358 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:06:18.358 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:06:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:06:18.358 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:06:18'.
2025-10-02 23:06:18.358 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:06:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:06:18.359 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:06:18'.
2025-10-02 23:06:18.358 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 23:06:18.359 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:06:18.359 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 23:06:18.359 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 23:06:18.360 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 23:06:18.360 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:06:18.360 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.1958ms
2025-10-02 23:06:18.360 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:06:18.360 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 2.0617ms
2025-10-02 23:06:18.361 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 23:06:18.361 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:06:18.361 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 2.1894ms
2025-10-02 23:06:18.361 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 23:06:18.361 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 3.0441ms
2025-10-02 23:06:18.361 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 23:06:18.361 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:06:18.362 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:06:18'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:06:18.362 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:06:18'.
2025-10-02 23:06:18.362 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:06:18.362 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 23:06:18.363 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 23:06:18.364 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:06:18.364 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.9261ms
2025-10-02 23:06:18.364 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:06:18.364 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 2.5495ms
2025-10-02 23:06:27.178 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-02 23:06:27.178 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 23:06:27.178 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 23:06:27.178 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:06:27.178 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:06:27.179 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.154ms
2025-10-02 23:06:27.179 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.1827ms
2025-10-02 23:06:27.178 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:06:27.179 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.3755ms
2025-10-02 23:06:27.182 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 23:06:27.182 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 23:06:27.182 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:06:27.182 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:06:27.182 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:06:27'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:06:27.183 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:06:27'.
2025-10-02 23:06:27.182 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:06:27'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:06:27.183 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:06:27'.
2025-10-02 23:06:27.183 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 23:06:27.183 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:06:27.183 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 23:06:27.183 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 23:06:27.185 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 23:06:27.185 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:06:27.185 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 2.053ms
2025-10-02 23:06:27.185 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:06:27.185 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 3.0568ms
2025-10-02 23:06:27.186 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 23:06:27.186 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:06:27.186 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 3.0194ms
2025-10-02 23:06:27.186 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 23:06:27.186 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 23:06:27.186 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 4.0536ms
2025-10-02 23:06:27.186 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:06:27.186 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:06:27'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:06:27.187 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:06:27'.
2025-10-02 23:06:27.187 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:06:27.187 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 23:06:27.189 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 23:06:27.189 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:06:27.189 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 2.5726ms
2025-10-02 23:06:27.189 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:06:27.189 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 3.3105ms
2025-10-02 23:06:27.227 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-02 23:06:27.228 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:06:27.228 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.1537ms
2025-10-02 23:06:27.229 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-02 23:06:27.229 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:06:27.230 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 23:06:27.230 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-02 23:06:27.241 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-02 23:06:27.242 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:06:27.242 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 12.4748ms
2025-10-02 23:06:27.242 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 23:06:27.242 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 13.1031ms
2025-10-02 23:06:27.267 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-02 23:06:27.267 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:06:27.268 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.2806ms
2025-10-02 23:06:27.269 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-02 23:06:27.269 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:06:27.269 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:06:27'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:06:27.270 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:06:27'.
2025-10-02 23:06:27.270 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 23:06:27.270 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-02 23:06:27.279 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-02 23:06:27.280 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-02 23:06:27.280 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 9.9793ms
2025-10-02 23:06:27.280 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 23:06:27.280 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 10.7331ms
2025-10-02 23:08:26.542 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-02 23:08:26.542 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:08:26.542 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.3588ms
2025-10-02 23:08:26.543 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 23:08:26.543 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:08:26.543 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 23:08:26.543 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:08:26.543 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.4075ms
2025-10-02 23:08:26.543 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.0781ms
2025-10-02 23:08:26.546 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 23:08:26.546 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:08:26.546 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:08:26'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:08:26.547 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:08:26'.
2025-10-02 23:08:26.547 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 23:08:26.547 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 23:08:26.547 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:08:26.547 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 23:08:26.547 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:08:26'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:08:26.547 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:08:26'.
2025-10-02 23:08:26.547 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:08:26.547 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 23:08:26.553 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 23:08:26.553 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 23:08:26.553 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:08:26.553 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 6.5483ms
2025-10-02 23:08:26.553 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:08:26.553 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 23:08:26.553 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 6.1749ms
2025-10-02 23:08:26.553 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:08:26.553 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 7.3981ms
2025-10-02 23:08:26.554 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 6.8606ms
2025-10-02 23:08:26.555 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 23:08:26.555 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:08:26.555 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:08:26'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:08:26.556 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:08:26'.
2025-10-02 23:08:26.556 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:08:26.556 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 23:08:26.557 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 23:08:26.558 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:08:26.558 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 2.0503ms
2025-10-02 23:08:26.558 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:08:26.558 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 3.0299ms
2025-10-02 23:10:46.878 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 23:10:46.878 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-02 23:10:46.878 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-02 23:10:46.878 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:10:46.878 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:10:46.878 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.19ms
2025-10-02 23:10:46.878 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.1869ms
2025-10-02 23:10:46.878 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:10:46.878 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.2584ms
2025-10-02 23:10:46.883 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 23:10:46.883 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 23:10:46.883 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:10:46.883 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:10:46.883 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:10:46'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:10:46.883 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:10:46'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:10:46.883 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:10:46'.
2025-10-02 23:10:46.883 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:10:46'.
2025-10-02 23:10:46.883 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 23:10:46.883 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:10:46.883 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 23:10:46.883 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 23:10:46.888 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 23:10:46.888 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:10:46.889 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 5.0934ms
2025-10-02 23:10:46.889 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 23:10:46.889 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 5.8519ms
2025-10-02 23:10:46.889 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 23:10:46.889 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:10:46.890 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 6.2148ms
2025-10-02 23:10:46.890 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:10:46.890 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 7.0787ms
2025-10-02 23:10:46.891 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 23:10:46.891 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:10:46.891 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:10:46'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:10:46.892 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:10:46'.
2025-10-02 23:10:46.892 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:10:46.892 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 23:10:46.893 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 23:10:46.894 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:10:46.894 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.9375ms
2025-10-02 23:10:46.894 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:10:46.894 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 3.0891ms
2025-10-02 23:10:49.410 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 23:10:49.410 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-02 23:10:49.410 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:10:49.410 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:10:49.411 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:10:49'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:10:49.411 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:10:49'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:10:49.411 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:10:49'.
2025-10-02 23:10:49.411 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:10:49'.
2025-10-02 23:10:49.411 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:10:49.411 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 23:10:49.411 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 23:10:49.411 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-02 23:10:49.412 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-02 23:10:49.412 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:10:49.412 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 1.3228ms
2025-10-02 23:10:49.412 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 23:10:49.412 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-02 23:10:49.413 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 2.1701ms
2025-10-02 23:10:49.413 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:10:49.413 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 1.6358ms
2025-10-02 23:10:49.413 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:10:49.413 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 2.3988ms
2025-10-02 23:10:49.414 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-02 23:10:49.414 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:10:49.414 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:10:49'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:10:49.414 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:10:49'.
2025-10-02 23:10:49.414 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:10:49.414 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-02 23:10:49.417 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-02 23:10:49.417 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:10:49.417 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 3.0058ms
2025-10-02 23:10:49.417 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-02 23:10:49.418 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 3.776ms
2025-10-02 23:10:49.519 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-02 23:10:49.519 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:10:49.519 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.1662ms
2025-10-02 23:10:49.521 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-02 23:10:49.521 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:10:49.521 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 23:10:49.521 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-02 23:10:49.534 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-02 23:10:49.535 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-02 23:10:49.535 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 14.3623ms
2025-10-02 23:10:49.535 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-02 23:10:49.536 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 14.9904ms
2025-10-02 23:10:49.687 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-02 23:10:49.687 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:10:49.689 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-02 23:10:49.689 +04:00 [INF] CORS policy execution successful.
2025-10-02 23:10:49.687 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.1917ms
2025-10-02 23:10:49.690 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:10:49'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-02 23:10:49.690 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '02.10.2025 19:10:49'.
2025-10-02 23:10:49.691 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 23:10:49.691 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-02 23:10:49.703 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-02 23:10:49.704 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-02 23:10:49.704 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 13.2097ms
2025-10-02 23:10:49.704 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-02 23:10:49.704 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 14.7299ms
