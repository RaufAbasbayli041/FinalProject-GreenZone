2025-10-03 23:19:49.424 +04:00 [WRN] No store type was specified for the decimal property 'Quantity' on entity type 'OrderItem'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-10-03 23:19:49.851 +04:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-03 23:19:49.877 +04:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-03 23:19:49.880 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-10-03 23:19:49.881 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-10-03 23:19:49.907 +04:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-10-03 23:19:49.920 +04:00 [INF] No migrations were applied. The database is already up to date.
2025-10-03 23:19:49.921 +04:00 [INF] Migrations applied
2025-10-03 23:19:50.187 +04:00 [INF] Executed DbCommand (24ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-03 23:19:50.219 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-03 23:19:50.220 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-10-03 23:19:50.232 +04:00 [INF] User profile is available. Using 'C:\Users\ASUS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-03 23:19:50.251 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-10-03 23:19:50.276 +04:00 [INF] Admin user already exists: admin@greenzone.com
2025-10-03 23:19:50.475 +04:00 [INF] Now listening on: https://localhost:7100
2025-10-03 23:19:50.512 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-03 23:19:50.512 +04:00 [INF] Hosting environment: Development
2025-10-03 23:19:50.512 +04:00 [INF] Content root path: C:\Users\ASUS\Desktop\Code Academy\BackEnd\FINAL PROJECT\GreenZone\API\GreenZone.API
2025-10-03 23:19:51.446 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/index.html - null null
2025-10-03 23:19:51.747 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/index.html - 200 null text/html;charset=utf-8 302.2139ms
2025-10-03 23:19:51.796 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - null null
2025-10-03 23:19:51.796 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/_vs/browserLink - null null
2025-10-03 23:19:51.802 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_framework/aspnetcore-browser-refresh.js - 200 16511 application/javascript; charset=utf-8 5.9501ms
2025-10-03 23:19:51.914 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/_vs/browserLink - 200 null text/javascript; charset=UTF-8 117.4299ms
2025-10-03 23:19:52.141 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - null null
2025-10-03 23:19:52.203 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 61.8207ms
2025-10-03 23:21:49.006 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-03 23:21:49.006 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-03 23:21:49.016 +04:00 [INF] CORS policy execution successful.
2025-10-03 23:21:49.016 +04:00 [INF] CORS policy execution successful.
2025-10-03 23:21:49.024 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 18.9625ms
2025-10-03 23:21:49.024 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 18.913ms
2025-10-03 23:21:49.032 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-03 23:21:49.032 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-03 23:21:49.035 +04:00 [INF] CORS policy execution successful.
2025-10-03 23:21:49.035 +04:00 [INF] CORS policy execution successful.
2025-10-03 23:21:49.059 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-03 23:21:49.059 +04:00 [INF] CORS policy execution successful.
2025-10-03 23:21:49.059 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.4868ms
2025-10-03 23:21:49.064 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-03 23:21:49.064 +04:00 [INF] CORS policy execution successful.
2025-10-03 23:21:49.082 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-03 23:21:49.097 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-03 23:21:49.112 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '03.10.2025 19:21:49'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-03 23:21:49.112 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '03.10.2025 19:21:49'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-03 23:21:49.131 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '03.10.2025 19:21:49'.
2025-10-03 23:21:49.131 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '03.10.2025 19:21:49'.
2025-10-03 23:21:49.131 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-03 23:21:49.131 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-03 23:21:49.136 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-03 23:21:49.136 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-03 23:21:49.348 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-10-03 23:21:49.354 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-03 23:21:49.356 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-03 23:21:49.369 +04:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-03 23:21:49.376 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-03 23:21:49.399 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-03 23:21:49.408 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-03 23:21:49.416 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 277.1112ms
2025-10-03 23:21:49.416 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 315.5711ms
2025-10-03 23:21:49.416 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 277.2297ms
2025-10-03 23:21:49.416 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-03 23:21:49.416 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-03 23:21:49.416 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-03 23:21:49.419 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 387.23ms
2025-10-03 23:21:49.419 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 387.2611ms
2025-10-03 23:21:49.419 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 355.7352ms
2025-10-03 23:21:49.437 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-03 23:21:49.437 +04:00 [INF] CORS policy execution successful.
2025-10-03 23:21:49.437 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.4408ms
2025-10-03 23:21:49.439 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-03 23:21:49.439 +04:00 [INF] CORS policy execution successful.
2025-10-03 23:21:49.440 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '03.10.2025 19:21:49'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-03 23:21:49.441 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '03.10.2025 19:21:49'.
2025-10-03 23:21:49.441 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-03 23:21:49.450 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-03 23:21:49.526 +04:00 [INF] Executed DbCommand (16ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-03 23:21:49.545 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-03 23:21:49.547 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 96.7165ms
2025-10-03 23:21:49.547 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-03 23:21:49.548 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 108.4246ms
2025-10-03 23:22:11.104 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/customer - null null
2025-10-03 23:22:11.105 +04:00 [INF] CORS policy execution successful.
2025-10-03 23:22:11.105 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/customer - 204 null null 0.9241ms
2025-10-03 23:22:11.108 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/customer - application/json null
2025-10-03 23:22:11.109 +04:00 [INF] CORS policy execution successful.
2025-10-03 23:22:11.109 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-03 23:22:11.109 +04:00 [INF] Route matched with {action = "GetAllCustomers", controller = "Customer"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCustomers() on controller GreenZone.API.Controllers.CustomerController (GreenZone.API).
2025-10-03 23:22:11.124 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[IdentityCard], [c].[IsDeleted], [c].[UpdatedAt], [c].[UserId], [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [o].[Id], [o].[CreatedAt], [o].[CustomerId], [o].[IsDeleted], [o].[OrderDate], [o].[OrderStatusId], [o].[ShippingAddress], [o].[TotalAmount], [o].[UpdatedAt], [p].[Id], [p].[Amount], [p].[CreatedAt], [p].[CustomerId], [p].[IsDeleted], [p].[PaymentDate], [p].[PaymentMethodId], [p].[RefundDate], [p].[Status], [p].[UpdatedAt]
FROM [Customers] AS [c]
INNER JOIN [AspNetUsers] AS [a] ON [c].[UserId] = [a].[Id]
LEFT JOIN [Orders] AS [o] ON [c].[Id] = [o].[CustomerId]
LEFT JOIN [Payments] AS [p] ON [c].[Id] = [p].[CustomerId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id], [a].[Id], [o].[Id]
2025-10-03 23:22:11.127 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CustomerDtos.CustomerReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-03 23:22:11.127 +04:00 [INF] Executed action GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API) in 17.7471ms
2025-10-03 23:22:11.127 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CustomerController.GetAllCustomers (GreenZone.API)'
2025-10-03 23:22:11.127 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/customer - 200 null application/json; charset=utf-8 18.7743ms
2025-10-03 23:22:11.130 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - null null
2025-10-03 23:22:11.130 +04:00 [INF] CORS policy execution successful.
2025-10-03 23:22:11.130 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 204 null null 0.2878ms
2025-10-03 23:22:11.132 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - application/json null
2025-10-03 23:22:11.132 +04:00 [INF] CORS policy execution successful.
2025-10-03 23:22:11.132 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '03.10.2025 19:22:11'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-03 23:22:11.133 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '03.10.2025 19:22:11'.
2025-10-03 23:22:11.133 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-03 23:22:11.133 +04:00 [INF] Route matched with {action = "GetBasketByCustomerId", controller = "Basket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketByCustomerId(System.Guid) on controller GreenZone.API.Controllers.BasketController (GreenZone.API).
2025-10-03 23:22:11.146 +04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__customerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CreatedAt], [t].[CustomerId], [t].[IsDeleted], [t].[UpdatedAt], [t0].[Id], [t0].[BasketId], [t0].[CreatedAt], [t0].[IsDeleted], [t0].[ProductId], [t0].[Quantity], [t0].[UpdatedAt], [t0].[Id0], [t0].[CategoryId], [t0].[CreatedAt0], [t0].[Description], [t0].[ImageUrl], [t0].[IsDeleted0], [t0].[MaxThickness], [t0].[MinThickness], [t0].[PricePerSquareMeter], [t0].[Title], [t0].[UpdatedAt0]
FROM (
    SELECT TOP(1) [b].[Id], [b].[CreatedAt], [b].[CustomerId], [b].[IsDeleted], [b].[UpdatedAt]
    FROM [Baskets] AS [b]
    WHERE [b].[IsDeleted] = CAST(0 AS bit) AND [b].[CustomerId] = @__customerId_0
) AS [t]
LEFT JOIN (
    SELECT [b0].[Id], [b0].[BasketId], [b0].[CreatedAt], [b0].[IsDeleted], [b0].[ProductId], [b0].[Quantity], [b0].[UpdatedAt], [p].[Id] AS [Id0], [p].[CategoryId], [p].[CreatedAt] AS [CreatedAt0], [p].[Description], [p].[ImageUrl], [p].[IsDeleted] AS [IsDeleted0], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt] AS [UpdatedAt0]
    FROM [BasketItems] AS [b0]
    INNER JOIN [Products] AS [p] ON [b0].[ProductId] = [p].[Id]
) AS [t0] ON [t].[Id] = [t0].[BasketId]
ORDER BY [t].[Id], [t0].[Id]
2025-10-03 23:22:11.147 +04:00 [INF] Executing OkObjectResult, writing value of type 'GreenZone.Contracts.Dtos.BasketDtos.BasketReadDto'.
2025-10-03 23:22:11.147 +04:00 [INF] Executed action GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API) in 13.7729ms
2025-10-03 23:22:11.147 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.BasketController.GetBasketByCustomerId (GreenZone.API)'
2025-10-03 23:22:11.147 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Basket/d493c786-865d-4854-ab1b-57b8250b1fd8 - 200 null application/json; charset=utf-8 15.5731ms
2025-10-03 23:22:11.222 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-03 23:22:11.222 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-03 23:22:11.223 +04:00 [INF] CORS policy execution successful.
2025-10-03 23:22:11.223 +04:00 [INF] CORS policy execution successful.
2025-10-03 23:22:11.223 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.8675ms
2025-10-03 23:22:11.223 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.8296ms
2025-10-03 23:22:11.223 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Category - null null
2025-10-03 23:22:11.223 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7100/api/Product - null null
2025-10-03 23:22:11.223 +04:00 [INF] CORS policy execution successful.
2025-10-03 23:22:11.223 +04:00 [INF] CORS policy execution successful.
2025-10-03 23:22:11.223 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Category - 204 null null 0.2364ms
2025-10-03 23:22:11.223 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7100/api/Product - 204 null null 0.2954ms
2025-10-03 23:22:11.225 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-03 23:22:11.225 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-03 23:22:11.225 +04:00 [INF] CORS policy execution successful.
2025-10-03 23:22:11.225 +04:00 [INF] CORS policy execution successful.
2025-10-03 23:22:11.226 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '03.10.2025 19:22:11'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-03 23:22:11.226 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '03.10.2025 19:22:11'.
2025-10-03 23:22:11.226 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '03.10.2025 19:22:11'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-03 23:22:11.226 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-03 23:22:11.226 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '03.10.2025 19:22:11'.
2025-10-03 23:22:11.226 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-03 23:22:11.226 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-03 23:22:11.226 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-03 23:22:11.233 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-03 23:22:11.233 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-03 23:22:11.234 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-03 23:22:11.234 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-03 23:22:11.234 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 7.7587ms
2025-10-03 23:22:11.234 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 8.0074ms
2025-10-03 23:22:11.234 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-03 23:22:11.234 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-03 23:22:11.235 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 9.6228ms
2025-10-03 23:22:11.235 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 9.6759ms
2025-10-03 23:22:11.236 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Category - application/json null
2025-10-03 23:22:11.236 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7100/api/Product - application/json null
2025-10-03 23:22:11.236 +04:00 [INF] CORS policy execution successful.
2025-10-03 23:22:11.236 +04:00 [INF] CORS policy execution successful.
2025-10-03 23:22:11.237 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '03.10.2025 19:22:11'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-03 23:22:11.237 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '03.10.2025 19:22:11'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-10-03 23:22:11.237 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '03.10.2025 19:22:11'.
2025-10-03 23:22:11.237 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30.09.2025 13:50:26', Current time (UTC): '03.10.2025 19:22:11'.
2025-10-03 23:22:11.237 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-03 23:22:11.237 +04:00 [INF] Executing endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-03 23:22:11.237 +04:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller GreenZone.API.Controllers.CategoryController (GreenZone.API).
2025-10-03 23:22:11.237 +04:00 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller GreenZone.API.Controllers.ProductController (GreenZone.API).
2025-10-03 23:22:11.249 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt], [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt]
FROM [Products] AS [p]
INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-10-03 23:22:11.249 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedAt], [c].[Description], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [p].[Id], [p].[CategoryId], [p].[CreatedAt], [p].[Description], [p].[ImageUrl], [p].[IsDeleted], [p].[MaxThickness], [p].[MinThickness], [p].[PricePerSquareMeter], [p].[Title], [p].[UpdatedAt]
FROM [Categories] AS [c]
LEFT JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Id]
2025-10-03 23:22:11.249 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.ProductDtos.ProductReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-03 23:22:11.249 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GreenZone.Contracts.Dtos.CategoryDtos.CategoryReadDto, GreenZone.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-03 23:22:11.249 +04:00 [INF] Executed action GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API) in 12.0544ms
2025-10-03 23:22:11.250 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.ProductController.GetAllProducts (GreenZone.API)'
2025-10-03 23:22:11.250 +04:00 [INF] Executed action GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API) in 12.2882ms
2025-10-03 23:22:11.250 +04:00 [INF] Executed endpoint 'GreenZone.API.Controllers.CategoryController.GetAllCategories (GreenZone.API)'
2025-10-03 23:22:11.250 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Product - 200 null application/json; charset=utf-8 13.9129ms
2025-10-03 23:22:11.250 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7100/api/Category - 200 null application/json; charset=utf-8 14.0757ms
